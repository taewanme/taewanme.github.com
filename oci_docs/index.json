[
{
	"uri": "/oci_docs/00_oci/",
	"title": "오라클 클라우드 사용자 가이드",
	"tags": [],
	"description": "오라클 클라우드, OCI 입문자를 위한 문서 사이트입니다. ",
	"content": " OCI(Oracle Cloud Infrastructure)는 오라클이 제공하는 클라우드 서비스입니다. OCI Docs는 오라클 클라우드 입문자와 사용자를 위하여 OCI 관련 문서를 정리하는 페이지입니다. OCI는 매주 신규 기능을 공개하고 있습니다. OCI 서비스 변경에 맞춰 다양한 서비스에 대한 문서를 정리하겠습니다.\nOCIDocs는 다음과 같은 문서를 만들고 지속적으로 업데이트하여 가능한 최신 상태를 유지할 예정입니다.\n OCI 기본 개념 OCI 서비스 개념 OCI 각 서비스 사용법 Tutorial OCI 최신 정보  Change Log    일자 패스 링크 변경내역     2020.03.18 OCI 퀵 스타트 \u0026gt;\u0026gt; VM 인스턴스 프로비저닝 OCI VM 고정 IP 설정 OCI VM에 예약 고정 공개 IP를 설정 가이드   2020.03.17 OCI 퀵 스타트 \u0026gt;\u0026gt; Autonomoud DB SQL Developer의 ADW 연결하기 ADW 인스턴스를 연결하는 SQL Developer 설정 가이드    "
},
{
	"uri": "/oci_docs/50.database_service/adb/adw/hands-on/",
	"title": "ADW Hands-on Labs",
	"tags": [],
	"description": "OCI ADW(Authonomous Data Warehouse) 기초 핸드온 가이드를 소개합니다.",
	"content": "ADW 핸드온은 OCI Autonomous Data Warehouse (ADW)에서 제공하는 기능들을 준비된 시나리오에 따라 실습을 하여 ADW에 대한 폭 넓은 이해와 함께 직접 경험 할 수 있도록 구성되었습니다.\n가장 먼저 ADW를 프로비저닝 하는 방법에서 부터, Oracle SQL Developer를 이용해 데이터베이스 접속 후 샘플 데이터를 이용하여 쿼리 수행, 성능 테스트, 워크로드를 관리하는 방법 등 ADW에서 제공되는 서비스들을 학습합니다. 이후 각 로컬 PC에 다운로드 받은 샘플 데이터 파일을 ADW에 직접 로딩 후 해당 데이터의 시각화를 위해 툴을 연결 및 설정하고 대시보드를 생성하는 실습 또한 함께 진행합니다.\n이번 실습을 통해서 Autonomous Data Warehouse가 제공하는 확장성 및 탄력성 등에 대해서 체험할 수 있습니다가이드에 뒷부분에 제공되는 추가 실습을 통해서 Cloud Object Storage Service에서 실제 데이터를 로딩 하는 방법, 인스턴스 관리 및 모니터링 방법 등을 실습하며 보다 심층적인 ADW서비스 기능들을 체험할 수 있습니다.\nADW 핸드온 랩은 다음과 같은 순서로 진행됩니다.\n ADW 인스턴스 생성     인스턴스 관리  \n 인스턴스 기본 조작: Console   \n 인스턴스 기본 조작: OCI CLI   \n 인스턴스 Scale Up/Dwon   \n ADW 관리자 비밀번호 재설정    \n ADW 지원 툴  \n SQL Developer: 설정 및 접속   \n SQL Developer Web 접속   \n APEX 서비스   \n OML Notebook    \n ADW 쿼리 성능 테스트  \n ADW 서비스 별 쿼리 성능   \n ADW OCPU와 쿼리 성능     \n "
},
{
	"uri": "/oci_docs/50.database_service/adb/adw/hands-on/performance/query_with_each_service/",
	"title": "ADW 서비스 별 쿼리 성능",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)에서 프로비저닝한 ADW 인스턴스의 SQL Developer 설정 방법을 정리합니다.",
	"content": " ADW는 데이터베이스에 접속하여 SQL과 Stored Procedure를 실행할 때 자원을 할당 정책을 정의하는 3개의 기본 서비스를 제공합니다. 사용하는 서비스에 따라서 동일한 쿼리를 수행할 때 할당되는 자원이 달라집니다. 이 문서에서는 4개 OCPU가 할당된 ADW 인스턴스에서 low 서비스와 high 서비스에 동일한 SQL을 수행하고 처리 시간이 달라지는 실험을 진행하겠습니다.\n이번 문서는 오라클 클라우드 Free Tier 계정에 ADW 인스턴스를 만들었다는 전제로 진행합니다. 현재 ADW 인스턴스가 없다면, 다음 문서를 참조하여 ADW 인스턴스(DemoADW)를 만드시기 바랍니다.\n ADW 인스턴스 생성     OCI ADW 인스턴스는 사전에 정의된 3개의 서비스를 제공합니다. 3개 서비스에서 동일한 쿼리를 수행하고 결과를 비교하는 실험을 다음과 같은 순서로 진행하겠습니다.\n ADW 사전 정의 서비스 서비스 별 쿼리 실행 시간 비교  사전 준비 테스트 쿼리 SQL 실행 테스트  테스트 결과 요약  \n ADW 사전 정의 서비스 ADW 인스턴스가 제공하는 Wallet 파일에 포함된 tnsnames.ora 파일에는 ADW 인스턴스를 식별하는 세 개의 데이터베이스 서비스 이름이 등록되어 있습니다. 이름 형식은 다음과 같습니다.\n\u0026lt;DATAASE_NAME\u0026gt;_\u0026lt;high|medium|low\u0026gt;  다음은 demoadw (ADW 인스턴스)가 제공하는 Wallet 파일(Wallet_DemoApp.zip)의 tns_names.ora에 정으된 서비스 예시입니다.\ndemoadw_high = (description= (retry_count=20) (retry_delay=3) (address=(protocol=tcps)(port=1522)(host=adb.us-ashburn-1.oraclecloud.com)) (connect_data=(service_name=w0a8icio6wvena7_demoadw_high.adwc.oraclecloud.com)) (security= (ssl_server_cert_dn=\u0026quot;CN=adwc.uscom-east-1.oraclecloud.com,OU=Oracle BMCS US,O=Oracle Corporation,L=Redwood City,ST=California,C=US\u0026quot;) ) ) demoadw_low = (description= (retry_count=20) (retry_delay=3) (address=(protocol=tcps)(port=1522)(host=adb.us-ashburn-1.oraclecloud.com)) (connect_data=(service_name=w0a8icio6wvena7_demoadw_low.adwc.oraclecloud.com)) (security=(ssl_server_cert_dn=\u0026quot;CN=adwc.uscom-east-1.oraclecloud.com,OU=Oracle BMCS US,O=Oracle Corporation,L=Redwood City,ST=California,C=US\u0026quot;) ) ) demoadw_medium = (description= (retry_count=20) (retry_delay=3) (address=(protocol=tcps)(port=1522)(host=adb.us-ashburn-1.oraclecloud.com)) (connect_data=(service_name=w0a8icio6wvena7_demoadw_medium.adwc.oraclecloud.com)) (security= (ssl_server_cert_dn=\u0026quot;CN=adwc.uscom-east-1.oraclecloud.com,OU=Oracle BMCS US,O=Oracle Corporation,L=Redwood City,ST=California,C=US\u0026quot;) ) )  이렇게 사전 정의된 각 서비스는 각각 다른 레벨의 성능 및 동시성을 제공합니다.\n high  예시 서비스 명: demoadw_high 특징  High 데이터베이스 서비스는 각 SQL 문에 최고 레벨의 자원을 제공하여 최고의 성능을 보임 가장 적은 수의 동시 SQL 문을 지원 모든 SQL 문은 데이터베이스의 모든 CPU 및 IO 리소스를 사용 실행할 수있는 동시 SQL 문의 수는 3(이 수는 데이터베이스의 OCPU 수와 무관)   medium  예시 서비스 명: demoadw_medium 특징  medium 데이터베이스 서비스는 각 SQL 문에 더 낮은 수준의 리소스를 제공 잠재적으로 더 낮은 수준의 성능을 제공 high 보다 더 많은 동시 SQL 문을 지원 실행할 수있는 동시 SQL 문의 수는 데이터베이스의 OCPU 수에 따라 달라짐   low  예시 서비스 명: demoadw_low 특징  Low 데이터베이스 서비스는 각 SQL 문에 최소 수준의 리소스를 제공 가장 많은 수의 동시 SQL 문을 지원 모든 SQL 문은 데이터베이스에서 단일 CPU와 여러 IO 리소스를 사용 실행할 수있는 동시 SQL 문 수는 OCPU 수의 최대 300배    서비스 별 쿼리 실행 시간 비교 Oracle SQL Developer에서 서비스 별로 3개의 커넥션을 만들고 접속합니다. 3개 서비스는 다음 이미지와 같이 각각 다른 서비스를 선택하여 구성합니다.\n사전 준비 실습을 위하여 ADW 인스턴스가 필요합니다. 실습에 사용할 ADW 인스턴스는 4개 OCPU이 할당된 인스턴스를 사용합니다.\n실험에 사용할 인스턴스의 OCPU가 4개 미만이라면 다음 문서를 참조하여 OCPU 수를 수정하시기 바랍니다.\n ADW Scale Up\u0026amp;Down     SQL을 수행하는 도구로 Oracle SQL Developer를 사용할 것입니다. Oracle SQL Developer 설치와 설정이 필요하시다면 다음 문서를 참조하여 준비하시기 바랍니다.\n SQL Developer: 설정 및 접속     다음과 같이 2개 서비스로 SQL Developer 커넥션을 설정하시기 바랍니다.\n테스트 쿼리 다음 SQL을 앞에서 등록한 2개 커넥션으로 각각 ADW에 접속하여 수행할 것입니다.\nselect /*+ no_result_cache */ c_nation, s_nation, d_year, sum(lo_revenue) as revenue from ssb.customer, ssb.lineorder, ssb.supplier, ssb.dwdate where lo_custkey = c_custkey and lo_suppkey = s_suppkey and lo_orderdate = d_datekey and c_region = 'ASIA' and s_region = 'ASIA' and d_year \u0026gt;= 1992 and d_year \u0026lt;= 1997 group by c_nation, s_nation, d_year order by d_year asc, revenue desc  위 SQL은 캐쉬를 사용하지 않는 SQL Hint를 포함합니다.\nSQL 실행 테스트 위에서 등록한 demoadw-high 커넥션과 demoadw-low 커넥션으로 접속하여 위 쿼리를 수행합니다.\n테스트 결과 실행 결과는 다음과 같습니다.\n   커넥션 이름 사용하는 서비스 쿼리 실행 시간     demoadw-high demoadw-high 35.892초   demoadw-low demoadw-low 127.611초    위 실행 결과와 같이 HIGH 데이터베이스 서비스에서 실행되는 쿼리가 LOW 데이터베이스 서비스에서 실행되는 쿼리보다 더 빨리 실행되는 것을 확인할 수 있습니다. 이 것은 High 데이터베이스 서비스가 Low 데이터베이스 서비스보다 더 많은 자원을 쿼리 실행 프로세스에 할당하기 때문입니다.\n요약  HIGH 데이터베이스 서비스는 실행되는 각 query에 대해 최대 리소스를 사용하여 쿼리수행 시 높은 parallel 수행을 제공 MEDIUM 데이터베이스 서비스는 HIGH 데이터베이스 서비스와 비교해 더 낮은 수치의 parallel 쿼리수행하지만 더 많은 동시성을 제공 LOW 데이터베이스 서비스는 가장 적은 리소스를 제공, 동시 쿼리수는 OCPU 수 X 300 이상 지원  ADW 인스턴스에 요구하는 성능 및 운영 요구사항에 따라 알맞은 데이터베이스 서비스를 선택하여 운영하는 것이 가능합니다.\n"
},
{
	"uri": "/oci_docs/98_misc_tips/tools/install_sqldeveloper/",
	"title": "SQL Developer 설치: Mac OS X",
	"tags": [],
	"description": "SQLDeveloper 설치법을 정리합니다.",
	"content": " Oracle SQL Developer(이하 SQL Developer)는 Oracle 데이터베이스에 접속하여 SQL 작업을 돕는 데이터베이스 전용 IDE(Integrated Development Environment, 통합 개발 환경)입니다. SQL Developer는 사용에 제약이 없는 무료 툴입니다. Java를 기반으로 개발되었기 때문에 Oracle SQL Developer를 설치하기 위해서는 java 8 이상이 설치되어 있어야 합니다.\n이 문서는 Mac OS X를 기준으로 화면을 정리했습니다. Window 설치 역시 GUI로 설치되기 때문에 설치 과정의 거의 유사합니다.\n설치 절차(Mac OS X) SQL Developer를 설치하기 위해서는 다음 URL에서 설치 파일을 다운로드해야 합니다.\n Oracle SQL Developer 공식 다운로드 사이트     위 링크 페이지는 다음 이미지와 같은 형식으로 제공됩니다. Windows, Mac OS X, Linux 설치 파일을 제공합니다. Windows는 Java가 포함된 버전과 Java를 포함하지 않는 버전 두가지를 제공합니다. 설치 파일 사이즈는 약 300~400MB 정도도입니다\nJava를 별도로 설치하여 사용할 경우 Java 8 버전 이상을 권장합니다.\n사용할 설치 유형을 클릭하면 다음 이미지와 같이 확인 메시지가 출력됩니다. 라이센스 체크 박스를 체크하고 Download 버튼을 클릭합니다.\nDownload 버튼을 클릭하면 다음같이 oracle.com OTN 계정 로그인 화면이 출력됩니다. oracle.com OTN 계정 로그인을 완료하면 설치 파일을 다운로드 됩니다.\nzip 파일을 다운로드하고 압축을 풀면 다음과 같이 설치 파일이 만들어 집니다. 설치 파일을 더블 클릭하며 SQL Developer 설치가 시작됩니다.\nMac OS X의 경우 다운로드 파일 앱 설치에 대한 확인창이 출력됩니다.\n기존에 SQL Developer가 설치된 적이 있거나 기존에 설정 정보가 설치 컴퓨터에 남아 있을 경우, 기존 정보를 가져올 것인지를 확인하는 팝업이 출력됩니다. 기존 정보를 가져오지 않을 경우 다음 이미지와 같이 NO 버튼을 클릭합니다.\n설치는 다음과 같이 대부분 자동화되어 진행됩니다.\n설치가 완료되면 다음과 같은 SQL Developer 윈도우가 출력됩니다.\nMac OS X 설치 이슈 Mac OS X에 SQL Develope를 설치할 때 다음과 같은 이슈가 발생할 수 있습니다.\nSQLDeveloper 오류: Locale not recoginized Mac OS X 운영체제 업데이트한 다음에 SQL Develoepr로 데이터베이스 접속을 시도하면, Locale not recoginized 이슈가 발생할 수 있습니다. 이 이슈는 다음 문서로 해결할 수 있습니다.\n SQLDeveloper 오류: Locale not recoginized     "
},
{
	"uri": "/oci_docs/50.database_service/streaming/",
	"title": "Streaming",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)의 Streaming 서비스에 대한 사용자 가이드 문서입니다.",
	"content": " OCI Streaming 서비스는 OCI에서 제공하는 완전 관리형 Apache Kafka 서비스입니다. 여러 애플리케이션과 다양한 소스에서 지속적으로 유입되는 대량의 스트림 데이터를 수집하여 즉시 처리하는 서비스입니다. OCI Streaming은 완전 관리형 서비스이기 때문에 Apache Kafka 클러스터를 관리 운영하는 부담없이, 이 서비스를 이용하여 확장성과 데이터 안전성이 뛰어난 스티림 인프라를 확보할 수 있습니다.\nOCI Streaming 특징 OCI Streaming 서비스는 다음과 같은 특징을 갖습니다.\n   특징 설명     OCI 네이브트 서비스 (OCI Native Service) OCI 인프라 위에서 OCI 관리 체계로 개발된 서비스입니다.   관리형 카프카 서비스 (Managed Kafka Service) Apache Kafak 기술을 기반으로 OCI Native 서비스로 개발된 스트리밍 서비스입니다.   완전 관리형 서비스 (Fully-Managed Service) OCI에서 인프라 관리를 전담하는 완전 관리형 서비스입니다. 인프라 및 Kafka 클러스터 운영 부담을 줄일 수 있습니다.   데이터 내구성 (Data Durability) Streaming에 게시된 데이터는 저장 안전성을 보장합니다.   가용성\u0026amp;안전성(Availability) 3 AD 리전에서는 3개 AD에 Partition을 분산하여 배포하고 단일 AD 리전에서는 Fault Domain에 파티션을 분산하여 배포합니다. 물리적으로 분할된 서버에 파이션을 배포하여, 인프라 장애에 대비합니다.   확장성 (Scability) Streaming 서비스에 유입되는 스트리밍 데이터의 규모에따라 탄력적인 확장이 가능합니다.   탄력적 가격 (Elastic Pricing) 유입 데이터의 확장에따라 확대되는 Partition의 규모에 따라 탄력적인 서비스 이용 금액이 \u0026lsquo;Pay as you go\u0026rsquo;(사용 기준 부과)로 계산됩니다.   Kafka 호환성 (Kafka Compability) Kafka API 호환성을 제공합니다. Streaming이 완전 관리형 서비스이기 때문에 Kafka 서버 관리 API는 이용이 제한됩니다. Consumer와 Producer API는 호환성을 제공합니다.   OCI 네이티브 인터페이스(OCI Native Interface) Streaming 서비스를 관리하는 인터페이스를 CLI(Command Line Interface) 툴과 OCI SDK로 제공합니다.   OCI 메트릭 관리 (OCI Metric Management) Streaming의 운영 메트릭을 OCI에서 통합관리됩니다.    OCI Streaming을 다음과 같은 시나리오에 적용할 수 있습니다.\n 메시징 처리 메트릭 및 로그 수집 웹 페이지 클릭 스크림 수집 인프라스트럭처와 앱 이벤트 처리  "
},
{
	"uri": "/oci_docs/50.database_service/streaming/overview/",
	"title": "Streaming 서비스",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)의 Streaming 서비스를 소개합니다.",
	"content": " OCI Streaming 제약 사항 OCI Streaming은 다음과 같은 제약을 갖습니다.\n 메시지가 스트림에 저장되는 최대 기간: 7일 단일 메시지 최대 사이즈: 1MB 각 파티션은 최대 초당 1MB의 데이터를 처리할 수 있음 각 파티션은 최대 초당 5 번 Read API 호출을 처리와 1MB의 저장을 처리 각 파티셔은 최대 초당 읽기 2MB와 초당 쓰기 1MB를 처리 각 테넌시는 5개 파티션 제약 설정이 되어 있음, 필요시 Resource 증설 요청 (SR)  API에서 파이션은 문자열로 표시됨 5개 파이션을 갖는 스트림을 생성할 때, - 스트링은 - \u0026ldquo;0\u0026rdquo; - \u0026ldquo;1\u0026rdquo; - \u0026ldquo;2\u0026rdquo; - \u0026ldquo;3\u0026rdquo; - \u0026ldquo;4\u0026rdquo; - \u0026ldquo;5\u0026rdquo;\noffset은 밀집도가 높지 않음 Offset은 숫자가 커짐 그 값은 항상 1씩 올라가지 않음 미래에 offset 계산을 하려하지 말것 예를 들어서 같은 파티션에 메시지가 게시될 때, 첫번째 메시지는 offsetdl 42이고 두번째 메시지는 offset이 45일 수 있음 43과 44는 존재하지 않을 수 있음\n스트림을 만드는 방법 - oci console - API\n스트림은 특정 리전과 tenancy에서 생성됨 stream 데이터는 전체 리전에 복제됨 AD 장애에 대해서 내고장성을 갖춤 고가용성을 갖춤\n프로비저닝할 때 파티션을 지정 파이션 생성 시간: 10초 소요\nThe number of partitions for your stream depends on the throughput expectations of your application (expected throughput = average recond size x maximum number of records written per sectond).\n 스트림의 파티션 수는 응용 프로그램의 예상 처리량에 따라 변함 (예상 처리량 = 평균 수신 크기 x 초당 기록 된 최대 레코드 수).  스트림의 처리량 - OCI 스트림의 처리량은 파이션으로 정의됨 - 파티션 당 1MB/sec 저장과 2MB/sec 읽기 지원\n파티션에 초당 요청 수 - 1,000개 요청 발생 가능\nSDK - https://github.com/oracle/oci-java-sdk/releases - https://github.com/oracle/oci-python-sdk/releases - https://github.com/oracle/oci-ruby-sdk/releases - https://github.com/oracle/oci-go-sdk/releases\n 스트림에  How do I emit data into a stream? Once a stream is created and active you can publish messages. For publishing, you can use the Write API (putMessages). The message will be published to a partition in the stream. If there is more than one partition, the partition where the message will be published is calculated using the message\u0026rsquo;s key.\n스트림에 메시지 게시 - 스트림이 생성되고 활성화되면 메시지 게시 가능 - 게시 방법: Write API, putMessage - 메시지는 한개 파티션에 저장됨 - 피티션 선정에 message key로 계산됨\nMessage에 Key가 null이면, 키는 value의 일부분으로 계산됨 null을 갖는다고해서 도일한 파티션이라고 예측할 수 없음, 왜냐면 파티션 스키마는 변경됨 null key를 넘으면 랜점 파티션에 메시지르 넣은 효율적인 방밥\nOCI Streaming에서 순서를 보증하는 방법 - 동일한 Value를 갖는 메시지를 동일한 파ㅣ션에 넣는 방법 - 이 메시지에 동일한 key를 넣는다.\n메시지의 저장 안전성을 보증하는 방법 - OCI Streaming API가 에러 없이 putMessage의 답변을 보내면, 해당 메시지는 안전하게 저장된 상태\n최대 크기 이상을 요청한다면? - 용량을 초과하면 request를 거부하고 error eception을 발생 - 용량이 1M 이상인것\u0026hellip;. - 1초에 5번 이상을 날려 보자\u0026hellip;\n Throttle 메나니즘 다음 임계점을 초과할 때 발생 됨\n GetMessages: 초당 5번 호출 혹은 파티션당 2MB/s  1MB 이상 메시지 처리법\n Object Storage를 경유할 것 Chunking으로 잘라서 처리할 것  date 지원 포멧\n ISO-8601  메시지를 게시하면서 스트림 서비스의 파티션 수와 offset을 획득하는 방법\n PutMessagesResultsEntry 클래스의\n getPartition 사용 getOffset 사용      Partial failure?\n Trottling때문에 Partial failure 발생 가능 서비스 리턴  Status Code 200   OSS는 Free Tiral로 제공하지 않음\n  consumer의 gap을 알아내는 법 - 현재 시간과 time stamp q비교 차이가 커지면\u0026hellip;\u0026hellip; 지연되는것 - producer가 더 빠른것\ncorsor 타입 - TRIM_HORIZON, AT_OFFSET, AFTER_OFFSET, AT_TIME, and LATEST. F\ncursor는 null이 아니다. 5분귀 expired consuming을 계속하는 한, cursor를 다시 만들 필요는 없음 - GetMessages - GetMessages, Commit, and Heartbeat은 다음 호출을 위한 cursor를 반환\n얼마나 많은 메시지를 얻는가? from getMessage - GetMessageRequest의 getLimit는 최대수를 반환 - 10,000까지 지정 가능 - 서비스는 가능한 메시지 반환\n스트림의 throutput 초과를 피하기 위해서 Consider your average message size to avoid exceeding throughput on the stream.\nStreaming service getMessage batch sizes are based on the average message size published to the particular stream.\nHow long does an instance have to heartbeat before timing out? - o heartbeat 34초 타임아웃efore the 30-second timeout. For example, if a message is taking too long to process, we recommend that the instance send a heartbeat.\nconsumer groups - 각 인스턴스는 아하 이상의 파이션으로 부터 메시지를 받는다. - 자동으로 할당됨 - 동일한 메새지를 다른 인스턴스에 전달되지 않음 - 인스턴스 확장 가능, 새로운 인스턴스가 그룹에 조인 Consumer groups provide the following advantages:\n=========\n예제 - 다시 읽기 offset 지정 https://blogs.oracle.com/cloud-infrastructure/extending-oracle-streaming-with-kafka-compatibility https://blogs.oracle.com/cloud-infrastructure/announcing-oracle-cloud-infrastructure-streaming\nOCI Streaming 서비스의 가격 모델 원친은 PAYG(Pay-as-You-Go, 사용 기준 과금 모델)입니다. Streaming 서비스에 대한 선불 금액이나 최소 비용은 없습니다. 오로지 자원을 사용한 만큼 비용으로 계산됩니다.\nGET/PUT request price (GigaBytes of data transferred) Please refer to the pricing guide for actual pricing of OCI Streaming.\nLet\u0026rsquo;s consider a scenario where a data producer puts 500 records per second in aggregate and each record is 2kB. The customer wants to egress/retrieve data at a rate twice that of ingress. Also the customer wants to store this data for 7 days.\nPrice calculation/day (just as an example)\nEach record size = 4kB (rounded to 4kB for any record less than 4kB)\nIn this scenario, total amount of data produced per day = 500 * 4 * 24 * 60 * 60 kB = 172.8 GB Total amount of data retrieved = Twice that of Produce = 2*172.8 GB = 345.6 GB PUT Request price/day = $172.8 * $xx= $A GET Request price/day = $345.6 * $xx = $B Data storage cost = $172.8*247$yy = $C Total bill/day = $(A + B + C) Optional:\nExtended data retention is an optional cost determined by the amount of additional days of retention beyond the default 24-hour retention (GigaBytes of storage per hour)\n참고 문서  https://www.oracle.com/kr/big-data/streaming/faq.html  "
},
{
	"uri": "/oci_docs/10_quickstart/adb/basic_adw_provisioning/",
	"title": "ADW 인스턴스 생성",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)에서 ADW 인스턴스를 프로비저닝하는 방법을 소개합니다.",
	"content": " 이번 문서는 오라클 클라우드 Free Tier 계정을 생성하고 로그인한 상황을 전제로 합니다. 만약에 현재 오라클 클라우드 계정이 없는 상태라면, 다음 문서를 참조하여 오라클 클라우드 계정을 만들고 OCI 콘솔에 로그인하시기 바랍니다.\n OCI FREE TIER 계정 등록 Free Tier 계정 로그인  ADW는 Autonomous Databas의 DW 타입 서비스로 ExaData의 클라우드 DW 서비스입니다. ADW는 Autonomous 서비스 관리형 서비스이며 성능 및 운영의 더 높은 수준의 자율운영을 강조한 서비스입니다.\n이번 문서에서는 OCI Console에서 Autonomous Database 인스턴스(ADW 타입)를 생성하는 기본 절차를 소개합니다. OCI ADW 인스턴스 생성 문서는 다음과 같은 목차로 진행 됩니다.\n 1. 사전 준비  1.1 OCI 자원 준비  2. ADW 인스턴스 생성 OCI 콘솔에서 ADW 관리  ADW Scale-up/down ADW 시작/종료 ADW 인스턴스 제거  서비스 툴 사용  \n 1. 사전 준비 Autonomous Database 인스턴스(ADW 타입) 생성 문서는 다음과 같은 사항이 준비되어 있다고 가정하고 진행합니다.\n1.1 OCI 자원 준비 다음 자원이 없다면 \u0026ldquo;자원 생성 참조 문서\u0026ldquo;를 참조하여 해당 자원을 생성하시기 바랍니다.\n   자원 유형 자원 이름 소속 Compartment 추가 설명 자원 생성 참조 문서     Compartment sanbox root \u0026gt; sandbox . Compartment 추가       2. ADW 인스턴스 생성 OCI 콘솔에 로그인한 수에 다음 메뉴 패스로 ADW 관리 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Autonomous Data Warehouse 위 메뉴 패스를 실행하면 다음과 같이 Autonomous Database 관리 페이지로 이동합니다. Autonomous Database 관리 페이지에서 Compartment에 sandbox를 선택합니다. 그리고 \u0026ldquo;create Autonomous Database\u0026rdquo; 버튼을 클릭하면 \u0026ldquo;Create Compute Instance\u0026rdquo; 페이지로 이동합니다.\n\u0026ldquo;Create Compute Instance\u0026rdquo; 페이지에서 각 입력항목에 다음과 같은 값을 입력합니다.\n   설정 항목 설정값 설명     Comparment sandbox    Display Name demo adw 자원을 구별하기 위해서 출력되는 데이터베이스 이름   Database Name DemoAdw 데이터베이스 이름, 데이터베이스 설정에 이용   Workload Type Data Warehouse 버튼 선택   Deployment Type Shared Infrastructure 버튼 선택   Always Free Disable    Database Version 19c 18c를 선택해도 상관 없음   OCPU Count 1    Storgae(TB) 1    Auto Scaling 체크하지 않음    Password Welcome123456    Confirm Password Welcome123456    Allow Secure access from everywhere 체크 공개 영역에 ADW 인스턴스 생성   License Type Bring Your Own Lincese(BYON)     다음 이미지는 위 설정 값을 입력한 결과입니다. 위 설정값을 입력하고 \u0026ldquo;Create Autonomous Database\u0026rdquo; 버튼을 클릭합니다.\n\u0026ldquo;Create Autonomous Database\u0026rdquo; 버튼을 클릭하면 다음 이미지와 같이 Autonomous Dataase 상세 페이지로 이동합니다. 인스턴스 생성에 2분정도 걸립니다. 인스턴스가 생성되면 다음과 같이 아이콘 색깔이 초록색이 됩니다.\nOCI 콘솔에서 ADW 관리 OCI Consoel에서 ADW를 Scale-up, 종료, 제거할 수 있습니다.\nADW Scale-up/down Autonomous Database는 무중단 Scale-up을 지원합니다. Autonomous Database 상세 페이지에서 \u0026ldquo;Scale up/down\u0026rdquo; 버튼을 클릭하고 Cpu 갯수와 스토리지 크기를 조정할 수 있습니다.\n아래 그림과 같이 Instance 상태가 Scaling in Progress 상태로 변경됩니다. Scaling in Progress 상태에서도 ADW 인스턴스는 정상적으로 동작합니다.\nADW 시작/종료 ADW 인스턴스가 시작된 상태에서는 다음과 같이 메뉴로 ADW 인스턴스를 정지할 수 있습니다. ADW 인스턴스가 종료되면 ADW 스토리지 가격만 부과됩니다. 정지된 ADW 인스턴스는 언제든지 시작할 수 있고 데이터는 그래도 유지됩니다.\nMore Actions  Stop ADW 인스턴스가 종료된 상태에서는 다음과 같이 메뉴로 ADW 인스턴스를 시작할 수 있습니다.\n(Autonomous Database 상세 페이지)More Actions  Start ADW 인스턴스 제거 ADW 인스턴스를 다음과 같이 메뉴로 제거할 수 있습니다. 인스턴스를 제거하면 데이터를 복구할 수 없습니다.\n(Autonomous Database 상세 페이지)More Actions  Terminate 서비스 툴 사용 ADW 인스턴스는 3가지 서비스 툴을 제공합니다.\n   서비스 명 설명     Oracle APEX Oracle APEX 개발 / 관리 환경   SQL Developer Web SQLDeveloper 웹 버전, 웹 기반 SQL UI 도구   Oracle Machine Learning 노트북 Oracle Machine Learning을 위한 Apache Zeppelin 노트북    이 서비스는 Autonomous Database 상세 페이지에서 다음과 같은 메뉴 페스로 접근할 수 있습니다.\n(Autonomous Database 상세 페이지)Service Console  개발 (서비스 콘솔 페이지 메뉴) 각 메뉴를 클릭하면 개별 서비스 페이지가 오픈됩니다.\n"
},
{
	"uri": "/oci_docs/50.database_service/adb/adw/hands-on/basic_adw_provisioning/",
	"title": "ADW 인스턴스 생성",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)에서 ADW 인스턴스를 프로비저닝하는 방법을 소개합니다.",
	"content": " ADW는 Autonomous Databas의 DW 타입 서비스입니다. ADW는 완전 관리형 서비스이며 기본 PaaS 서비스와 비교해서 더 높은 수준의 자율 운영성을 제공하는 서비스입니다. 이번 문서에서는 OCI Console에서 Autonomous Database 인스턴스(ADW 타입)를 생성하는 기본 절차를 소개합니다.\n이 문서는 오라클 클라우드 Free Tier 계정을 생성했고 로그인한 상태라는 가정으로 진행합니다. 현재 오라클 클라우드 계정이 없는 상태라면, 다음 문서를 참조하여 오라클 클라우드 계정을 만들고 OCI 콘솔에 로그인하시기 바랍니다.\n  OCI FREE TIER 계정 등록 Free Tier 계정 로그인  이 문서를 진행하기 위해서는 추가로 다음 자원이 준비되어 있어야 합니다. 다음 자원이 없다면 \u0026ldquo;자원 생성 참조 문서\u0026ldquo;를 참조하여 해당 자원을 생성하시기 바랍니다.\n   자원 유형 자원 이름 소속 Compartment 추가 설명 자원 생성 참조 문서     Compartment sanbox root \u0026gt; sandbox . Compartment 추가       OCI ADW 인스턴스를 생성하는 과정을 다음과 같은 목차로 진행 됩니다.\n ADW 인스턴스 생성  \n ADW 인스턴스 생성 OCI 콘솔에 로그인한 수에 다음 메뉴 패스로 ADW 관리 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Autonomous Data Warehouse 위 메뉴 패스를 실행하면 다음과 같이 Autonomous Database 관리 페이지로 이동합니다. Autonomous Database 관리 페이지에서 Compartment에 sandbox를 선택합니다. 그리고 \u0026ldquo;create Autonomous Database\u0026rdquo; 버튼을 클릭하면 \u0026ldquo;Create Compute Instance\u0026rdquo; 페이지로 이동합니다.\n\u0026ldquo;Create Compute Instance\u0026rdquo; 페이지에서 각 입력항목에 다음과 같은 값을 입력합니다.\n   설정 항목 설정값 설명     Comparment sandbox    Display Name demo adw 자원을 구별하기 위해서 출력되는 데이터베이스 이름   Database Name DemoAdw 데이터베이스 이름, 데이터베이스 설정에 이용   Workload Type Data Warehouse 버튼 선택   Deployment Type Shared Infrastructure 버튼 선택   Always Free Disable    Database Version 19c 18c를 선택해도 상관 없음   OCPU Count 1    Storgae(TB) 1    Auto Scaling 체크하지 않음    Password Welcome123456    Confirm Password Welcome123456    Allow Secure access from everywhere 체크 공개 영역에 ADW 인스턴스 생성   License Type Bring Your Own Lincese(BYON)     다음 이미지는 위 설정 값을 입력한 결과입니다. 위 설정값을 입력하고 \u0026ldquo;Create Autonomous Database\u0026rdquo; 버튼을 클릭합니다.\n\u0026ldquo;Create Autonomous Database\u0026rdquo; 버튼을 클릭하면 다음 이미지와 같이 Autonomous Dataase 상세 페이지로 이동합니다. 인스턴스 생성에 2분정도 걸립니다. 인스턴스가 생성되면 다음과 같이 아이콘 색깔이 초록색이 됩니다.\n"
},
{
	"uri": "/oci_docs/50.database_service/adb/adw/hands-on/basic_management/instance_start_and_stop/",
	"title": "인스턴스 기본 조작: Console",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)에서 프로비저닝된 ADW 인스턴스를 시작, 종료, 삭제하는 방법을 정리합니다.",
	"content": " ADW 기본 관리 ADW 인스턴스를 Scale Up\u0026amp;Dwon하는 실습은 다음과 같은 목차로 진행됩니다.\n ADW 기본 관리  ADW 상세 페이지 이동 ADW 인스턴스 시작 ADW 인스턴스 종료 ADW 인스턴스 제거   \n ADW 상세 페이지 이동 OCI 콘솔의 ADW 인스턴스 상세 페이지에서 ADW 인스턴스를 시작하고 종료할 수 있습니다. 다음 메뉴 패스를 통해서 DemoAdw ADW 인스턴스 상세 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Autonomous Data Warehouse  sandbox 컴파트먼트 선택  DemoAdw 링크 클릭 위 이미지에서 DemoAdw 링크를 클릭하면 DemoAdw 상세 페이지로 이동합니다. 아래 이미지에서 DemoAdw 인스턴스는 정지된 상태입니다.\nADW 인스턴스 시작 DemoAdw 인스턴스 상세 페이지에서 다음 메뉴를 통해서 정지된 인스턴스를 시작할 수 있습니다.\nMore Actions  Start DemoAdw ADW 인스턴스가 정상적으로 실행되면 DemoAdw 인스턴스 상세 페이지는 다음과 같이 변경됩니다.\nADW 인스턴스 종료 DemoAdw 인스턴스 상세 페이지에서 다음 메뉴를 통해서 인스턴스를 정지할 수 있습니다.\nMore Actions  Stop DemoAdw ADW 인스턴스가 정상적으로 종료되면 DemoAdw 인스턴스 상세 페이지는 다음과 같이 변경됩니다.\nADW 인스턴스 제거 DemoAdw 인스턴스 상세 페이지에서 다음 메뉴를 통해서 인스턴스를 제거할 수 있습니다.\nMore Actions  Terminates 인스턴스 삭제를 확인하기 위해서 ADW 데이터베이스 이름을 입력하고 \u0026ldquo;Terminate Autonomous Database\u0026rdquo; 버튼을 클릭합니다.\nDemoAdw ADW 인스턴스가 정상적으로 제거되면 DemoAdw 인스턴스 상세 페이지는 다음과 같이 변경됩니다.\n"
},
{
	"uri": "/oci_docs/00_oci/oci_services/",
	"title": "OCI 주요 서비스",
	"tags": [],
	"description": "오라클 클라우드, OCI를 구성하는 서비스를 정리합니다. ",
	"content": ""
},
{
	"uri": "/oci_docs/10_quickstart/object_storate/add_bucket_and_object/",
	"title": "OCI Console로 Bucket 추가",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)의 Object Storage에서 Bucket을 추가하는 방법을 소개합니다.",
	"content": " 이번 문서는 오라클 클라우드 Free Tier 계정을 생성하고 로그인한 상황을 전제로 합니다. 만약에 현재 오라클 클라우드 계정이 없는 상태라면, 다음 문서를 참조하여 오라클 클라우드 계정을 만들고 OCI 콘솔에 로그인하시기 바랍니다.\n OCI FREE TIER 계정 등록 Free Tier 계정 로그인  OCI Console에서 Object Storage에 Bucket을 추가하고 파일을 등록하는 절차를 다룹니다. 이 문서는 다음과 같은 목차로 진행됩니다.\n 1. 사전 준비  1.1 OCI 자원 준비  2. Bucket 추가와 파일 업로드  \n 1. 사전 준비 이 문서는 다음과 같은 자원과 파일이 이미 만들어져 있다는 것을 가정하고 진행합니다.\n1.1 OCI 자원 준비 다음 자원이 없다면 \u0026ldquo;자원 생성 참조 문서\u0026ldquo;를 참조하여 해당 자원을 생성하시기 바랍니다.\n   자원 유형 자원 이름 소속 Compartment 추가 설명 자원 생성 참조 문서     Compartment sanbox root \u0026gt; sandbox . Compartment 추가       2. Bucket 추가와 파일 업로드 OCI Console에서 다음 메뉴 패스로 Object Storage 관리 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Object Storage  Object Storage Object Storage 관리 페이지에서 Compartment를 sandbox로 지정하고 \u0026ldquo;Create Bucket\u0026rdquo; 버튼을 클릭합니다.\n\u0026ldquo;Create Bucket\u0026rdquo; 버튼을 클릭하면, Create Bucket 입력 폼이 출력됩니다. 입력폼에 다음 표의 입력 값을 설정하고 \u0026ldquo;Create Bucket\u0026rdquo; 버튼을 클릭합니다.\n   설정 항목 설정값 설명     Bucket Name demo_bucket    Storage Tier Strandard 체크    Object Event 체크하지 않음    Encrpytion Encryption Using Oracle Managed Keys 체크     위 입력값을 설정하면 다음과 같은 상태가 됩니다.\n버킷이 만들어지면 다음과 같은 버킷 상세 페이지로 이동합니다. demo_bucket에 파일을 업로드하기 위해서 버킷 상세 페이지의 \u0026ldquo;Upload Objects\u0026rdquo; 버튼을 클릭합니다.\nSelect Files 링크를 클릭하고 업로드할 파일을 선택합니다. 파일을 지정하면 다음 이미지와 같이 업로드할 파일명이 출력됩니다. 그리고 \u0026ldquo;Upload Objects\u0026rdquo; 버튼을 클릭합니다.\n파일 업로드가 정상적으로 처리되면 파일 상태는 \u0026ldquo;Finished\u0026ldquo;로 출력됩니다. \u0026ldquo;Close\u0026rdquo; 버튼을 클릭합니다.\ndemo_bucket 버킷 상세 페이지에 버킷에 저장된 파일 목록이 출력됩니다.\n버킷 파일 목록의 오른쪽 메뉴를 클릭하면 해당 파일을 조착하는 메뉴가 출력됩니다. 이 메뉴를 이용하여 파일 삭제, 복사, 이름 변경, 접근 URL 생성등 작업을 할 수 있습니다.\n"
},
{
	"uri": "/oci_docs/10_quickstart/ha_with_load_balancer/checking_resources/",
	"title": "OCI 자원 상태 확인",
	"tags": [],
	"description": "OCI Load Balancer를 구성하기 위해서 ",
	"content": "원할한 진행을 위해서는 다음과 같은 OCI 자원이 준비되어 있어야 합니다. 이 절에서는 다음 두 가지 자원 생성 상태를 확인할 것입니다.\n Compartment: root/sandbox Virtual Cloud Network: demo_vcn  private subnet 1개 public subnet 1개   Virtual Network Network 관리 페이지에서 Compartment와 VCN 프로비저닝 상태를 확인합니다. Virtual Network Network 관리 페이지는 다음 메뉴 패스로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Networking  Virtual Cloud Network Virtual Network Network 관리 페이지에서 Compartment를 root/sandbox로 설정하면 root/sandbox 컴파트먼트에 생성된 VCN이 조회됩니다. demo_vcn이 다음과 같이 조회되어야 합니다. demo_vcn VCN 링크를 클릭하면 상세 정보 페이지로 이동합니다.\ndemo_vcn 상세 페이지에서 2개의 서브넷이 조회된다면, OCI Load Balancer를 구성할 모든 준비는 완료되었습니다.\n이제 OIC Load Balancer로 HA 구성을 진행하겠습니다.\n"
},
{
	"uri": "/oci_docs/10_quickstart/compute/basic_linux_vm/linux_vm_provisioning/",
	"title": "Oracle Linux VM 인스턴스 생성",
	"tags": [],
	"description": "OCI VM Instance 프로비저닝 방법을 정리합니다.",
	"content": " 이번 문서는 오라클 클라우드 Free Tier 계정을 생성하고 로그인한 상황을 전제로 합니다. 만약에 현재 오라클 클라우드 계정이 없는 상태라면, 다음 문서를 참조하여 오라클 클라우드 계정을 만들고 OCI 콘솔에 로그인하시기 바랍니다.\n OCI FREE TIER 계정 등록 Free Tier 계정 로그인  이번 문서에서는 OCI 콘솔에서 OCI Linux VM 인스턴스를 생성하는 절차를 소개합니다. OCI Linux VM 인스턴스 생성 문서는 다음과 같은 목차로 진행 됩니다.\n 1. 사전 준비  1.1 OCI 자원 준비 1.2 준비 파일  2. OCI Linux VM 인스턴스 생성  2.1 사용 가능한 자원 확인 2.2 Oralce Linxu 7.7 이미지로 VM 생성 2.3 SSH 접속 2.4 웹 서버 설치 2.5 OS 방화벽 오픈 참고 문서   \n 1. 사전 준비 OCI Linux VM 인스턴스를 생성 문서는 다음과 같은 자원과 파일이 이미 만들어져 있다는 것을 가정하고 진행합니다.\n1.1 OCI 자원 준비 다음 자원이 없다면 \u0026ldquo;자원 생성 참조 문서\u0026ldquo;를 참조하여 해당 자원을 생성하시기 바랍니다.\n   자원 유형 자원 이름 소속 Compartment 추가 설명 자원 생성 참조 문서     Compartment sanbox root \u0026gt; sandbox . Compartment 추가      VCN demo_vcn root \u0026gt; sandbox 80포트를 공개하는 Custom_Security_List를 포함할 것 간편 VCN 만들기       1.2 준비 파일 OCI Linux VM 인스턴스을 생성하기 위해서는 SSH 접속에 사용할 공개키 등록해야 합니다. 다음과 같은 RSA 공개키를 준비해야 합니다.\n   파일 유형 파일명 파일 생성 참조 문서     Key Paring RSA 공개키 id_rsa.pub 운영체제별 SSH Key Pair 준비       2. OCI Linux VM 인스턴스 생성 OCI Linux VM은 다음과 같은 절차로 진행합니다.\n 자원 제한(Resource Limit) 상황 파악 Oralce Linxu 7.7 이미지로 VM 생성 SSH 접속 웹 서버 설치 방화벽 오픈 80포트 Block Storage 추가 Oracle Linux VM 제거  사전 준비 사항인 Compartment(sandbox)와 VCN(demo_vcn)을 만들었고 다음과 같이 id_rsa.pub 파일을 생성했다고 가정하고 진행하겠습니다.\n~ \u0026gt; cat id_rsa.pub ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGY37KCYmS7bE72rHskoiwEGoG6xK1 +fgDKKXccYdZS24VuxXYsi4b6YC3yCFPxIgvNGankDas0Vf80YuMi3cPwM+/UamM14FC 3N/57CJcsXi1+fv24K9LtIpby2wkSenxMAwMnhoMzMWyDxr2rWvqOz30rbDrw8cc2G5l 7aZ/5tMQFj3SRk/bRSOrrBxZ/gDMhLKhvAxQ/B0cFVNicDPg2kD7ghpZDdBVoZHiuKih lv+ycsEp/CjHBvUJFKBqQ3fkaJtcBjYXNgASv0TCaP4Kh02KrwiwU9seg53TbqPvS/NI A8Jj6jew4FLvdrn6JOOxhNIaP8ry2ukna3r2m2C/ taewan@taewanui-MacBook-Pro.local ~ \u0026gt;  위 절차를 모두 마치면 다음과 같은 상태가 만들어집니다.\n2.1 사용 가능한 자원 확인 현재 Tenancy에 할당된 사용 가능한 자원을 확인 합니다. Tenancy에 할당된 자원량을 확인하는 Limits, Quotas and Uasge(제한, 할당량 및 사용량) 페이지는 다음과 같은 메뉴 패스로 이동할 수 있습니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Governance  Limits, Quotas and Uasge(제한, 할당량 및 사용량) Limits, Quotas and Uasge(제한, 할당량 및 사용량) 페이지에서 리전의 AD(Available Domain)에서 서비스 별로 Tenancy에 할당된 자원 크기와 현재 사용중인 자원 크기 및 사용 가능한 자원 크기를 확인할 수 있습니다. 또한 Request a services limit increase에서 자원 할당 증설을 요청할 수 있습니다.\n위 페이지에서 사용 가능한 Shape인 VM.Standard2.1으로 리눅스 VM 인스턴스를 생성할 것입니다.\n2.2 Oralce Linxu 7.7 이미지로 VM 생성 이제 부터 Oracle Linux 7.7을 이미지하고 Shape VM.Standard2.1으로 리눅스 VM 인스턴스를 만들겠습니다. 다음 메뉴 패스로 OCI Compute의 Instance관리 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Compute  Instance OCI Compute의 Instance관리 페이지에서 앞으로 생성할 VM을 할당할 Compartment인 sandbox를 선택합니다. \u0026ldquo;create instance\u0026rdquo; 버튼을 클릭하여 \u0026ldquo;Create Compute Instance\u0026rdquo; 페이지로 이동합니다.\n\u0026ldquo;Create Compute Instance\u0026rdquo; 페이지에서 입력 폼 각 항목에 다음과 같이 입력합니다.\n   설정 항목 설정값 설명     Name your instance demo_linux_vm    Operating System or Image Source Oracle Linux 7.7 오라클 리눅스 7.X는 CentOs7.x/RedHat7.x와 완전한 호환성 제공   Availability Domain AD 1 현제 데모는 3AD 리전인 Ashburn에서 진행하고 있음   Instance Type Virtual Machine    Instance Shape VM.Stanndard2.1 1 Core OCPU, 15GB Memory   Virtaul cloud network compartment sandbox    Virtaul cloud network demo_vcn    Subnet Compartment sandbox    Subnet Public Subnet-demo_vcn    Assign a public IP address 체크 공개 IP를 설정하기 위해서 체크   Choose SSH Key file 체크 아래 Choose Files를 클릭하고 미리 준비한 id_rsa.pub 파일을 업로드    다음 이미지와 같이 입력을 완료한 후 \u0026ldquo;Create\u0026rdquo; 버튼을 클릭하여 인스턴스 생성을 시작합니다.\n인스턴스 생성이 시작되면 Compute Instance 상세 페이지로 이동합니다. 처음에 Compute Instance 아이콘 색깔은 주황색(생성중)입니다. Compute Instance 생성이 완료되면 아이콘이 색이 초록색으로 변경됩니다. 그리고 Public IP Address에 IP 150.136.254.123가 할당되어 있는것을 확인할 수 있습니다.\n2.3 SSH 접속 앞에서 확인한 공개 IP로 ssh 접근을 할 수 있습니다. 리눅스/맥의 터머널로 ssh 접근하는 명령의 형식은 다음과 같습니다.\nssh -i \u0026lt;id_rsa파일\u0026gt; opc@\u0026lt;공개 IP\u0026gt;  여기서 id_rsa는 앞에서 Compute Instance를 생성할 때 업로드한 공개키(id_rsa.pub)의 key pair 파일이고 opc는 오라클이 배포하는 VM 이미지의 기본 OS 사용자 계정입니다.\n2.4 웹 서버 설치 SSH 접속을 한 상태에서 다음 명령을 입력하여 웹 서버 Nginx를 설치합니다.\nNginx를 설치하는 명령은 다음과 같습니다.\nsudo yum install nginx  이 명령을 수행하면 다음과 같이 Nginx가 설치됩니다. 중간에 설치를 동의하는 입력(y)이 요청됩니다.\n설치가 완료되면 다음 명령으로 Nginx를 시작하고 상태를 확인합니다.\nsudo systemctl start nginx sudo systemctl status nginx  위 명령을 실행한 결과는 다음 이미지와 같습니다. 다음 이미지를 보면 Nginx가 작동하는 상태임을 확인할 수 있습니다.\n추가로 Nginx가 실행된 상태를 curl 명령으로도 확인할 수 있습니다.\ncurl localhost | head  Nginx가 정상적으로 실행되는 상태에서는 다음 이미지와 같이 html 코드 일부가 출력됩니다.\n2.5 OS 방화벽 오픈 현재 사용하는 VCN(demo_vcn)의 Public Subnet-demo_vcn 서브넷 Security List에 22번 포트와 80 포트 오픈 룰이 적용되어 있습니다. 그러나 현재 Nginx 웹 서버에 브라우저 접근이 블가능합니다.\n이유는 OCI의 Oracle Linux 7.7 이미지로 만든 Compute Instance에는 방화벽이 활성화되어 있습니다. 따라서 OS 방화벽에 해당 포트를 오픈해야 합니다. Oracle Linux에서 80포트를 오픈하는 명령은 다음과 같습니다.\nsudo firewall-cmd --zone=public --add-port=80/tcp --permanent sudo firewall-cmd --reload  OS 방화벽에 80 포트를 오픈하면 다음가 같이 Nginx 웹 서버에 브라우저 접근이 가능합니다.\n지금까지 OCI에서 Oracle Linux Compute VM 인스턴스를 만드는 과정을 살펴보았습니다. 다음 문서에서는 Block Storage를 VM 인스턴스에 추가하는 과정을 살펴보겠습니다.\n참고 문서  [Official OCI Docs] Tutorial - Launching Your First Linux Instance     "
},
{
	"uri": "/oci_docs/50.database_service/adb/adw/",
	"title": "Autonomous Data Warehouse",
	"tags": [],
	"description": "",
	"content": "ss\n"
},
{
	"uri": "/oci_docs/30_core_infrastructure/compute/",
	"title": "Compute",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/oci_docs/50.database_service/adb/",
	"title": "OCI Autonomous DB",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/oci_docs/70_solutions/data_flow/",
	"title": "OCI Data Flow",
	"tags": [],
	"description": "OCI Data Flow 는 OCI에서 제공하는 Serverless Spark 서비스입니다.",
	"content": "작성중\n"
},
{
	"uri": "/oci_docs/70_solutions/functions/",
	"title": "OCI Functions",
	"tags": [],
	"description": "OCI Functions 관련 정보를 정리합니다.",
	"content": "Oracle Functions는 OCI(Oracle Cloud Infrastructure)의 서버리스 서비스입니다. Oracle Functions는 다음과 같은 특징을 갖습니다.\n 완전 관리형 서비스 높은 확장성 온디멘드(On-Demand)형 서비스 효올적인 비용 체계  월간 200만번 호출: 무료 월간 200만번 이상 호출: 호출당 입니다. Oracle Functions는 OCI의 FaaS(Functions-as-a-Service) 플랫폼입니다.   Oracle Functions은 Fn Project를 기반으로 개발되었습니다. 비지니스에 집중하고 코드를\nUse Oracle Functions (sometimes abbreviated to just Functions) when you want to focus on writing code to meet business needs. You don\u0026rsquo;t have to worry about the underlying infrastructure because Oracle Functions will ensure your app is highly-available, scalable, secure, and monitored. With Oracle Functions, you can deploy your code, call it directly or trigger it in response to events, and get billed only for the resources consumed during the execution.\nOracle Functions is based on Fn Project. Fn Project is an open source, container native, serverless platform that can be run anywhere - any cloud or on-premises. Fn Project is easy to use, supports every programming language, and is extensible and performant. You can download and install the open source distribution of Fn Project, develop and test a function locally, and then use the same tooling to deploy that function to Oracle Functions.\nYou can access Oracle Functions using the Console, a CLI, and a REST API. You can invoke the functions you deploy to Oracle Functions using the CLI or by making signed HTTP requests.\nOracle Functions is integrated with Oracle Cloud Infrastructure Identity and Access Management (IAM), which provides easy authentication with native Oracle Cloud Infrastructure identity functionality. See Overview of Oracle Cloud Infrastructure Identity and Access Management.\nTo get set up and running quickly with Oracle Functions, see the Quick Start Guide.\n"
},
{
	"uri": "/oci_docs/80_oci_tools/sdk/java_sdk/",
	"title": "OCI Java SDK",
	"tags": [],
	"description": "OCI Java SDK를 설치하고 사용하는 방법을 소개합니다. ",
	"content": "OCI(Oracle Cloud Infrastructure)는 OCI REST API를 랩핑하는 OCI Java SDK를 제공합니다. OCI Java SDK를 이용하여 OCI 자원을 관리 및 사용할 수 있습니다. OCI Java SDK는 오픈소스 형태로 github에서 개발되고 있습니다. OCI Java SDK 라이브러리는 Maven Central과 JCenter에서 관리됩니다. OCI Java SDK 프로젝트 관련 사이트는 다음과 같습니다.\n   관련 사이트 URL     Project Home https://github.com/oracle/oci-java-sdk/releases   라이브러리(Maven Central) https://search.maven.org/search?q=g:com.oracle.oci.sdk   라이브러리(JCenter) https://bintray.com/oracle/jars/oci-java-sdk   공식 메뉴얼 https://docs.cloud.oracle.com/en-us/iaas/Content/API/SDKDocs/javasdk.htm   Java Docs https://docs.cloud.oracle.com/en-us/iaas/tools/java/1.14/    2020년 3월 11일 현재 OCI Java SDK 최신 버전은 1.14버전 입니다.\nOCI Java SDK 1.14버전은 다음과 같은 서비스를 지원합니다.\n Analytics Cloud Announcements API Gateway Application Migration Audit Autoscaling (Compute) Budgets Container Engine for Kubernetes Content and Experience Core Services (Networking, Compute, Block Volume) Data Catalog Data Flow Data Science Data Transfer Database Digital Assistant DNS Email Delivery Events File Storage Functions Health Checks IAM Integration Key Management Limits Load Balancing Marketplace Monitoring Oracle NoSQL Database Cloud Notifications Object Storage OS Management Quotas Resource Manager Search Streaming Web Application Acceleration and Security Work Requests (Compute, Database)  "
},
{
	"uri": "/oci_docs/10_quickstart/compute/basic_linux_vm/",
	"title": "OCI Linux VM 프로비저닝 및 관리",
	"tags": [],
	"description": "",
	"content": "OCI에 Compute VM(Virtual Machine) 인스턴스 1개를 프로비저닝하는 절차를 소개합니다. Oracle Image 7.7 이미지로 VM 인스턴스를 만들고 Nginx 웹 서버를 설치할 것입니다. 그리고 Block Storage를 추가해 볼 것입니다. 이 문서는 다음과 같은 목차로 진행하겠습니다.\n Oracle Linux 7.7 인스턴스 프로비저닝 Block Volume 추가 OCI Linux VM 인스턴스 제거  "
},
{
	"uri": "/oci_docs/80_oci_tools/sdk/python_sdk/installation/",
	"title": "OCI Python SDK 설치",
	"tags": [],
	"description": "",
	"content": " Oracle Cloud Infrastructure가 제공하는 OCI REST API를 파이썬 랩핑 SDK인 OCI Python SDK를 설치하는 방법을 소개합니다.\n이번 문서는 다음과 같은 목차로 구성됩니다.\n OCI Python SDK 설치 사전 준비할 사항    OCI Python SDK 설치 사전 준비할 사항 OCI Python SDK를 설치하기 위해서는 다음과 같은 사항이 선행되어야 합니다.\n Python 3.5 혹은 3.6 설치 및 사용 OpenSSL 버전 1.0.1 이후 버전 설치 Cryptography.io 라이브러리  OpenSSL의 필수 라이브러리   리눅스와 맥에서 다음과 같이 openssl version 명령으로 설치된 버전을 확인할 수 있습니다. asdfghjkl;\u0026rsquo;\nOpenSSL version 1.0.1 or later.\nThe Python SDK uses the Cryptography.io library which requires OpenSSL.\nFor details on all Cryptography.io prerequisites, see Cryptography.io Installation.\n"
},
{
	"uri": "/oci_docs/80_oci_tools/oci_rest_api/",
	"title": "OCI REST API",
	"tags": [],
	"description": "OCI가 개발자를 위하여 제공하는 REST API, 웹 기반 터미널, OCI CLI, 및 IaC 툴을 소개합니다.",
	"content": "OCI(Oracle Cloud Infrastructure))는 모든 리소스를 제어하는 REST API를 제공합니다. OCI는 이 REST API를 근간으로 다양한 확장 인터페이스를 제공합니다.\n"
},
{
	"uri": "/oci_docs/99_oci_sites/oci_sites/",
	"title": "OCI 관련 사이트 모음",
	"tags": [],
	"description": "",
	"content": " 이번 문서에서는 오라클 클라우드를 주제로하는 국내와 주요 사이트와 블로그를 정리합니다.\n이번 문서는 다음과 같은 목차로 구성됩니다.\n 국내 OCI 관련 사이트\u0026amp;블로그 [해외] Oracle 공식 사이트 [해외] OCI 관련 사이트    국내 OCI 관련 사이트\u0026amp;블로그    유형 사이트 명 키워드 설명/특징     커뮤니티 오라클 클라우드 사용자 그룹 (Oracle Cloud KR User Group)    User Group Facebook에서 운영하는 오라클 클라우드 사용자 그룹 커뮤니티 사이트입니다.   블로그 Taewan.kim 오라클 문서 모음    OCI, AI/ML, BigData Oracle Cloud와 빅데이터, AI/ML을 주제로 운영하는 블로그입니다.   메뉴얼사이트 TheKoguryo\u0026#39;s 기술 블로그    OCI Oracle Cloud Infrastructure 입문자를 위한 체계적인 문서를 제공합니다.   블로그 리눅스, 클라우드, IT 관련 기술 블로그    OCI 강태호님께서 운영하시는 블로그입니다. 리눅스와 클라우드 관련 포스팅이 되고 있습니다.   블로그 한국 오라클 Digital Prime 블로그    Oracle Cloud 한국 오라클 디지틀 프라임에서 운영하는 블로그입니다.   블로그 Oracle Cloud Infastructure 블로그    OCI, VCN, Multi-Cloud OCI를 중심으로 AWS, Azure과 통합 관련 문서가 잘 정리되어 있습니다.   블로그 Dan의 기술 블로그    OCI, DevOps, Cloud Native OCI를 중심으로 DevOps 문서를 제공합니다. Terraform, Kubernetes, Serverless 관련 문서를 다룹니다.   블로그 Mastering Oracle Cloud Project    OCI, Oracle Database Oracle Cloud Database를 중심으로 클라우드 인프라를 구성하는 다수의 문서를 제공합니다.   블로그 \u0026#39;Jay Kim\u0026#39; 블로그    OCI 오라클 소속 Jay Kim님이 운영하시느 블로그입니다.   블로그 MN LEE\u0026#39;s IT Blog    OCI 이미남님께서 운영하시는 기술 블로그입니다. OCI PaaS에 대한 유용한 문서를 제공합니다.    [해외] Oracle 공식 사이트    유형 사이트 명 키워드 설명/특징     메뉴얼사이트 공식 오라클 클라우드 문서 사이트    OCI, Oracle Database Oracle Cloud Database를 중심으로 클라우드 인프라를 구성하는 다수의 문서를 제공합니다.   개발자포탈 오라클 개발자 포탈    Oracle, OCI, Java, Cloud Native 최신의 OCI 문서를 제공하는 OCI 공식 문서 사이트입니다.   Blog 오라클 블로그: Oracle Cloud Infrastructure    OCI, CLOUD, IaaS Oracle Cloud Infrastructure 관련 최신 기술 문서를 제공합니다.   Blog 오라클 블로그: Cloud Native    OCI, Cloud Native Oracle Cloud에서 지원하는 Cloud Native 관련 최신 기술 문서를 제공합니다.   Blog 오라클 블로그: Developer 블로그    오라클이 운영하는 개발자를 위한 블로그입니다.    Blog 오라클 블로그: Oracle A-Team 블로그    OCI, DevOps, Autonomous, Integration 오라클 에이스 팀인 A-Team이 현장 경험을 공유하는 팀 블로그입니다.    [해외] OCI 관련 사이트    유형 사이트 명 키워드 설명/특징     Blog Oracle Groundbreakers 기술 블로그    Oracle, OCI, DevOps Oracle Cloud 및 해당 기술에 관한 모든 Oracle 엔지니어, Groundbreaker, 파트너 및 개발자 커뮤니티의 기술 문서를 정리한 메타 블로그입니다.   Blog AMIS 기술 블로그    Oracle, OCI, Serverless 네덜란드 최고의 Oracle 기술 파트너인 AMIS사가 운영하는 기술 블로그입니다. 유익한 내용이 가득한 곳입니다.   Blog k21academy Blog    Oracle, Cloud 가장 활발한 기술 블로그입니다.   Blog Richard Garsthagen’s Oracle Cloud Blog - oc-blog    OCI OCI를 주제로 운영되는 기술 블로그입니다.   Blog fastcloudblog’s Oracle Cloud Blog - oc-blog    OCI 오라클 소속의 솔루션 아키텍트가 운영하는 블로그입니다.   Blog 오라클 에이스가 함께 운영하는 연합 블로그    OCI 28명의 오라클 에이스가 함께 운영하는 연합 블로그입니다.   Blog martinberger 블로그    OCI, Autonomous ADW 중심으로하는 블로그입니다.   Blog 클라우드 레시피 블로그    OCI, Serverless OCI를 중심으로 Kubernetes와 Serverless를 주제로하는 블로그입니다.   Blog Cloud Blogs    Oracle, OCI, Serverless 오라클에서 클라우드 아키텍트로 활동하고 있는 Madhusudhan Rao님의 블로그입니다.    "
},
{
	"uri": "/oci_docs/99_oci_sites/useful_sites_for_oci/oci_cost_estimator/",
	"title": "OCI 비용 시뮬레이터",
	"tags": [],
	"description": "",
	"content": "오라클 홈페이지에서는 Oracle Cloud Infrastructure(OCI) 서비스 비용 계산 툴을 제공합니다. 이 서비스를 이용하여 OCI 서비스 사용 금액을 계산해 볼수 있습니다. OCI 서비스 별로 주요 과금 기준과 입력 항목을 제공하기 때문에 서비스 별로 고려해야 하는 항목을 간편하고 고려할 수 있습니다.\n OCI 비용 계산기: https://www.oracle.com/cloud/cost-estimator.html     관련 OCI 서비스를 선택하면, 해당 서비스의 사용 금액을 결정짓는 주요 인자가 출력됩니다. 이 주요 인자 조정을 통해서 실제 서비스 이용 금액을 예측할 수 있습니다.\n"
},
{
	"uri": "/oci_docs/10_quickstart/",
	"title": "OCI 퀵스타트",
	"tags": [],
	"description": "OCI 퀵스타트 가이드입니다.",
	"content": "Oracle Cloud 신규 입문자를 대상으로 OCI의 빠른 리뷰와 실습을 목적으로 합니다. Oracle Cloud을 처음 살펴 보시는 분들을 위하여 주요 서비스를 경험하는 시나리오를 다룹니다. 다음과 같은 목차로 진행할 예정입니다.\n OCI 기본 용어 정리: OCI 주요 용어를 정리합니다. OCI FREE TIER 계정 등록: Oracle Cloud의 Free Tier 등록 방법을 소개합니다. OCI 콘솔 로그인: 오라클 클라우드 콘솔 로그인 방법을 소개합니다. OCI 사용자 / 그룹 관리 (With IDCS) OCI 사용자 / 그룹 관리 (OCI User) OCI VCN 만들기 리눅스 VM 생성하기 Developer VM 생성하기 Autonomous 인스턴스 프로비저닝 Load Balancer 서버 구성 Auto Scale-out 구성하기 모니터링 환경 구성하기 서버리스 Function 실습  "
},
{
	"uri": "/oci_docs/80_oci_tools/oci_cli/installation_on_window/",
	"title": "[OCI CLI 설치] Window 10",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/oci_docs/10_quickstart/vcn/simple_vcn/",
	"title": "간편 VCN 만들기",
	"tags": [],
	"description": "",
	"content": " 이번 문서는 오라클 클라우드 Free Tier 계정을 생성하고 로그인한 상황을 전제로 합니다. 만약에 현재 오라클 클라우드 계정이 없는 상태라면, 다음 문서를 참조하여 오라클 클라우드 계정을 만들고 OCI 콘솔에 로그인하시기 바랍니다.\n OCI FREE TIER 계정 등록 Free Tier 계정 로그인  이번 문서에서는 OCI 콘솔에서 간편 모드로 VCN(Virtual Cloud Network)을 생성하고 외부에서 80 포트 접근을 허용하는 Security Rule을 설정하는 방법을 소개합니다. 다음과 같은 목차로 진행됩니다.\n 1. 간편모드 VCN 생성  1.1 Compartment 준비 1.2 VCN 프로비저닝 1.3 Security List에 Secury Rule추가  2. 참고문서  \n 1. 간편모드 VCN 생성 이제부터 다음과 같은 VCN을 만들고 Security List를 생성한 후, 80 포트 접근을 허용하는 Secutiry Rule을 설정하는 과정을 살펴보겠습니다. 앞으로 만들 VCN은 다음과 같습니다.\n VCN이름: sandbox_vcn Compartemnt: sandbox Subnet  Private Subnet-sandbox_vcn  CIDR Block: 10.0.0.0/24  Public Subnet-sandbox_vcn  CIDR Block: 10.0.1.0/24\n   Security List 생성  이름: custom_security_list 공개 포트: 80   1.1 Compartment 준비 VCN을 만들 때, VCN 자원을 관리할 Compartment가 필요합니다. 새로 만든 VCN에 할당할 Compartment가 없는 상태라면 다음 문서를 참조하여 Compartment를 만드시기 바랍니다.\n현재 문서에서는 생성할 모든 자원은 taewan.kim Compartment에 할당됩니다.\n이 문서를 실습하는 과정에서, 여러분의 OCI Tenancy에 앞으로 생성할 자원(VCN, Security List)을 할당할 적당한 Compartment가 없다면, 다음 문서를 참조하여 새로운 Compartment를 만드시기 바랍니다.\n Comparemtnt 추가 등록    Compartment 이름으로 sandbox가 아닌 다른 이름 Compartment를 만들 수 있습니다. 다른 이름의 Compartment를 사용할 경우, 각 자원 생성 단계에서 Compartment를 여러분이 사용할 Compartment 이름으로 설정합니다.\n 1.2 VCN 프로비저닝 OCI Console에 로그인한 다음에 VCN을 생성하기 위해서 다음과 같은 메뉴 패스로 이동합니다.\n  (OCI 콘솔 왼쪽 위 햄버그 버튼)  Networking  Virutla Cloud Network Networking 페이지에서 \u0026ldquo;Networking Quickstart\u0026rdquo; 버튼을 클릭합니다.\n위 페이지에서 \u0026ldquo;Networking Quickstart\u0026rdquo; 버튼을 클릭하면, \u0026ldquo;VCN with Internet Connectivity\u0026ldquo;를 선택하고 Start Workflow 버튼을 클릭합니다. 다음과 같이 2단계 VCN을 만드는 Workflow가 시작됩니다. Workflow 1단계에서 VCN 생성 정보를 다음과 같이 입력 합니다.\n   설정 항목 설정 값     VCN name demo_vcn   Compartment sandbox   VCN CIDR BLOCK 10.0.0.0/16   Public Subnet CIDR BLOCK 10.0.0.0/24   Private Subnet CIDR BLOCK 10.0.1.0/24    그리고 \u0026ldquo;Next\u0026rdquo; 버튼을 클릭합니다.\nWorkflow 2단계에서는 앞에서 설정한 정보를 확인하고 이상이 없으면 \u0026ldquo;Next\u0026rdquo; 버튼을 클릭합니다.\n앞에서 입력한 VCN 정보로 VCN을 구성하는 자원이 생성됩니다. 모든 자원이 정상적으로 생성되면 각 항목 상태 표시는 초록색으로 변경됩니다. 모든 항목이 초록색이 되면 \u0026ldquo;View Virtual Cloud Network\u0026rdquo; 버튼을 클릭합니다.\n\u0026ldquo;View Virtual Cloud Network\u0026rdquo; 버튼을 클릭하면 지금 생성된 VCN(demo_vcn)의 상세 페이지로 이동합니다. 이 페이지에서 demo_vcn의 상세정보를 확인하고, 필요한 경우에 서브넷과 같은 관련 자원을 관리할 수 있습니다. demo_vcn에 Private_Subnet-demo_vcn과 Public_Subnet-demo_vcn 2개가 만들어진 것을 확인할 수 있습니다.\n1.3 Security List에 Secury Rule추가 앞에서 생성한 ds_vcn의 Public Subnet-demo_vcn에 80 포트를 오픈하는 설정을 해야 합니다. Public Subnet-demo_vcn 서브넷의 \u0026ldquo;Security List\u0026rdquo;에 80 포트를 오픈하는 Ingress Rule을 추가하는 작업을 진행하겠습니다. demo_vcn 상세 페이지 왼쪽 메뉴에서 공개 서브넷인 \u0026ldquo;Public Subnet-demo_vcn\u0026rdquo;을 클릭하고, \u0026ldquo;Public Subnet-demo_vcn\u0026rdquo;의 상세 페이지로 이동합니다.\n공개 서브넷 상세 페이지에서 디폴트 보안 목록인 \u0026ldquo;Default Security List for demo_vcn\u0026ldquo;을 클릭합니다.\n\u0026ldquo;Default Security List for demo_vcn\u0026rdquo; 링크를 클릭하면 보안 목록 상세 페이지로 이동합니다. 그리고 \u0026ldquo;Add Ingress Rules\u0026rdquo; 버튼을 클릭합니다.\n\u0026ldquo;Add Ingress Rules\u0026rdquo; 버튼을 클릭하면, Ingress Rule 등록 폼이 출력됩니다. 공개 서브넷에 80 포트 유입을 허용하는 보안 룰을 다음과 같이 설정하고 \u0026ldquo;Add Ingress Rules\u0026rdquo; 버튼을 클릭합니다.\n   설정 항목 설정 값     Stateless 체크박스 체크 하지 않음   Source CIDR 0.0.0.0/0   IP Protocol TCP   Source Port Range All   Destination Port Range 80   Description Open 80 port for Web Servers    \u0026ldquo;Ingress Rules\u0026ldquo;가 정상적으로 등록되면 다음과 같은 화면이 출력됩니다.\n지금까지 간편 모드로 VCN을 생성하고 공개 서브넷에 80 포트를 공개하는 Security Rule을 등록하는 방법에 대하여 살펴 보았습니다.\n2. 참고문서  [Official OCI Docs] Virtual Networking Quickstart     "
},
{
	"uri": "/oci_docs/80_oci_tools/sdk/java_sdk/configuration/",
	"title": "설치 및 설정(Maven)",
	"tags": [],
	"description": "",
	"content": " 이번 문서는 다음과 같은 목차로 구성됩니다.\n OCI Java SDK 설치 - Maven OCI Java SDK 설정  사용자 자격증명 설정 파일 준비 OCI Java SDK 인증 코드  예제 Maven Project    OCI Java SDK 설치 - Maven Maven 프로젝트에서 OCI Java SDK 라이브러리를 사용하기 위해서 oci-java-sdk-bom를 임포트합니다. 그리고 필요한 라이브러리를 의존성 설치합니다. 2020년 3월 10일 현재 최신 버전은 1.14.0 버전 입니다. 다음과 같은 설정을 Maven Project의 pom.xml에 추가합니다.\n\u0026lt;dependencyManagement\u0026gt; \u0026lt;dependencies\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.oracle.oci.sdk\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;oci-java-sdk-bom\u0026lt;/artifactId\u0026gt; \u0026lt;!-- [github.com:/oracle/oci-java-sdk\\]의 tag로 최신 버전 확인 및 적용 --\u0026gt; \u0026lt;version\u0026gt;1.14.0\u0026lt;/version\u0026gt; \u0026lt;type\u0026gt;pom\u0026lt;/type\u0026gt; \u0026lt;scope\u0026gt;import\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;/dependencies\u0026gt; \u0026lt;/dependencyManagement\u0026gt; \u0026lt;dependencies\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.oracle.oci.sdk\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;oci-java-sdk-audit\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.oracle.oci.sdk\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;oci-java-sdk-core\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.oracle.oci.sdk\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;oci-java-sdk-database\u0026lt;/artifactId\u0026gt; \u0026lt;/dependency\u0026gt;  위 설정은 OCI Java SDK 중에서 oci-java-sdk-audit, oci-java-sdk-core, oci-java-sdk-database 관련 의존성 라이브러리를 설치하는 설정입니다.\n현재 이용 가능한 OCI Java SDK 모듈은 다음과 같습니다.\n oci-java-sdkaddons\n oci-java-sdkanalytics\n oci-java-sdkannouncementsservice\n oci-java-sdkapigateway\n oci-java-sdkapplicationmigration\n oci-java-sdkaudit\n oci-java-sdkautoscaling\n oci-java-sdkbom\n oci-java-sdkbudget\n oci-java-sdkcommon\n oci-java-sdkcontainerengine\n oci-java-sdkcore\n oci-java-sdkdatabase\n oci-java-sdkdatacatalog\n oci-java-sdkdataflow\n oci-java-sdkdatascience\n oci-java-sdkdns\n oci-java-sdkdts\n oci-java-sdkemail\n oci-java-sdkevents\n oci-java-sdkexamples\n oci-java-sdkfilestorage\n oci-java-sdkfull\n oci-java-sdkfunctions\n oci-java-sdkhealthchecks\n oci-java-sdkidentity\n oci-java-sdkintegration\n oci-java-sdkkeymanagement\n oci-java-sdklimits\n oci-java-sdkloadbalancer\n oci-java-sdkmarketplace\n oci-java-sdkmonitoring\n oci-java-sdknosql\n oci-java-sdkobjectstorage\n oci-java-sdkoce\n oci-java-sdkoda\n oci-java-sdkons\n oci-java-sdkosmanagement\n oci-java-sdkresourcemanager\n oci-java-sdkresourcesearch\n oci-java-sdkshaded\n oci-java-sdkstreaming\n oci-java-sdkwaas\n oci-java-sdkworkrequests oci-java-sdk-waas oci-java-sdk-workrequests  필요한 모듈을 maven의 dependency 설정에 추가합니다.\nOCI Java SDK 설정 사용자 자격증명 설정 파일 준비 OCI Java SDK를 사용하기 위해서는 사용자 자격증명(인증)에 사용되는 OCI Java SDK 설정 파일을 설정합니다. 설정 파일의 기본 위치는 다음과 같습니다.\n   운영체제 설정파일 위치 위치 예(OS Account: taewan)     Window 10 %HOME_PATH%/.oci/config /c:/Users/taewan/.oci/config   Mac OS X, Linux ~/.oci/config /home/taewan/.oci/config    이 설정 파일은 OCI CLI 설정 파일과 정확하게 같은 파일입니다. 다음 문서를 참조하여 OCI 사용자 인증을 위한 설정파일(~/.oci/config)을 만들고 구성합니다.\n OCI CLI 설정     설정을 마치면 ~/.oci/config 파일에 다음과 같은 설정이 추가됩니다.\ncat ~/.oci/config [DEFAULT] user=ocid1.user.oc1..aaaaaaaaqddvfo3p4tprztenwebbbbbzebqgqgpbnk4cjspyzcluzi2yndna fingerprint=aa:41:d3:08:3d:f1:61:19:ad:9e:db:bc:2e:de:82:43 key_file=/Users/taewan/.oci/oci_api_key.pem tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7kq3bsif7bdfghdv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=us-ashburn-1  OCI Java SDK 인증 코드 CI Java SDK에 인증 설정 파일을 지정하는 방법은 다음과 같습니다. 다음 코드는 디폴트 프로파일을 사용하는 예제 코드입니다.\n 예제 Maven Project OCI Java SDK 예제 코드는 다음 URL의 github repository에서 확인할 수 있습니다.\n OCI Java SDK 예제 프로젝트 모음     위 프로젝트를 다음과 같이 다운로드하고 실행할 수 있습니다.\n $ ## github 레파지터리에서 코드 다운로드 $ git clone https://github.com/taewanme/oci-java-sdk-examples.git Cloning into 'oci-java-sdk-examples'... remote: Enumerating objects: 15, done. remote: Counting objects: 100% (15/15), done. remote: Compressing objects: 100% (7/7), done. remote: Total 15 (delta 0), reused 15 (delta 0), pack-reused 0 Unpacking objects: 100% (15/15), done. $ ## 프로젝트 디렉터리로 이동 $ cd oci-java-sdk-examples $ cd oci_java_sdk_basic $ ls bin pom.xml src $ ## 프로젝트 빌드 및 실행 $ mvn clean install [INFO] Scanning for projects... [INFO] [INFO] ------------------\u0026lt; kim.taewan:oci.streaming.example \u0026gt;------------------ [INFO] Building oci.streaming.example 1.0-SNAPSHOT [INFO] --------------------------------[ jar ]--------------------------------- ## 로그 생략 [kim.taewan.oci.BasicConfigTest.main()] INFO com.oracle.bmc.ClientRuntime - Using SDK: Oracle-JavaSDK/1.5.2 [kim.taewan.oci.BasicConfigTest.main()] INFO com.oracle.bmc.ClientRuntime - User agent set to: Oracle-JavaSDK/1.5.2 (Mac OS X/10.15.1; Java/11.0.6; OpenJDK 64-Bit Server VM/11.0.6+9-jvmci-20.0-b02) ============================ Tenancy:apackrsct01 ============================ [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 6.325 s [INFO] Finished at: 2020-03-12T10:54:38+09:00 [INFO] ------------------------------------------------------------------------ $  "
},
{
	"uri": "/oci_docs/98_misc_tips/ssh_key_pairs/",
	"title": "운영체제별 SSH Key Pair 준비",
	"tags": [],
	"description": "",
	"content": " Oracle Cloud Infrastructure(OCI)의 VM 인스턴스가 지원하는 접속 프로토콜은 SSH입니다. OCI VM 인스턴스 SSH 서버의 기본 사용자 인증 방식은 Key Pair입니다. 따라서 OCI VM 인스턴스를 생성때 SSH 공개키를 등록해야 합니다. 이 문서에서는 SSH 접속에 사용할 Key Pair(SSH-2 RSA 타입)를 만드는 방법을 정리합니다.\n이번 문서는 다음과 같은 목차로 구성됩니다.\n문서 목차 Key Pair란? SSH 키 생성  ssh-keygen을 이용한 ssh key 생성 window 10 아래 버전에서 ssh key 생성  PPK 형식 개인키를 PEM 형식으로 변환   참고 문서    Key Pair란? SSH Key는 개인키(private key)와 공개키(public key)로 구성됩니다. 두 개의 ssh key를 합쳐서 SSH Key Pair라고 부릅니다.\n오라클이 제공하는 VM 이미지는 다음과 같은 암호화 알고리즘 유형을 지원합니다.\n RSA DSA DSS ECDSA Ed25519  OCI VM 인스턴스를 만들기 전에 앞에서 열거한 암호화 알고리즘을 사용하여 SSH key Pair를 준비해야 합니다. 사용자가 정의한 Custom VM 이미지에서는 지원하는 SSH key 유형이 다를 수 있습니다. 이 경우에 해당 Custom 이미지가 지원하는 ssh key 타입에 확인하고 작업해야 합니다. OCI가 제공하는 VM 이미지에 사용할 ssh Key Pair를 RSA, DSS, DSA와 같은 암호화 알고리즘으로 만든다면, 최소 2048 비트를 사용을 권장합니다. 반면 ECDSA 암호화 알고리즘으로 ssh Key Pair를 만든다면, 최소 256 비트 사용을 권장합니다.\nSSH 키 생성 각 운영체제(Linux, OSX, Window)별로 SSH 키를 생성 생성하는 방법은 다음과 같습니다.\n   운영체제 SSH 키 생성 툴     Linus ssh-keygen   OS X ssh-keygen   Windows 10 이상 ssh-keygen   Windows 10 아래 버전 puttygen    리눅스, 맥 OS(OS X), Window 10을 사용할 경우에 ssh-keygen 사용하여 ssh key를 생성합니다. ssh-keygen이 설치되어 있지 않다면, 각 운영체제에 맞는 OpenSSH(http://www.openssh.com/portable.html)를 설치합니다. Windows 10 아래 버전에서는 PuTTY를 설치하고 PuTTY의 구성 컴포넌트인 PuTTY Key Generator(puttygen)을 사용하여 ssh key를 생성합니다.\nssh-keygen을 이용한 ssh key 생성 리눅스, Mac OS 및 Window 10에서는 ssh-keygen을 이용하여 ssh key pair를 생성합니다. 이때 아래와 같은 형식의 옵션으로 ssh-keygen 명령을 실행합니다.\nssh-keygen -t rsa -N \u0026quot;\u0026quot; -b 2048 -C \u0026quot;comment\u0026quot; -f \u0026lt;path/KeyFileName\u0026gt;  위와 같은 형식의 명령에서 각 옵션은 다음과 같은 의미를 갖습니다.\n   옵션 설명 예제 입력 비고     -t 생성 key 유형 지정 -t rsa 기본값이 rsa, 생략 가능   -b 암호화 비트수 -b 2048 최소 2048을 권장   -C 커맨트 입력 -C \u0026ldquo;ssh key for demo\u0026rdquo; 인증서 구분을 위해서 사용자 email을 주로 사용   -N new_passphrase 입력 -N \u0026ldquo;\u0026rdquo; 공백 문자열 입력   -f 출력 파일명, 위치 포함 -f ./id_rsa     ssh key를 생성하는 명령을 앞에서 설정한 입력 값으로 다음과 같이 실행할 수 있습니다.\n\u0026gt; ssh-keygen -t rsa -N \u0026quot;\u0026quot; -b 2048 -C \u0026quot;ssh key for demo\u0026quot; -f ./id_rsa Generating public/private rsa key pair. Your identification has been saved in ./id_rsa. Your public key has been saved in ./id_rsa.pub. The key fingerprint is: SHA256:SFo9Bzyr8dzoANqGZZ9oxwdZIBo+TCsJ9b8Ed5I8OlY ssh key for demo The key's randomart image is: +---[RSA 2048]----+ |..+ . .o. | |.= = o o+. | |o * o Eo+o. | | . .+X+=.o | | *==+BSo | | o.=oB.= . | | o ..+ | | . | | | +----[SHA256]-----+ \u0026gt;  앞에서 f 옵션으로 지정한 위치에 다음과 같은 파일이 생성된 것을 확인할 수 있습니다.\n \u0026gt; ls -al id_rsa* -rw------- 1 taewan staff 1823 1 17 15:25 id_rsa -rw-r--r-- 1 taewan staff 398 1 17 15:25 id_rsa.pub \u0026gt;  window 10 아래 버전에서 ssh key 생성 window 10 아래에서는 putty에 포함된 puttygen을 이용하여 SSH 키를 생성할 수 있습니다.\nWindows 10 아래 버전에서 git을 설치하면, git과 함께 설치되는 MINGW32가 제공하는 ssh-keygen이 설치됩니다. ssh-keygen을 이용하여 SSH key pair를 생성할 수 있습니다. ssh-keygen은 git-bash에서 실행되어야 합니다.\n putty를 내려받아 설치하면 puttygen도 함께 설치됩니다. puttygen을 실행하면 \u0026lt;그림 1\u0026gt;과 같은 모습으로 실행됩니다. \u0026lt;그림 1\u0026gt;과 같이 puttygen에서 키 타입으로 RSA와 키 생성의 비트 수를 2048로 설정한 후 \u0026ldquo;Generate\u0026rdquo; 버튼을 클릭합니다.\n- 그림 1. puttygen(Putty Key Generator) 모습\nPuttyGen은 키를 생성할 때 마우스 위치 값을 키 생성 초깃값으로 활용합니다. 따라서 키를 생성이 완료할 때까지 \u0026lt;그림 2\u0026gt;의 빨간색 영역에서 마우스를 움직여야 합니다.\n- 그림 2. RSA 키 생성 진행 중\nRSA 키 생성이 완료되면 \u0026lt;그림 3\u0026gt;과 같이 UI가 변경됩니다. 이제 \u0026lt;그림 3\u0026gt;과 같이 Save Private Key 버튼을 클릭해서 개인키(Private Key)를 저장합니다. 프롬프트가 뜨면 passphrase 없이 키가 저장되도록 Yes 선택 후 저장합니다.\n- 그림 3. 개인 키 저장\n\u0026lt;그림 4\u0026gt;와 같이 개인 키를 저장합니다. 여기에서 저장된 개인키(Private Key)는 PuTTY Private Key(PPK) 형식으로 저장되며, 이 PPK 파일은 PuTTY에서만 사용 가능합니다.\n- 그림 4. 개인 키 저장\nPutty Key Generator는 공개키를 저장할 때, OpenSSH 형식이 아닌 자체 형식으로 저장합니다. 따라서 Putty Key Generator가 제공하는 공개키 저장 기능을 사용하지 않습니다. \u0026lt;그림 5\u0026gt;에서 공개키 문자열을 모두 복사하여 별도의 파일에 붙여넣고 저장합니다. 새로 만든 파일은 앞에서 만든 개인키와 같은 폴더에 저장합니다. 파일명은 개인키 파일명과 동일하게 하고 확장자는 pub로 설정합니다.\n- 그림 5. 공개 키 저장\nPPK 형식 개인키를 PEM 형식으로 변환 Putty Key Generator는 개인키를 PPK 형식으로 저장합니다. 이 개인키를 Putty가 아닌 일반 SSH의 개인키로 사용할 수 없습니다. PPK 형식의 개인키를 PEM 형식으로 변환하는 기능을 Putty Key Generator에서 제공합니다. Putty Key Generator의 메뉴에서 Conversions을 선택하고 Export OpenSSH Key를 선택합니다. 프롬프트가 뜨면 passphrase 없이 키 저장하기 위해서 Yes 선택 후 파일을 저장합니다.\n참고 문서  http://taewan.kim/post/ssh_key/ https://www.onmsft.com/how-to/how-to-generate-an-ssh-key-in-windows-10 https://www.youtube.com/watch?v=Y0e1mMl0D1g  Generate SSH Key Pairs to Access Linux instances in the Oracle Cloud Infrastructure   "
},
{
	"uri": "/oci_docs/98_misc_tips/tools/windows10_window_subsystem/",
	"title": "리눅스 Windows Subsystem",
	"tags": [],
	"description": "Windows 10에서 리눅스용 Window Subsystem을 설치하는 방법을 정리합니다.",
	"content": "문서 작성중입니다.\n자체 문서를 작설할 때 까지 Window Subsystem 설치 가이드로 다음 문서를 참조하시기 바라비다.\n https://docs.microsoft.com/ko-kr/windows/wsl/install-win10  "
},
{
	"uri": "/oci_docs/50.database_service/adb/adw/hands-on/basic_management/",
	"title": "인스턴스 관리",
	"tags": [],
	"description": "OCI ADW(Authonomous Data Warehouse) 인스턴스 기본 관리 방법을 정리합니다.",
	"content": "ADW 인스턴스로 DemoAdw를 프로비저닝했습니다. OCI 콘솔에서 ADW 인스턴스를 시작, 종료, 자원할당 변경(Scale Up \u0026amp; Down), 인스턴스 제거 절차를 정리합니다.\n이 문서는 오라클 클라우드 Free Tier 계정을 생성했고 로그인한 상태라는 가정으로 진행합니다. 현재 오라클 클라우드 계정이 없는 상태라면, 다음 문서를 참조하여 오라클 클라우드 계정을 만들고 OCI 콘솔에 로그인하시기 바랍니다.\n  OCI FREE TIER 계정 등록 Free Tier 계정 로그인  이 문서를 진행하기 위해서는 추가로 다음 자원이 준비되어 있어야 합니다. 다음 자원이 없다면 \u0026ldquo;자원 생성 참조 문서\u0026ldquo;를 참조하여 해당 자원을 생성하시기 바랍니다.\n   자원 유형 자원 이름 소속 Compartment 추가 설명 자원 생성 참조 문서     Compartment sanbox root \u0026gt; sandbox ADW 인스턴스이 할당될 Compartment Compartment 추가      ADW DemoAdw root \u0026gt; sandbox ADW 인스턴스 ADW 인스턴스 생성       ADW 인스턴스 관리는 다음과 같은 주제로 진행됩니다.\n 인스턴스 기본 조작: Console     인스턴스 기본 조작: OCI CLI   \n 인스턴스 Scale Up/Dwon   \n ADW 관리자 비밀번호 재설정    \n "
},
{
	"uri": "/oci_docs/10_quickstart/ha_with_load_balancer/provisioning_3vm/",
	"title": "3개 Compte 인스턴스 생성",
	"tags": [],
	"description": "OCI Load Banalcer 구성을 위한 3개 VM을 생성하는 절차를 소개합니다.",
	"content": " 이 문서에서는 위 이미지와 같이 이름이 demo_vcn인 VCN(Virtual Cloud Netwrok)의 private subnet에 아파치 웹서버가 설치된 Compute 인스턴스를 3개 프로비저닝하는 절차를 소개할 것입니다. 이번 문서에서는 OCI 콘솔을 이용하여 OCI Linux VM 인스턴스를 생성할 것입니다 .OCI Linux VM 인스턴스 생성 과정은 다음과 같은 절차로 진행됩니다.\n VM 프로비저닝  SSH Key Pair 파일 준비 사용 가능한 자원 확인 Oralce Linxu 7.7 이미지로 VM 생성 주의 사항: Single AD Resion \u0026amp; 3 AD Resion  참고 문서  \n VM 프로비저닝 SSH Key Pair 파일 준비 OCI Linux VM 인스턴스을 생성할 때 등록할 SSH Key Pair 파일을 생성합니다. 이 파일은 SSH 접속에 사용됩니다. SSH Key Pair 파일은 다음 문서를 참조하여 만듭니다.\n   작업 유형 작업 참조 문서     Key Paring RSA 파일 생성 운영체제별 SSH Key Pair 준비       SSH Key Pair 파일의 공개키는 다음과 같은 형식을 갖습니다.\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDN40LZmMb7uiZNTG1bBHE+pJZhjrg7an +plbU1r9Dc3rXFjUuJMepwABAsFIKuZF6VrFFkoJ7xvD6zjB12b5xFHgZ5Z9VkmAXQtd2ec zXL/BLWb2j7prt4Bdq+e6+LCTn0BVbmUwhf5dt/LCD4Wr/ITpG0ST/p+vy8VufQNdC+TQ4p MV0kJabcdcnqQ3zS2Rz2nfxez2iNukrgl6TeNU52SwtEgPKWn4Kl1THjn/ujPea9d2qLElI pLZ496AIHugEMaShX8cr4QtoQmzCdxSoqtJvRe+byf/W3Z2pNwr0ENOX0ZkHyjk3t2YZxvD bK9NxlqhTy9kmyJLYZgWldHj3 taewan@taewanui-MBP  생성한 SSH Key Pair 파일의 위치와 파일명은 다음과 같다고 가정하고 진행하겠습니다.\n   파일 유형 파일 위치 파일명     RSA 공개키 /temp id_rsa.pub   RSA 비밀키 /temp id_rsa    사용 가능한 자원 확인 현재 Tenancy에 할당된 사용 가능한 자원을 확인 합니다. Tenancy에 할당된 자원량을 확인하는 Limits, Quotas and Uasge(제한, 할당량 및 사용량) 페이지는 다음과 같은 메뉴 패스로 이동할 수 있습니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Governance  Limits, Quotas and Uasge(제한, 할당량 및 사용량) Limits, Quotas and Uasge(제한, 할당량 및 사용량) 페이지에서 리전의 AD(Available Domain)에서 서비스 별로 Tenancy에 할당된 자원 크기와 현재 사용중인 자원 크기 및 사용 가능한 자원 크기를 확인할 수 있습니다. 또한 Request a services limit increase에서 자원 할당 증설을 요청할 수 있습니다.\n위 페이지에서 사용 가능한 Shape인 VM.Standard2.1으로 리눅스 VM 인스턴스를 생성할 것입니다.\nOralce Linxu 7.7 이미지로 VM 생성 이제 부터 Oracle Linux 7.7 이미지를 Shape VM.Standard2.1로 3개 인스턴스를 프로비저닝하겠습니다. 다음 메뉴 패스로 OCI Compute의 Instance관리 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Compute  Instances OCI Compute의 Instance관리 페이지에서 앞으로 생성할 VM을 할당할 Compartment인 sandbox를 선택합니다. \u0026ldquo;create instance\u0026rdquo; 버튼을 클릭하여 \u0026ldquo;Create Compute Instance\u0026rdquo; 페이지로 이동합니다.\n\u0026ldquo;Create Compute Instance\u0026rdquo; 페이지에서 입력 폼 각 항목에 다음과 같이 입력합니다.\n   설정 항목 vm_web01 vm_web02 vm_web03     Name your instance vm_web01 vm_web02 vm_web03   Operating System or Image Source Oracle Linux 7.7 Oracle Linux 7.7 Oracle Linux 7.7   Availability Domain AD 1 AD 2 AD 3   Instance Type Virtual Machine Virtual Machine Virtual Machine   Instance Shape VM.Stanndard2.1 VM.Stanndard2.1 VM.Stanndard2.1   Virtaul cloud network compartment sandbox sandbox sandbox   Virtaul cloud network demo_vcn demo_vcn demo_vcn   Subnet Compartment sandbox sandbox sandbox   Subnet Private Subnet-demo_vcn Private Subnet-demo_vcn Private Subnet-demo_vcn   Public IP DO NOT ASSIGN A PUBLIC IP ADDRESS DO NOT ASSIGN A PUBLIC IP ADDRESS DO NOT ASSIGN A PUBLIC IP ADDRESS   Choose SSH Key file 체크 체크 체크   public key id_rsa.pub id_rsa.pub id_rsa.pub    마지막으로 3개 VM을 생성할 때, Advanced Option의 Management_ 텝에 PASTE CLOUD-INIT SCRIPT를 선택하고 다음 스크립트를 등록합니다.\n#!/bin/sh sudo yum install httpd -y sudo bash -c 'echo $HOSTNAME running on OCI \u0026gt;\u0026gt; /var/www/html/index.html' sudo apachectl start sudo systemctl enable httpd sudo firewall-cmd --permanent --zone=public --add-service=http sudo firewall-cmd --reload  CLOUD-INIT SCRIPT는 VM을 프로비저닝하고 시작할 때, 실행되는 스크립트입니다. 이 스크립트는 다음과 같은 기능을 제공합니다.\n 아파치 웹서버 설치 아파치 웹서버 시작 아파치 웹서버 서비스 등록 방화벽 오픈  다음 이미지는 vm_web01을 입력한 예제입니다. 위 설정 값을 입력한 후 \u0026ldquo;Create\u0026rdquo; 버튼을 클릭하여 인스턴스 생성을 시작합니다. 이 생성 작업은 vm_web02와 vm_web03까지 3번 반복합니다.\n\u001e vm_web01, vm_web02 및 vm_web03 3개 Compute 인스턴스가 생성되면 다음과 같은 형태가 됩니다.\n주의 사항: Single AD Resion \u0026amp; 3 AD Resion 위에서 다른 예제는 3개 AD(Availability Domain) 리전인 Phoenix에서 진행했습니다. 3 AD 리전에서는 고가용성 구성을 위하여 Subnet을 Regional Subnet으로 구성하고 각 VM을 AD에 분산하여 프로비저닝 합니다. 각 Compute 인스턴스를 AD 별로 분산하여 장애 및 다양한 이슈에 시스템 안정성을 향상 시킬 수 있습니다.\n3 AD 리전이 아닌 싱글 AD 리전에서 HA 구성을 할 경우에는 Compute Instance는 AD로 분산하지 않고 Fault Domain으로 분산하여 시스템 안정성을 확보합니다. Fault Domain 설정은 Advanced Option의 Management_ 텝에서 설정됩니다. 싱글 AD 리전에서 이 문서를 실습실 경우에는 Fault Domain을 다음과 같이 설정합니다.\n   Compute Instance 이름 Fault Doamin 설정     vm_web01 FAULT-DOMAIN-1   vm_web02 FAULT-DOMAIN-2   vm_web03 FAULT-DOMAIN-3    위 설정은 다음 이미지와 같이 적용됩니다.\n참고 문서  [Official OCI Docs] Tutorial - Launching Your First Linux Instance     "
},
{
	"uri": "/oci_docs/10_quickstart/compute/linux_vm_with_reserved_ip/",
	"title": "OCI VM 고정 IP 설정",
	"tags": [],
	"description": "OCI VM Instance를 프로비저닝하고 고정 IP를 설정하는 방법을 정리합니다.",
	"content": " 이번 문서는 오라클 클라우드 Free Tier 계정을 생성하고 로그인한 상황을 전제로 합니다. 만약에 현재 오라클 클라우드 계정이 없는 상태라면, 다음 문서를 참조하여 오라클 클라우드 계정을 만들고 OCI 콘솔에 로그인하시기 바랍니다.\n OCI FREE TIER 계정 등록 Free Tier 계정 로그인  이번 문서에서는 OCI 콘솔에서 OCI Linux VM 인스턴스를 생성하는 절차를 소개합니다. OCI Linux VM 인스턴스 생성 문서는 다음과 같은 목차로 진행됩니다.\n 사전 준비  OCI 자원 준비  Compute 고정 IP 설정  Public Reserved IP 생성 예약 공개 IP 설정   \n 사전 준비 OCI Linux VM 인스턴스에 고정 IP를 설정하는 문서는 다음과 같은 자원이 이미 만들어져 있다는 것을 가정하고 진행합니다.\nOCI 자원 준비 다음 자원이 없다면 \u0026ldquo;자원 생성 참조 문서\u0026ldquo;를 참조하여 해당 자원을 생성하시기 바랍니다.\n   자원 유형 자원 이름 소속 Compartment 추가 설명 자원 생성 참조 문서     Compartment sanbox root \u0026gt; sandbox . Compartment 추가      VCN demo_vcn root \u0026gt; sandbox 80포트를 공개하는 Custom_Security_List를 포함할 것 간편 VCN 만들기      Compute demo_linux_vm root \u0026gt; sandbox 참조 문서는 2.3절(SSH 접속) 까지만 진행 Oracle Linux VM 인스턴스 생성       Compute 고정 IP 설정 OCI Compute Instnce에 고정 IP 설정은 다음과 같은 절차로 진행합니다.\n 고정 IP(Reserved IP) 생성 OCI Compute Instance 상세 페이지 이동 VNIC의 공개 IP 제거 VNIC에 공개 IP에 앞에서 설정한 고정 IP 설정\n  다음 이미지와 같은 demo_linux_vm을 이 문서의 시작점으로 합니다. 이 VM은 공개 IP로 129.213.112.109을 사용합니다. Public Reserved IP 생성 Public Reserved IP1는 관리 페이지는 다음 메뉴 패스로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Networking  Public IPs 다음 이미지는 위 메뉴 패스 이동을 표현합니다.\n위 메뉴 패스로 Public IP 관리 페이지로 이동할 수 있습니다. 새로운 공개 고정 IP를 만들기 위해서 Public IP 관리 페이지의 \u0026ldquo;Create Reserved Public IP\u0026rdquo; 버튼을 클릭합니다.\nCreate Reserved Public IP 폼이 출력되면 다음과 같이 설정합니다.\n   설정 항목 설정값     Name demo_reserved_ip   Create in Compartment root/sandbox    위 설정값을 입력하고 \u0026ldquo;Create Reserved Public IP\u0026rdquo; 버튼을 클릭합니다.\n예약 공개 IP는 다음과 같이 만들어집니다. 현재 만들어진 공개 IP는 다음과 같습니다.\n Public IP: 150.136.31.162  예약 공개 IP 설정  (OCI 콘솔 왼쪽 위 햄버그 버튼)  Compute  Instances 위 메뉴 패스로 OCI Compute 인스턴스 관리 페이지로 이동합니다. Compartment를 root/sandbox를 선택하고 출력되는 인스턴스 목록 중에서 demo_linux_vm 링크를 클릭합니다.\ndemo_linux_vm 인스턴스 상세 페이지에서 현재 공개 IP가 129.213.112.109로 설정되어 있습니다. 왼쪽 메뉴에서 Attached VNICs 링크를 클릭합니다. Attached VNICs를 클릭하면 나타나는 Attached VNICs 목록 중에서 공개 IP가 129.213.112.109로 설정된 VNIC의 링크를 클릭합니다. 이 링크를 클릭하면 VNIC 상세 페이지로 이동합니다.\nVNIC 상세 페이지에서 왼쪽 메뉴에서 IP Addresses를 클릭합니다. 그리고 공개 IP가 129.213.112.109인 IP의 편집 메뉴를 다음 이미지와 같이 실행합니다.\nPublic IP Address 편집 페이지에서 NO Public IP을 선택하고 기존에 설정된 공개 IP를 제거합니다. 그리고 Update 버튼을 클릭하여 변경 사항을 저장합니다.\n이제 공개 IP가 할당되지 않은 상태를 확인할 수 있습니다. 이제 다시 다음 이미지와 같이 편집 메뉴를 실행합니다.\nPublic IP Address 편집 페이지에서 다음과 같이 설정합니다.\n   설정 항목 설정값     Public IP Type Reserved Public IP 선택   Compartment root/sandbox 지정   Reserved Public IP demo_reserved_ip 선택    위와 같이 설정하고 다음 이미지와 같이 update 버튼을 클릭합니다.\n이제 demo_linux_vm에 공개 IP가 150.136.31.162로 설정된 것을 확인할 수 있습니다.\n Public Reserved IP를 OCI에서는 공용 IP로 번역합니다. [return]   "
},
{
	"uri": "/oci_docs/50.database_service/adb/adw/hands-on/basic_management/instance_start_and_stop_with_ocicli/",
	"title": "인스턴스 기본 조작: OCI CLI",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)에서 프로비저닝된 ADW 인스턴스를 OCI CLI로 시작, 종료, 삭제하는 방법을 정리합니다.",
	"content": " ADW 기본 관리 ADW 인스턴스를 OCI CLI로 시작, 종료 및 삭제하는 실습은 다음과 같은 목차로 진행됩니다.\n ADW 기본 관리  사전 준비 사항 ADW 인스턴스 상태 확인 ADW 인스턴스 시작 ADW 인스턴스 종료 ADW 인스턴스 제거   \n 사전 준비 사항 OCI CLI 설치와 설정이 되어 있어야합니다. OCI CLI 설치와 설정이 필요하다면 다음 문서를 첨조해서 준비하시기 바랍니다.\n [OCI CLI 설치] Linux \u0026amp; Mac OS OCI CLI 설정  sandbox 컴파트먼트 OCID와 DemoAdw 인스턴스의 OCID를 OCI CLI를 구동할 터미널에서 다음 명령을 실행하여 환경 변수로 등록합니다. 다음 명령은 Linux와 Mac OS X에서 환경 변수를 등록하는 명령입니다.\n## Settting Compartment OCID with EVN Variable export COCID=ocid1.compartment.oc1..aaaaaaaar7os3x3p4e6dcak22z7m4zg2ogki6kr34b6sdlkcppzlfij7lvwq ## Settting ADW Instance OCID OCID with EVN Variable export DEMOADW_OCID=ocid1.autonomousdatabase.oc1.phx.abyhqljtyedlfi6kgtod2va7hoxkz7yhle4nycuxsi4cqsmjtbftlmmulp6q  Linux와 Mac OS X에서 등록한 환경 변수를 다음과 같은 명령으로 확인할 수 있습니다.\n$ env |grep OCID COCID=ocid1.compartment.oc1..aaaaaaaar7os3x3p4e6dcak22z7m4zg2ogki6kr34b6sdlkcppzlfij7lvwq DEMOADW_OCID=ocid1.autonomousdatabase.oc1.phx.abyhqljtyedlfi6kgtod2va7hoxkz7yhle4nycuxsi4cqsmjtbftlmmulp6q $  ADW 인스턴스 상태 확인 DemoAdw 인스턴스 상태를 다음 명령으로 확인할 수 있습니다.\noci db autonomous-database get --autonomous-database-id $DEMOADW_OCID  아래 [접기/펼치기]를 클릭하여 ADW 인스턴스 상태 확인 명령의 전체 출력 결과를 확인할 수 있습니다.\n  [접기/펼치기] DemoAdw 인스턴스 상태 확인 명령 전체 로그    $ oci db autonomous-database get --autonomous-database-id $DEMOADW_OCID { \u0026quot;data\u0026quot;: { \u0026quot;autonomous-container-database-id\u0026quot;: null, \u0026quot;compartment-id\u0026quot;: \u0026quot;ocid1.compartment.oc1..aaaaaaaar7os3x3p4e6dcak22z7m4zg2ogki6kr34b6sdlkcppzlfij7lvwq\u0026quot;, \u0026quot;connection-strings\u0026quot;: { \u0026quot;all-connection-strings\u0026quot;: { \u0026quot;HIGH\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_high.adwc.oraclecloud.com\u0026quot;, \u0026quot;LOW\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_low.adwc.oraclecloud.com\u0026quot;, \u0026quot;MEDIUM\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_medium.adwc.oraclecloud.com\u0026quot; }, \u0026quot;dedicated\u0026quot;: null, \u0026quot;high\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_high.adwc.oraclecloud.com\u0026quot;, \u0026quot;low\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_low.adwc.oraclecloud.com\u0026quot;, \u0026quot;medium\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_medium.adwc.oraclecloud.com\u0026quot; }, \u0026quot;connection-urls\u0026quot;: { \u0026quot;apex-url\u0026quot;: \u0026quot;https://EP2RZOH7SURH5CH-DEMOADW.adb.us-phoenix-1.oraclecloudapps.com/ords/apex\u0026quot;, \u0026quot;machine-learning-user-management-url\u0026quot;: \u0026quot;https://adb.us-phoenix-1.oraclecloud.com/omlusers/tenants/OCID1.TENANCY.OC1..AAAAAAAA6MA7KQ3BSIF76UZQIDV22CAJS3FPESGPQMMSGXIHLBCEMKKLRSQA/databases/DEMOADW/index.html\u0026quot;, \u0026quot;sql-dev-web-url\u0026quot;: \u0026quot;https://EP2RZOH7SURH5CH-DEMOADW.adb.us-phoenix-1.oraclecloudapps.com/ords/admin/_sdw/?nav=worksheet\u0026quot; }, \u0026quot;cpu-core-count\u0026quot;: 1, \u0026quot;data-safe-status\u0026quot;: \u0026quot;NOT_REGISTERED\u0026quot;, \u0026quot;data-storage-size-in-tbs\u0026quot;: 1, \u0026quot;db-name\u0026quot;: \u0026quot;DemoAdw\u0026quot;, \u0026quot;db-version\u0026quot;: \u0026quot;19c\u0026quot;, \u0026quot;db-workload\u0026quot;: \u0026quot;DW\u0026quot;, \u0026quot;defined-tags\u0026quot;: {}, \u0026quot;display-name\u0026quot;: \u0026quot;demo adw\u0026quot;, \u0026quot;freeform-tags\u0026quot;: {}, \u0026quot;id\u0026quot;: \u0026quot;ocid1.autonomousdatabase.oc1.phx.abyhqljtyedlfi6kgtod2va7hoxkz7yhle4nycuxsi4cqsmjtbftlmmulp6q\u0026quot;, \u0026quot;is-auto-scaling-enabled\u0026quot;: true, \u0026quot;is-dedicated\u0026quot;: false, \u0026quot;is-free-tier\u0026quot;: false, \u0026quot;is-preview\u0026quot;: false, \u0026quot;license-model\u0026quot;: \u0026quot;BRING_YOUR_OWN_LICENSE\u0026quot;, \u0026quot;lifecycle-details\u0026quot;: null, \u0026quot;lifecycle-state\u0026quot;: \u0026quot;AVAILABLE\u0026quot;, \u0026quot;nsg-ids\u0026quot;: null, \u0026quot;private-endpoint\u0026quot;: null, \u0026quot;private-endpoint-label\u0026quot;: null, \u0026quot;service-console-url\u0026quot;: \u0026quot;https://adb.us-phoenix-1.oraclecloud.com/console/index.html?tenant_name=OCID1.TENANCY.OC1..AAAAAAAA6MA7KQ3BSIF76UZQIDV22CAJS3FPESGPQMMSGXIHLBCEMKKLRSQA\u0026amp;database_name=DEMOADW\u0026amp;service_type=ADW\u0026quot;, \u0026quot;subnet-id\u0026quot;: null, \u0026quot;system-tags\u0026quot;: {}, \u0026quot;time-created\u0026quot;: \u0026quot;2020-03-21T04:28:06.014000+00:00\u0026quot;, \u0026quot;time-deletion-of-free-autonomous-database\u0026quot;: null, \u0026quot;time-maintenance-begin\u0026quot;: \u0026quot;2020-03-22T02:00:00+00:00\u0026quot;, \u0026quot;time-maintenance-end\u0026quot;: \u0026quot;2020-03-22T06:00:00+00:00\u0026quot;, \u0026quot;time-reclamation-of-free-autonomous-database\u0026quot;: \u0026quot;2020-03-28T04:28:19.184000+00:00\u0026quot;, \u0026quot;used-data-storage-size-in-tbs\u0026quot;: 1, \u0026quot;whitelisted-ips\u0026quot;: null }, \u0026quot;etag\u0026quot;: \u0026quot;93b9e998\u0026quot; } $    ADW 인스턴스 시작 현재 ADW 인스턴스 상태를 확인해 보니 정지된 상태입니다.\n $ oci db autonomous-database get --autonomous-database-id $DEMOADW_OCID | grep lifecycle-state \u0026quot;lifecycle-state\u0026quot;: \u0026quot;STOPPED\u0026quot;, $  인스턴스가 정지된 상태에서는 다음 명령을 입력하여 ADW 인스턴스를 시작할 수 있습니다.\noci db autonomous-database start --autonomous-database-id $DEMOADW_OCID  아래 [접기/펼치기]를 클릭하여 ADW 인스턴스 시작 명령의 전체 출력 결과를 확인할 수 있습니다.\n  [접기/펼치기] DemoAdw 인스턴스 시작 명령 전체 로그    $ oci db autonomous-database start --autonomous-database-id $DEMOADW_OCID { \u0026quot;data\u0026quot;: { \u0026quot;autonomous-container-database-id\u0026quot;: null, \u0026quot;compartment-id\u0026quot;: \u0026quot;ocid1.compartment.oc1..aaaaaaaar7os3x3p4e6dcak22z7m4zg2ogki6kr34b6sdlkcppzlfij7lvwq\u0026quot;, \u0026quot;connection-strings\u0026quot;: { \u0026quot;all-connection-strings\u0026quot;: { \u0026quot;HIGH\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_high.adwc.oraclecloud.com\u0026quot;, \u0026quot;LOW\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_low.adwc.oraclecloud.com\u0026quot;, \u0026quot;MEDIUM\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_medium.adwc.oraclecloud.com\u0026quot; }, \u0026quot;dedicated\u0026quot;: null, \u0026quot;high\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_high.adwc.oraclecloud.com\u0026quot;, \u0026quot;low\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_low.adwc.oraclecloud.com\u0026quot;, \u0026quot;medium\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_medium.adwc.oraclecloud.com\u0026quot; }, \u0026quot;connection-urls\u0026quot;: { \u0026quot;apex-url\u0026quot;: null, \u0026quot;machine-learning-user-management-url\u0026quot;: null, \u0026quot;sql-dev-web-url\u0026quot;: null }, \u0026quot;cpu-core-count\u0026quot;: 1, \u0026quot;data-safe-status\u0026quot;: \u0026quot;NOT_REGISTERED\u0026quot;, \u0026quot;data-storage-size-in-tbs\u0026quot;: 1, \u0026quot;db-name\u0026quot;: \u0026quot;DemoAdw\u0026quot;, \u0026quot;db-version\u0026quot;: \u0026quot;19c\u0026quot;, \u0026quot;db-workload\u0026quot;: \u0026quot;DW\u0026quot;, \u0026quot;defined-tags\u0026quot;: {}, \u0026quot;display-name\u0026quot;: \u0026quot;demo adw\u0026quot;, \u0026quot;freeform-tags\u0026quot;: {}, \u0026quot;id\u0026quot;: \u0026quot;ocid1.autonomousdatabase.oc1.phx.abyhqljtyedlfi6kgtod2va7hoxkz7yhle4nycuxsi4cqsmjtbftlmmulp6q\u0026quot;, \u0026quot;is-auto-scaling-enabled\u0026quot;: true, \u0026quot;is-dedicated\u0026quot;: false, \u0026quot;is-free-tier\u0026quot;: false, \u0026quot;is-preview\u0026quot;: false, \u0026quot;license-model\u0026quot;: \u0026quot;BRING_YOUR_OWN_LICENSE\u0026quot;, \u0026quot;lifecycle-details\u0026quot;: null, \u0026quot;lifecycle-state\u0026quot;: \u0026quot;STARTING\u0026quot;, \u0026quot;nsg-ids\u0026quot;: null, \u0026quot;private-endpoint\u0026quot;: null, \u0026quot;private-endpoint-label\u0026quot;: null, \u0026quot;service-console-url\u0026quot;: \u0026quot;https://adb.us-phoenix-1.oraclecloud.com/console/index.html?tenant_name=OCID1.TENANCY.OC1..AAAAAAAA6MA7KQ3BSIF76UZQIDV22CAJS3FPESGPQMMSGXIHLBCEMKKLRSQA\u0026amp;database_name=DEMOADW\u0026amp;service_type=ADW\u0026quot;, \u0026quot;subnet-id\u0026quot;: null, \u0026quot;system-tags\u0026quot;: {}, \u0026quot;time-created\u0026quot;: \u0026quot;2020-03-21T04:28:06.014000+00:00\u0026quot;, \u0026quot;time-deletion-of-free-autonomous-database\u0026quot;: null, \u0026quot;time-maintenance-begin\u0026quot;: \u0026quot;2020-03-22T02:00:00+00:00\u0026quot;, \u0026quot;time-maintenance-end\u0026quot;: \u0026quot;2020-03-22T06:00:00+00:00\u0026quot;, \u0026quot;time-reclamation-of-free-autonomous-database\u0026quot;: \u0026quot;2020-03-28T04:48:38.363000+00:00\u0026quot;, \u0026quot;used-data-storage-size-in-tbs\u0026quot;: 1, \u0026quot;whitelisted-ips\u0026quot;: null }, \u0026quot;etag\u0026quot;: \u0026quot;f78c626b\u0026quot;, \u0026quot;opc-work-request-id\u0026quot;: \u0026quot;ocid1.coreservicesworkrequest.oc1.phx.abyhqljt55gbpb6q3xh77gmm2ixehfo3bot4ey65eu3qbdxu7dme5w5bjnnq\u0026quot; } $    ADW 인스턴스 시작 명령이 실행되고 완료되면 ADW 인스턴스 상태는 다음과 같이 정지 상태가 됩니다.\n $ oci db autonomous-database get --autonomous-database-id $DEMOADW_OCID | grep lifecycle-state \u0026quot;lifecycle-state\u0026quot;: \u0026quot;AVAILABLE\u0026quot;, $  ADW 인스턴스 종료 현재 ADW 인스턴스 상태를 확인해 보니 사용 가능한 상태입니다.\n $ oci db autonomous-database get --autonomous-database-id $DEMOADW_OCID | grep lifecycle-state \u0026quot;lifecycle-state\u0026quot;: \u0026quot;AVAILABLE\u0026quot;, $  인스턴스가 사용 가능한 상태에서는 다음 명령을 입력하여 ADW 인스턴스를 종료할 수 있습니다.\noci db autonomous-database stop --autonomous-database-id $DEMOADW_OCID  아래 [접기/펼치기]를 클릭하여 ADW 인스턴스 종료 명령의 전체 출력 결과를 확인할 수 있습니다.\n  [접기/펼치기] DemoAdw 인스턴스 종료 명령 전체 로그    $ oci db autonomous-database stop --autonomous-database-id $DEMOADW_OCID { \u0026quot;data\u0026quot;: { \u0026quot;autonomous-container-database-id\u0026quot;: null, \u0026quot;compartment-id\u0026quot;: \u0026quot;ocid1.compartment.oc1..aaaaaaaar7os3x3p4e6dcak22z7m4zg2ogki6kr34b6sdlkcppzlfij7lvwq\u0026quot;, \u0026quot;connection-strings\u0026quot;: { \u0026quot;all-connection-strings\u0026quot;: { \u0026quot;HIGH\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_high.adwc.oraclecloud.com\u0026quot;, \u0026quot;LOW\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_low.adwc.oraclecloud.com\u0026quot;, \u0026quot;MEDIUM\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_medium.adwc.oraclecloud.com\u0026quot; }, \u0026quot;dedicated\u0026quot;: null, \u0026quot;high\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_high.adwc.oraclecloud.com\u0026quot;, \u0026quot;low\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_low.adwc.oraclecloud.com\u0026quot;, \u0026quot;medium\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_medium.adwc.oraclecloud.com\u0026quot; }, \u0026quot;connection-urls\u0026quot;: { \u0026quot;apex-url\u0026quot;: null, \u0026quot;machine-learning-user-management-url\u0026quot;: null, \u0026quot;sql-dev-web-url\u0026quot;: null }, \u0026quot;cpu-core-count\u0026quot;: 1, \u0026quot;data-safe-status\u0026quot;: \u0026quot;NOT_REGISTERED\u0026quot;, \u0026quot;data-storage-size-in-tbs\u0026quot;: 1, \u0026quot;db-name\u0026quot;: \u0026quot;DemoAdw\u0026quot;, \u0026quot;db-version\u0026quot;: \u0026quot;19c\u0026quot;, \u0026quot;db-workload\u0026quot;: \u0026quot;DW\u0026quot;, \u0026quot;defined-tags\u0026quot;: {}, \u0026quot;display-name\u0026quot;: \u0026quot;demo adw\u0026quot;, \u0026quot;freeform-tags\u0026quot;: {}, \u0026quot;id\u0026quot;: \u0026quot;ocid1.autonomousdatabase.oc1.phx.abyhqljtyedlfi6kgtod2va7hoxkz7yhle4nycuxsi4cqsmjtbftlmmulp6q\u0026quot;, \u0026quot;is-auto-scaling-enabled\u0026quot;: true, \u0026quot;is-dedicated\u0026quot;: false, \u0026quot;is-free-tier\u0026quot;: false, \u0026quot;is-preview\u0026quot;: false, \u0026quot;license-model\u0026quot;: \u0026quot;BRING_YOUR_OWN_LICENSE\u0026quot;, \u0026quot;lifecycle-details\u0026quot;: null, \u0026quot;lifecycle-state\u0026quot;: \u0026quot;STOPPING\u0026quot;, \u0026quot;nsg-ids\u0026quot;: null, \u0026quot;private-endpoint\u0026quot;: null, \u0026quot;private-endpoint-label\u0026quot;: null, \u0026quot;service-console-url\u0026quot;: \u0026quot;https://adb.us-phoenix-1.oraclecloud.com/console/index.html?tenant_name=OCID1.TENANCY.OC1..AAAAAAAA6MA7KQ3BSIF76UZQIDV22CAJS3FPESGPQMMSGXIHLBCEMKKLRSQA\u0026amp;database_name=DEMOADW\u0026amp;service_type=ADW\u0026quot;, \u0026quot;subnet-id\u0026quot;: null, \u0026quot;system-tags\u0026quot;: {}, \u0026quot;time-created\u0026quot;: \u0026quot;2020-03-21T04:28:06.014000+00:00\u0026quot;, \u0026quot;time-deletion-of-free-autonomous-database\u0026quot;: null, \u0026quot;time-maintenance-begin\u0026quot;: \u0026quot;2020-03-22T02:00:00+00:00\u0026quot;, \u0026quot;time-maintenance-end\u0026quot;: \u0026quot;2020-03-22T06:00:00+00:00\u0026quot;, \u0026quot;time-reclamation-of-free-autonomous-database\u0026quot;: \u0026quot;2020-03-28T04:48:38.363000+00:00\u0026quot;, \u0026quot;used-data-storage-size-in-tbs\u0026quot;: 1, \u0026quot;whitelisted-ips\u0026quot;: null }, \u0026quot;etag\u0026quot;: \u0026quot;18292e31\u0026quot;, \u0026quot;opc-work-request-id\u0026quot;: \u0026quot;ocid1.coreservicesworkrequest.oc1.phx.abyhqljto37oa2icuayj5gpd7tdtmtex6b5n4yr7ztivkzrze2b6lzwwjh5a\u0026quot; } $    ADW 인스턴스 종료 명령이 실행되고 완료되면 ADW 인스턴스 상태는 다음과 같이 정지 상태가 됩니다.\n $ oci db autonomous-database get --autonomous-database-id $DEMOADW_OCID | grep lifecycle-state \u0026quot;lifecycle-state\u0026quot;: \u0026quot;STOPPED\u0026quot;, $  ADW 인스턴스 제거 다음 명령을 입력하여 ADW 인스턴스를 종료할 수 있습니다.\noci db autonomous-database delete --autonomous-database-id $DEMOADW_OCID  위 명령을 실행하면 다음과 같은 결과가 출력됩니다.\n $ oci db autonomous-database delete --autonomous-database-id $DEMOADW_OCID Are you sure you want to delete this resource? [y/N]: y { \u0026quot;opc-work-request-id\u0026quot;: \u0026quot;ocid1.coreservicesworkrequest.oc1.phx.abyhqljt6uqdjtmrbpj6etm33v7yaukhbtb42hbpicuf4qelf4vytlzh2oxa\u0026quot; } $  인스턴스 삭제 명령을 수행하고 인스턴스 상태를 조회하면 다음과 같이 TERMINATING 상태를 거쳐 TERMINATED로 전환되는 것을 확인할 수 있습니다.\n $ oci db autonomous-database get --autonomous-database-id $DEMOADW_OCID | grep lifecycle-state \u0026quot;lifecycle-state\u0026quot;: \u0026quot;TERMINATING\u0026quot;, $ oci db autonomous-database get --autonomous-database-id $DEMOADW_OCID | grep lifecycle-state \u0026quot;lifecycle-state\u0026quot;: \u0026quot;TERMINATED\u0026quot;, $  "
},
{
	"uri": "/oci_docs/10_quickstart/adb/sqldeveloper/",
	"title": "SQL Developer의 ADW 연결하기",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)에서 프로비저닝한 ADW 인스턴스의 SQL Developer 설정 방법을 정리합니다.",
	"content": " 이번 문서는 오라클 클라우드 Free Tier 계정에 ADW 인스턴스를 만든 전제로 합니다. 현재 ADW 인스턴스이 없다면, 다음 문서를 참조하여 ADW 인스턴스(DemoADW)를 만드시기 바랍니다.\n ADW 인스턴스 생성     이번 문서에서는 Oracle SQL Developer로 ADW 인스턴스에 연결하는 설정을 구성하는 절차를 소개합니다. 다음과 같은 목차로 진행 됩니다.\n SQL Developer의 ADW 접속 설정  ADW Wallet 다운로드 Wallet 파일 구성 Oracle SQL Developer 설정 Oracle SQL Developer 접속   \n SQL Developer의 ADW 접속 설정 ADW Wallet 다운로드 ADW 인스턴스의 접속 설정을 SQL Developer에 구성하기 위해서는 Wallet 파일이 필요합니다. Wallet 파일을 다운로드하기 위해서 OCI Console의 ADW 인스턴스 상세 페이지에서 DB Connection 버튼을 클릭합니다.\nOCI Console의 ADW 인스턴스 상세 페이지에서 DB Connection 버튼을 클릭하면, 다음과 같이 Database Connection 창이 오픈됩니다. 다음 그림과 같이 Wallet Type을 Instance Wallet을 선택하고 Download Wallet 버튼을 클릭합니다.\nDownload Wallet 버튼을 클릭하면 Wallet 파일에 대한 패스워드를 설청 화면이 출력됩니다. Wallet 파일에 대한 패스워드를 설정한 다음에, Download 버튼을 클릭합니다.\nDownload 버튼을 클릭하면, 다음과 같은 형식의 파일이 다운로드됩니다.\nWallet_\u0026lt;Database_name\u0026gt;.zip  이와 같으 형식으로 Wallet_DemoApp.zip 파일이 다운로드됩니다.\nWallet 파일 구성 Wallet_DemoApp.zip은 다음과 같은 파일을 포함합니다.\n데이터베이스 접속 정보를 제공하는 tnsnames.ora 파일은 다음과 같은 내용으로 만들어집니다. 이 파일의 tnsname인 demoadw_high, demoadw_low, demoadw_medium을 다음에 사용합니다.\ndemoadw_high = (description= (retry_count=20) (retry_delay=3) (address=(protocol=tcps)(port=1522)(host=adb.us-ashburn-1.oraclecloud.com)) (connect_data=(service_name=w0a8icio6wvena7_demoadw_high.adwc.oraclecloud.com)) (security= (ssl_server_cert_dn=\u0026quot;CN=adwc.uscom-east-1.oraclecloud.com,OU=Oracle BMCS US,O=Oracle Corporation,L=Redwood City,ST=California,C=US\u0026quot;) ) ) demoadw_low = (description= (retry_count=20) (retry_delay=3) (address=(protocol=tcps)(port=1522)(host=adb.us-ashburn-1.oraclecloud.com)) (connect_data=(service_name=w0a8icio6wvena7_demoadw_low.adwc.oraclecloud.com)) (security=(ssl_server_cert_dn=\u0026quot;CN=adwc.uscom-east-1.oraclecloud.com,OU=Oracle BMCS US,O=Oracle Corporation,L=Redwood City,ST=California,C=US\u0026quot;) ) ) demoadw_medium = (description= (retry_count=20) (retry_delay=3) (address=(protocol=tcps)(port=1522)(host=adb.us-ashburn-1.oraclecloud.com)) (connect_data=(service_name=w0a8icio6wvena7_demoadw_medium.adwc.oraclecloud.com)) (security= (ssl_server_cert_dn=\u0026quot;CN=adwc.uscom-east-1.oraclecloud.com,OU=Oracle BMCS US,O=Oracle Corporation,L=Redwood City,ST=California,C=US\u0026quot;) ) )  Oracle SQL Developer 설정 SQL Developer를 실행하고 다음과 같이 \u0026ldquo;+\u0026rdquo; 아이콘을 클릭하고, Connect 관리 창을 오픈합니다.\nConnection 관리 창에서, 다음과 같은 값을 설정합니다.\n   설정 항목 설정 값 설명     Name demo adw 커넥션 설정을 구분하는 이름   사용자 이름 admin 접속에 사용할 데이터베이스 사용자 명   비밀번호 Welcome123456 사용자 이름으로 설정한 데이터베이스 사용자의 패스워드   접속 유형 클라우드 전자지갑(Cloud Wallet) 인증 정보 설정 방식   구성 파일 /sandbox/Wallet_DemoApp.zip 다운로드 wallet 파일 위치   서비스 demoadw_medium tnsname.ora 파일에 등록된 tnsname 명    위 설정을 입력한 다음에 테스트(T) 버튼을 클릭하여 커넥션 설정을 테스트합니다. 테스트가 성공으로 표시되면 저장(S) 버튼을 클릭하고 저장합니다.\nOracle SQL Developer 접속 Oracle 접속의 demo adw을 더블 클릭하고 다음과 같이 패스워드를 입력하고 접속을 시도합니다.\n접속이 이뤄지면, 다음과 같이 SQL을 입력하고 쿼리를 수행할 수 있습니다.\n"
},
{
	"uri": "/oci_docs/00_oci/terminologies/",
	"title": "OCI 기본 용어 정리",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)에서 주로 사용되는 용어를 정의합니다. ",
	"content": " Oracle Cloud를 새로 접하시는 분들을 위하여 Oracle Cloud에서 자주 사용하는 Oracle Cloud 핵심 용어를 간단하게 정리합니다.\n이번 문서는 다음과 같은 목차로 구성됩니다.\n OCI 주요 용어  Oracle Cloud Infrastructure 리전(Region)과 AD(Availability Domains) OCI 콘솔(Console) Tenancy(테넌시) Compartment(컴파트먼트) Virtual Cloud Network(VCN) Bare Metal Host Instance(인스턴스) Image(이미지) Shape Key Pair 블록 볼륨(BLOCK VOLUME) Object Storage 버킷(BUCKET) OCID(ORACLE CLOUD IDENTIFIER)  참고 문서    OCI 주요 용어 OCI이 완전 입문자를 위하여 Oracle Cloud에서 자주 사용되는 용어를 정리합니다.\nOracle Cloud Infrastructure Orale Cloud Infrasturcture는 2018년부터 사용하기 시작한 Oracle Cloud의 새로운 브랜드명입니다. 초기에 오라클은 Nimbula를 인수하여 클라우드 서비스를 개발하였고, 2014년 Oracle은 OPC(Oracle Public Cloud)라는 브랜드로 클라우드 서비스를 시작했습니다. 이 시점부터 오라클은 새로운 2세대 클라우드 아키텍처를 개발하기 시작했습니다. 오라클의 2세대 클라우드 아키텍처로 개발된 오라클 클라우드 서비스가 바로 Oracle Cloud Infrastructure(이하 OCI)입니다. 2018년 Oracle Cloud 인프라 구현 기술은 OCI로 전면 교체되었고, 동시에 오라클 클라우드 브랜드명도 OPC(Oracle Public Cloud)에서 OCI(Oracle Cloud Infrastructure)로 변경되었습니다.\n리전(Region)과 AD(Availability Domains) Oracle Cloud Infrastructure(OCI)는 리전(Region)과 AD(Availability Domains)에서 운영됩니다. 리전은 데이터 센터가 운영되는 지리적인 영역을 나타냅니다. 그리고 AD는 리전을 구성하고 실제 OCI 서비스가 운영되는 데이터 센터입니다. 각 OCI 리전은 1개에서 최대 3개 AD로 구성됩니다. 리전은 오라클 클라우드가 서비스되는 물리적 데이터 센터인 AD를 묶는 논리적 단위입니다. 따라서 서비스 지역의 물리적 AD를 추상화하는 서비스 거점의 의미가 있습니다. 리전은 완전히 독립된 OCI 최상위 단위입니다. 각 리전은 네트워크로 연결될 뿐 모든 서비스와 자원은 완전히 격리됩니다.\n2020년 1월 12일 현재 Commercial Region을 12개를 운영하고 있습니다. 2020년 말까지 Commercial Region과 Government Region을 합쳐 총 36개까지 확대할 예정에 있습니다. 다음은 2020년 말 기준 OCI 리전 지도입니다.\n리전을 구성하는 각 AD는 어떤 자원도 공유하지 않는 물리적으로 완전히 독립된 데이터 센터입니다. 리전을 구성하는 AD은 파워와 네트워크 등 어떤 물리적 자원도 공유하지 않습니다. 따라서 특정 AD 장애가 다른 AD로 파급되지 않습니다. AD는 Region 고가용성을 위한 설계입니다.\nOCI 콘솔(Console) OCI 자원을 관리하고 접근하기 위해서 제공하는 웹 기반 UI입니다.\nTenancy(테넌시) OCI에 계정(Account)을 생성하면, 해당 계정(Account)을 위한 Tenancy가 생성됩니다. OCI에서 테넌시는 완전히 독립되고 격리된 사용자 기준의 최상위 단위입니다. OCI에 생성된 계정이 바로 Tenancy라고 말할 수 있습니다.\nCompartment(컴파트먼트) 컴파트먼트는 클라우드 자원을 구성하고 접근 제어하기 위한 논리적인 단위입니다. OCI에서 만들어지는 대부분 자원은 특정 컴파트먼트에 할당됩니다. OCI 자원에는 VM 인스턴스, VCN(Virtual Cloud Networks), 블록 볼륨 등이 있습니다. 모든 OCI 자원은 특정 Compartment에 할당되고, Compartment 단위로 OCI User Group(사용자 그룹) 단위로 사용자 접근 정책이 설정 및 관리됩니다. 컴파트먼트는 물리적으로 실체가 있는 오브젝트가 아닌 논리적인 그룹입니다.\nOCI 계정이 생성될 때 Tenancy가 생성됩니다. 이 Tenancy가 루트 컴파트먼트(Root Compartment)입니다. 루트 컴파트먼트(Root Compartment)는 최상의 컴파트먼트입니다. 파일 시스템의 루트 디렉터리(/)와 비슷합니다. 디렉터리 구조와 같이 Root Compartment 아래에 새로운 Compartment를 추가할 수 있습니다.\nVirtual Cloud Network(VCN) Virtual Cloud Network (VCN)은 서브넷, 라우트 테이블과 게이트웨이로 구성되는 전통적인 네트워크의 가상화 버전입니다. VCN은 리전 범위의 자원입니다. VCN은 특정 리전에 종속됩니다. VCN을 구성하는 서브넷(Subnet)을 만들 때, 리전 범위와 AD 범위를 선택할 수 있습니다. 리전 범위로 지정하면 리전을 구성하는 모든 AD에 걸쳐 서브넷이 구성됩니다. AD 범위를 지정하면 특정 AD에 위치합니다.\nVCN는 다음과 같은 컴포넌트로 구성됩니다.\n Subnet  public subnet: 서브넷에 포함되는 VM 인스턴스에 Public IP 설정 가능 private subnet: 서브넷에 포함되는 VM 인스턴스가 Public IP를 갖지 못함  Internet Gateway: 인터넷 연결 관문 Route Table: VCN을 위한 가상의 라우트 테이블 Security Lists: VCN의 가상 방화벽  Bare Metal Host OCI가 제공하는 사용자가 직접 제어 가능한 물리적인 서버가 Bare Metal Host입니다. Bare Metal Host에 하이퍼바이저 없이 Bere Metal 서버를 돌릴 수 있습니다. 이렇게 동작하는 서버를 Bare metal compute instances라고 합니다. OCI 사용자가 직접 물리적 CPU, 메모리, NIC(Network Interface Card)를 관리 할 수 있습니다. 이렇게 관리하는 자원은 다른 테넌트와 어떠한 자원도 공유하지 않습니다.\nInstance(인스턴스) OCI에서 동작하는 VM을 인스턴스라고 합니다.\nImage(이미지) Image는 인스턴스를 위해서 운영체제와 여러 소프트웨어를 정의하는 가상 하드웨어 드라이브 템플릿입니다. OCI에서 인스턴스를 구동시킬 때, 이미지를 선택합니다. OCI는 다양한 이미지를 제공하며, OCI 사용자는 추가로 사용자 정의 이미지를 등록하고 사용할 수 있습니다.\nShape Shape은 인스턴스에 할당하는 컴퓨팅 자원(CPU, Memory 등) 템플릿입니다. 다음은 OCI가 제공하는 여러 Shape 중에서 Standard Shape 목록입니다.\nKey Pair Key Pair(키 페어)는 OCI가 사용하는 인증 방식입니다. Key Pair(키 페어)는 개인 키(private key) 파일과 공개 키(public key) 파일로 구성됩니다. 공개 키는 OCI에 업로드됩니다. OCI 사용자는 개인 키를 패스워드처럼 비공개로 관리합니다.\n여러 스펙으로 Key Pair(키 페어)를 만들 수 있습니다. OCI는 목적에 따라 두 가지 유형의 Key Pair(키 페어)를 사용합니다.\n 인스턴스 SSH Key Pair(키 페어)  인스턴스 SSH Key Pair(키 페어)는 VM 인스턴스에 SSH 접속에 사용됨. 인스턴스를 프로비저닝할 때, 공개 키(public key)를 등록. 등록된 공개 키(public key)는 인스턴스의 기본 OS 계정의 authorized key 파일에 저장  인스턴스의 기본 OS 계정: 오라클 리눅스(oci), 우분투(ubuntu)  ssh 접속 시, 사용자의 개인 키(Private Key)를 authorized key 파일에 저장된 공개 키로 검증.  API signing key pair(API 서명 키 페어)  API signing key pair는 PEM 포멧을 사용. API 요청을 제출할 때 사용자 인증에 사용. REST API로 OCI를 접속하는 사용자가 사용.   다음 그림은 OCI 사용자에 API 서명 키 페어를 등록하는 화면입니다.\n블록 볼륨(BLOCK VOLUME) 블록 볼륨은 OCI 인스턴스에 영구적인 저장 공간을 제공하는 가상 디스크입니다. 기존에 물리적 하드 디스크 드라이브를 사용했던 것 처럼, 클라우드 인스턴스에서는 블록 볼륨을 사용합니다. OCI 사용자는 데이터 유시 없이 인스턴스에 볼륨을 분리해서 다른 인스턴스에 붙일수 있습니다.\nObject Storage 오브젝트 스토리지(Object Storage)는 객체로 데이터를 저장하고 관리하는 스토리지 아키텍처입니다. 모든 데이터 타입을 저장할 수 있습니다. 최대 객체 사이즈는 10TB입니다. Object Storage에 저장되는 최대 파일 사이즈는 50GB입니다. 50GB보다 큰 객체는 여러 파일로 분할되어 저장됩니다. 오브젝트 스토리지에는 변경 빈도가 낮은 데이터가 저장됩니다. 다음과 같은 용도로 사용됩니다.\n 데이터 백업 파일 공유 로그나 센서 데이터와 같은 비정형 데이터 저장  버킷(BUCKET) 버킷은 오브젝트 스토리지(Object Storage)에 저장되는 데이터와 파일을 묶는 논리적인 그룹입니다. 버킷에 저장되는 객체 수는 제한이 없습니다.\nOCID(ORACLE CLOUD IDENTIFIER) 모든 OCI 자원은 유일한 ID를 갖습니다. 이 ID가 Oracle Cloud Identifier(OCID)입니다. 이 ID에는 자원 정보가 포함됩니다.\n참고 문서  [OCI Official Documentation 사이트] Key Concepts and Terminology    [k21academy] Oracle Cloud Infrastructure (OCI) : Region, AD, FD, Tenancy, Compartment, VCN, IAM, Storage Service    [OCI 100 Training] Virtual Cloud Network   https://www.oracle.com/a/ocom/docs/cloud/virtual-cloud-network-100.pdf  "
},
{
	"uri": "/oci_docs/30_core_infrastructure/block_storage/",
	"title": "Block Storage",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/oci_docs/10_quickstart/compute/basic_linux_vm/adding_block_stoage/",
	"title": "Block Storage 추가",
	"tags": [],
	"description": "",
	"content": " 이번 문서는 오라클 클라우드 Free Tier 계정을 생성하고 로그인한 상황을 전제로 합니다. 만약에 현재 오라클 클라우드 계정이 없는 상태라면, 다음 문서를 참조하여 오라클 클라우드 계정을 만들고 OCI 콘솔에 로그인하시기 바랍니다.\n OCI FREE TIER 계정 등록 Free Tier 계정 로그인  이번 문서에서는 OCI 콘솔에서 OCI Linux VM 인스턴스에 Block Storage를 추가하고 마운트하는 과정을 소개합니다. OCI Linux VM 인스턴스에 Block Storage를 추가하는 과정은 다음과 같은 목차로 진행됩니다.\n 0. OIC Block Volume 1. 사전 준비  1.1 OCI 자원 준비  2. OCI VM에 Block Volume 추가  2.1 Block Volume 생성 2.2 Block Volume 연결 2.3 Block Volume 포멧 2.3 Block Volume 마운트 2.5 Block Volume 마운트 포인트 소유권 변경 2.6 /etc/fstab에 UUID 등록 2.7 전체 터니멀 작업 로그  3. Block Volume 연결 끊기 및 제거  3.1 unmount 3.2 /etc/fstab에 설정 제거 3.3 OCI Console에서 block volume 연결 끊기 3.4 OCI Console에서 block volue 삭제  4 참고 문서  \n 0. OIC Block Volume OCI Block Volume은 네트워크 스토리지입니다. Block Storage는 한 번에 1개 OCI Compute 인스턴스에 장착될 수도 있고, 한 번에 여러 OCI Compute 인스턴스에 마운트되어 공유 스토리지로 사용될 수 있습니다.\nOCI Block Volume 서비스는 블록 스토리지를 제공하고 관리하는 네트워크 스토리지 서비스입니다. OCI Compute 인스턴스는 이 Block Storage를 마운트하여 스토리지를 확장하여 사용할 수 있습니다. Block Volume을 Cloud Compute를 위한 HDD라고 생각해도 좋습니다. Block Volume을 HDD와 같이 OCI Compute 인스턴스에 연결해서 사용하고 마운트하여 사용할 수 있습니다. HDD와 차이점은 Block Volume은 네트워크 스토리지라는 것뿐입니다. Block Volume 서비스로 다음과 같은 작업을 할 수 있습니다.\n 블록 볼륨 생성 블록 볼륨 인스턴스에 추가 블록 볼륨 인스턴스에 연결 블록 볼륨 이동 블록 볼륨 백업  Block Volume은 한 번에 1개의 인스턴스에 전용으로 연결될 수도 있고, 여러 인스턴스에 공용 스토리지로 연결될 수도 있습니다. 공유 스토리지에 사용될 경우 OCI Compute 인스턴스에는 Clusterware가 설치 및 설정됩니다. 기존에 인스턴스에 연결하여 사용 중이던 Block Volume을 분리하여 다른 인스턴스에 연결할 수 있습니다. A 인스턴스에 연결되어 데이터를 저장하던 Block Volume을 A 인스턴스에서 떼어낸 후, B 인스턴스에 연결할 수 있습니다. 이때 데이터 유실은 발생하지 않습니다.\n1. 사전 준비 이 문서에서 다루는 OCI Compute 인스턴스에 Block Storage를 추가하는 절차는 다음과 같은 자원이 이미 만들어져 있다는 가정으로 진행됩니다.\n1.1 OCI 자원 준비 다음 자원이 없다면 \u0026ldquo;자원 생성 참조 문서\u0026ldquo;를 참조하여 해당 자원을 생성하시기 바랍니다.\n   자원 유형 자원 이름 소속 Compartment 자원 생성 참조 문서     Compartment sanbox root Compartment 추가      VCN demo_vcn root \u0026gt; sandbox 간편 VCN 만들기      Compute VM demo_linux_vm root \u0026gt; sandbox Oracle Linux VM 인스턴스 생성       2. OCI VM에 Block Volume 추가 이 문서에서는 OCI Linux VM에 Block Storage를 추가하는 절차는 다음은 순서로 살펴보겠습니다.\n Block Volume 생성 Block Volume을 인스턴스에 추가 Block Volume을 인스턴스에 연결 Block Volume 포맷 Block Volume 마운트  위 과정을 모두 마치면 다음과 같은 상태가 만들어집니다.\n2.1 Block Volume 생성 Block Volume을 만들기 위해서는 OCI Console에서 다음 메뉴 패스로 Block Volume 관리 페이지로 이동해야 합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Block Storage  Block Volumes Block Volume 관리 페이지에서 앞으로 생성할 Block Volume을 할당할 Compartment로 sandbox(root/sandbox)를 선택합니다. 그리고 “Create Block Volume” 버튼을 클릭합니다.\n“Create Block Volume” 버튼을 클릭하면 __Create Block Volume\u0026rdquo; 생성 입력 폼이 나타납니다. 입력 폼에 다음과 같은 입력값을 설정합니다.\n   입력 항목 설정값 설명     Name demo_vol01    Create In Compartment sandbox Block Volume을 할당할 Compartment   Availability Domain fttO:US-ASHBURN-AD-1 리전에 따라 달라지는 값입니다. 데모에서는 편의상 AD-1로 통일합니다.   Size(In GB) 1024 기본값인 1TB를 사용합니다.   Compartment For Backup Policies sandbox    Backup Policy Bronze 이 항목의 선택은 제약이 없습니다. 다른 값 선택이 앞으로 진행에 영향이 없습니다.   Volume Porformance Balanced 기본값을 사용합니다. 다른 값 선택이 앞으로 진행에 영향이 없습니다.   Encryption Encrypt Using Oracle-Managed Keys 기본값을 사용합니다.    위 항목을 입력한 결과는 다음 이미지와 같습니다. 위 항목을 모두 입력하고 Create Block Volume 버튼을 클릭합니다.\nBlock Volume은 다음 이미지와 같이 생성됩니다. Block Volume은 다음 이미지와 같이 아이콘 색깔이 변하면서 만들어집니다.\n2.2 Block Volume 연결 demo_linux_vm Compute 인스턴스에 Block Volume을 연결하기 위해서 다음 메뉴 패스를 이용하여 demo_linux_vm 인스턴스 상세 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Compute  Instance  (Compute 인스턴스 목록에서) demo_linux_vm 클릭 demo_linux_vm 상세 페이지에서 왼쪽 메뉴에서 \u0026ldquo;Attached Block Volumes\u0026rdquo; 링크합니다. 그리고 다음 이미지와 같이 \u0026ldquo;Attach Blcok Volume\u0026rdquo; 버튼을 클릭합니다.\n\u0026ldquo;Attach Blcok Volume\u0026rdquo; 버튼을 클릭하면, \u0026ldquo;Attach Blcok Volume\u0026rdquo; 입력 폼이 나타납니다. 이 입력 폼에 다음과 같은 설정값을 입력합니다.\n   입력항목 설정값 설명     Choose how you want to attach your block volume ISCSI 선택    Access READ/WRITE 1개 Compute에 전용으로 연결되는 모드   Select Volume 체크    BLOCK VOLUME Compartment sandbox    BLOCK VOLUME demo_vol01    Device Path /dev/oracleoci/oraclevdb     위 입력값을 설정하면 다음 이미지와 형태가 됩니다. 모든 값을 입력하고 \u0026ldquo;Attach\u0026rdquo; 버튼을 클릭합니다.\n\u0026ldquo;Attach\u0026rdquo; 버튼을 클릭하면 demo_linux_vm 상세 페이지의 Attached Block Volume 블록에 앞에서 지정한 Block Volume 목록이 만들어진 것을 확인할 수 있습니다.\nAttached Block Volume 블록의 목록에서 demo_vol01의 오른쪽 마지막 메뉴 아이콘을 클릭하고 \u0026ldquo;iSCSI Command \u0026amp; Information\u0026rdquo; 메뉴를 클릭합니다.\n\u0026ldquo;iSCSI Command \u0026amp; Information\u0026rdquo; 메뉴를 클릭하면 다음 이미지와 같이 Block Volume을 연결하고 제거하는 iscsiadm 명령이 출력됩니다.\n위 이미지에서 출력된 Attach Commands의 3개 명령을 복사하여, demo_linux_vm 인스턴스에 ssh 접속하여 실행해야 합니다. 아래 이미지는 demo_linux_vm에 ssh 접속하여 다음 fdsik 명령을 입력하여 현재 OS가 인식하는 디스크 파이션 목록을 출력한 결과입니다.\nsudo fdisk -l  아래 이미지에서 위 명령의 실행 결과를 보면, 현재 boot volume인 /dev/sda만이 인식하고 있음을 알 수 있습니다.\n앞에서 복사한 3개 iscsiadm 명령을 순서대로 demo_linux_vm 접속 터미널에 실행합니다. 그리고 위에서 실행한 sudo fdisk -l 명령을 다시 실행합니다. 아래 이미지에서 iscsiadm 명령 3개를 모두 실행한 다음에 /dev/sdb를 인식하고 있는 것을 확인할 수 있습니다.\n2.3 Block Volume 포멧 블럭 장치 목록을 보여주는 리눅스 명령어인 \u0026ldquo;lsblk -f\u0026rdquo;을 실행하면, 현재 /dev/sdb를 인식할 뿐 어떤 정보도 확인할 수 없습니다. 이제는 /dev/sdb을 포맷할 순서입니다.\n/dev/sdb를 다음 명령을 입력하여 포맷합니다.\nsudo mkfs -t \u0026lt;fs type\u0026gt; /dev/sdb  으로는 xfs를 설정합니다. XFS는 Silicon Graphics, Inc.에서 설계한 확장성이 뛰어난 고성능 파일 시스템입니다. XFS는 Red Hat Enterprise Linux 7과 Oracle Enterprise Linux 7의 기본 파일 시스템입니다.\nsudo mkfs -t xfs /dev/sdb  위 명령을 실행하여 /dev/sdb를 포맷한 다음에 \u0026ldquo;lsblk -l\u0026rdquo;를 실행하면 다음 이미지와 같이 파일 시스템 타입과 UUID가 등록된 것을 확인할 수 있습니다. 이제는 블록을 특정 디렉터리로 마운트할 차례입니다.\n2.3 Block Volume 마운트 블록을 마운트할 디렉터리를 생성합니다. 이 문서에서는 /dev/sdb를 /demo_mnt/demo_vol01/에 마운트할 것입니다. 다음 명령을 입력하여 /demo_mnt/demo_vol01/ 디렉터리를 만듭니다.\n[opc@demo-linux-vm ~]$ sudo mkdir -p /demo_mnt/demo_vol01  그리고 /etc/fstab을 다음 명령으로 오픈합니다.\nsudo vi /etc/fstab  그리고 마지막 줄에 다음 설정을 입력합니다.\n/dev/oracleoci/oraclevdb /demo_mnt/demo_vol01 xfs defaults,_netdev,nofail 0 2  위 설정 파일은 시스템이 부팅될 때, 파일 시스템을 마운트하는 정보를 제공합니다. 설정의 의미는 다음과 같습니다.\n   설정 값 의미     /dev/oracleoci/oraclevdb 마운트 대상 블록 장치   /demo_mnt/demo_vol01 블록을 마운트할 위치   xfs 파일 포맷   defaults,_netdev,nofail 기본설정,네트웍 볼륨,볼륨마운트 오류 시 에러 보고하지 않음   0 덤프를 설정하지 않음   2 우선순위 2순위 설정, boot volume을 1순위로 설정, 1순위 점검 후 점검    다음 이미지와 같이 설정하고 저장합니다.\n다음 명령을 입력하여 /etc/fstab에 설정된 볼륨을 마운트합니다.\nsudo mount -a  2.5 Block Volume 마운트 포인트 소유권 변경 /etc/fstab 파일의 모든 볼륨을 마운트하면, /demo_mnt/demo_vol01 디렉터리가 root로 마운트 된 것을 확인할 수 있습니다. 다음 명령을 입력하여 /demo_mnt/demo_vol01의 소유권은 root에서 opc로 변경합니다.\n[opc@demo-linux-vm ~]$ sudo chown opc:opc /demo_mnt/demo_vol01/ [opc@demo-linux-vm ~]$ ls -al /demo_mnt/demo_vol01/ 합계 0 drwxr-xr-x. 2 opc opc 6 3월 8 10:16 . drwxr-xr-x. 3 root root 24 3월 8 10:18 ..  다음 이미지에서는 /demo_mnt/demo_vol01 디렉터리의 소유권을 root:root에서 opc:opc로 변경하고 해당 디렉터리에 log 파일을 만드는 과정입니다. log 파일 소유권이 opc:opc로 설정된 것을 확인할 수 있습니다.\n/demo_mnt/demo_vol01에 설정은 시스템을 재시작(rebookt)해도 그래도 유지됩니다. Oracle Linux 7이 재시작할 때, /etc/fstab에 등록된 파일 시스템이 마운트됩니다. 이때 앞에서 설정한 마운트 포인트의 소유권 설정이 그래도 유지되는 것을 확인할 수 있습니다.\n2.6 /etc/fstab에 UUID 등록 Boot Volume을 제외하고 마운트할 볼륨이 2개 이상일 경우에 서버를 재시작할 때, Block Volume Path가 변경되어 마운트 장치가 변경되는 이슈가 발생할 수 있습니다. 이러한 문제를 피하기 위해서, 2개 이상의 block volume을 연결할 경우에 /etc/fstab에 uuid를 사용할 것을 권장합니다. block volume의 uuid는 다음 명령으로 확인할 수 있습니다.\nsudo lsblk -f  위 명령을 실행하면 각 볼륨 장차의 파일 포맷, uuid 및 마운트 위지 정보가 출력됩니다.\n/etc/fstab에 마운트 정보를 다음과 같이 입력합니다.\n## /dev/oracleoci/oraclevdb /demo_mnt/demo_vol1 xfs defaults,_netdev,nofail 0 2 UUID=47dd6348-4357-421d-a089-40f2c05b8822 /demo_mnt/demo_vol1 xfs defaults,_netdev,nofail 0 2  다음 명령을 입력하여 볼륨을 마운트하고 소유권 변경을 수행합니다.\n[opc@demo-linux-vm ~]$ sudo mount -a ## 파일 시스템 마운트 [opc@demo-linux-vm ~]$ sudo chown opc:opc /demo_mnt/demo_vol01/ ## 마운트 포인트 소유권 변경 [opc@demo-linux-vm ~]$  2.7 전체 터니멀 작업 로그 Block Volume을 demo_linux_vm에 연결한 후, 인스턴스에 ssh 접속한 다음에 터미널에 입력하는 모든 명령 로그는 다음과 같습니다.\n$ ssh -i ./id_rsa opc@150.136.57.41 ## demo_linux_vm에 ssh 접속 The authenticity of host '150.136.57.41 (150.136.57.41)' can't be established. ECDSA key fingerprint is SHA256:Q7YlJql7MZqf6mp/ZQnP/0cQtcX6756U+pHEqAqy+CU. Are you sure you want to continue connecting (yes/no)? yes Warning: Permanently added '150.136.57.41' (ECDSA) to the list of known hosts. [opc@demo-linux-vm ~]$ [opc@demo-linux-vm ~]$ sudo fdisk -l ## 블록 파이션 조회 WARNING: fdisk GPT support is currently new, and therefore in an experimental phase. Use at your own discretion. Disk /dev/sda: 50.0 GB, 50010783744 bytes, 97677312 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 4096 bytes I/O size (minimum/optimal): 4096 bytes / 1048576 bytes Disk label type: gpt Disk identifier: 23A7AABA-6B11-4E98-A2CE-4962B4F7BCC3 # Start End Size Type Name 1 2048 411647 200M EFI System EFI System Partition 2 411648 17188863 8G Linux swap 3 17188864 97675263 38.4G Microsoft basic [opc@demo-linux-vm ~]$ [opc@demo-linux-vm ~]$ ## 3개 iscsiadm 명령 실행 [opc@demo-linux-vm ~]$ sudo iscsiadm -m node -o new -T iqn.2015-12.com.oracleiaas:dd5529e3-b556-4603-b563-83d2ccfc5128 -p 169.254.2.2:3260 New iSCSI node [tcp:[hw=,ip=,net_if=,iscsi_if=default] 169.254.2.2,3260,-1 iqn.2015-12.com.oracleiaas:dd5529e3-b556-4603-b563-83d2ccfc5128] added [opc@demo-linux-vm ~]$ sudo iscsiadm -m node -o new -T iqn.2015-12.com.oracleiaas:dd5529e3-b556-4603-b563-83d2ccfc5128 -p 169.254.2.2:3260 New iSCSI node [tcp:[hw=,ip=,net_if=,iscsi_if=default] 169.254.2.2,3260,-1 iqn.2015-12.com.oracleiaas:dd5529e3-b556-4603-b563-83d2ccfc5128] added [opc@demo-linux-vm ~]$ sudo iscsiadm -m node -o update -T iqn.2015-12.com.oracleiaas:dd5529e3-b556-4603-b563-83d2ccfc5128 -n node.startup -v automatic [opc@demo-linux-vm ~]$ [opc@demo-linux-vm ~]$ sudo fdisk -l ## 블록 파이션 조회, /dev/sdb 연결됨 WARNING: fdisk GPT support is currently new, and therefore in an experimental phase. Use at your own discretion. Disk /dev/sda: 50.0 GB, 50010783744 bytes, 97677312 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 4096 bytes I/O size (minimum/optimal): 4096 bytes / 1048576 bytes Disk label type: gpt Disk identifier: 23A7AABA-6B11-4E98-A2CE-4962B4F7BCC3 # Start End Size Type Name 1 2048 411647 200M EFI System EFI System Partition 2 411648 17188863 8G Linux swap 3 17188864 97675263 38.4G Microsoft basic Disk /dev/sdb: 1099.5 GB, 1099511627776 bytes, 2147483648 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 4096 bytes I/O size (minimum/optimal): 4096 bytes / 1048576 bytes [opc@demo-linux-vm ~]$ lsblk -f ## 블록 파이션 정보 조회 NAME FSTYPE LABEL UUID MOUNTPOINT sdb sda ├─sda2 swap 02789b15-4058-485e-86a6-38522a5c00c6 [SWAP] ├─sda3 xfs 53bb89bf-50e3-4358-9f5e-e9c5ac8d535c / └─sda1 vfat F831-6C7E /boot/efi [opc@demo-linux-vm ~]$ [opc@demo-linux-vm ~]$ sudo mkfs -t xfs /dev/sdb ## 블록 포멧 meta-data=/dev/sdb isize=256 agcount=4, agsize=67108864 blks = sectsz=4096 attr=2, projid32bit=1 = crc=0 finobt=0, sparse=0, rmapbt=0, reflink=0 data = bsize=4096 blocks=268435456, imaxpct=5 = sunit=0 swidth=0 blks naming =version 2 bsize=4096 ascii-ci=0 ftype=1 log =internal log bsize=4096 blocks=131072, version=2 = sectsz=4096 sunit=1 blks, lazy-count=1 realtime =none extsz=4096 blocks=0, rtextents=0 [opc@demo-linux-vm ~]$ lsblk -f ## 블록 파이션 정보 조회 NAME FSTYPE LABEL UUID MOUNTPOINT sdb xfs 47dd6348-4357-421d-a089-40f2c05b8822 sda ├─sda2 swap 02789b15-4058-485e-86a6-38522a5c00c6 [SWAP] ├─sda3 xfs 53bb89bf-50e3-4358-9f5e-e9c5ac8d535c / └─sda1 vfat F831-6C7E /boot/efi [opc@demo-linux-vm ~]$ [opc@demo-linux-vm ~]$ sudo mkdir -p /demo_mnt/demo_vol01 ## 마운트 포인트 생성 [opc@demo-linux-vm ~]$ sudo vi /etc/fstab [opc@demo-linux-vm ~]$ ## /etc/fstab에 마운트 정보 추가후 저장 [opc@demo-linux-vm ~]$ sudo mount -a ## 파일 시스템 마운트 [opc@demo-linux-vm ~]$ [opc@demo-linux-vm ~]$ ls -al /demo_mnt/demo_vol01/ ## 마운트 포인트 조회 합계 0 drwxr-xr-x. 2 root root 6 3월 8 10:16 . drwxr-xr-x. 3 root root 24 3월 8 10:18 .. [opc@demo-linux-vm ~]$ sudo chown opc:opc /demo_mnt/demo_vol01/ ## 마운트 포인트 소유권 변경 [opc@demo-linux-vm ~]$ ls -al /demo_mnt/demo_vol01/ 합계 0 drwxr-xr-x. 2 opc opc 6 3월 8 10:16 . drwxr-xr-x. 3 root root 24 3월 8 10:18 .. [opc@demo-linux-vm ~]$ [opc@demo-linux-vm ~]$ ls -al \u0026gt;\u0026gt; /demo_mnt/demo_vol01/log ## 쓰기 테스트 [opc@demo-linux-vm ~]$ cat /demo_mnt/demo_vol01/log 합계 20 drwx------. 5 opc opc 4096 3월 8 10:23 . drwxr-xr-x. 3 root root 17 3월 8 09:58 .. -rw-r--r--. 1 opc opc 18 6월 13 2019 .bash_logout -rw-r--r--. 1 opc opc 193 6월 13 2019 .bash_profile -rw-r--r--. 1 opc opc 231 6월 13 2019 .bashrc drwxrwxr-x. 3 opc opc 18 3월 8 10:09 .cache drwxrwxr-x. 3 opc opc 18 3월 8 10:09 .config drwx------. 2 opc opc 29 3월 8 09:58 .ssh -rw-------. 1 opc opc 801 3월 8 10:23 .viminfo [opc@demo-linux-vm ~]$ ls -al /demo_mnt/demo_vol01 합계 4 drwxr-xr-x. 2 opc opc 17 3월 8 10:29 . drwxr-xr-x. 3 root root 24 3월 8 10:18 .. -rw-rw-r--. 1 opc opc 475 3월 8 10:29 log [opc@demo-linux-vm ~]$ [opc@demo-linux-vm ~]$ sudo reboot ## 운영체제 재시작 Connection to 150.136.57.41 closed by remote host. Connection to 150.136.57.41 closed. =====세션 종료 $ ssh -i ./id_rsa opc@150.136.57.41 ## 재접속 Last login: Sun Mar 8 10:09:46 2020 from 175.212.219.38 [opc@demo-linux-vm ~]$ ls -al /demo_mnt/demo_vol01 ## 소유권 유지 확인 합계 4 drwxr-xr-x. 2 opc opc 17 3월 8 10:29 . drwxr-xr-x. 3 root root 24 3월 8 10:18 .. -rw-rw-r--. 1 opc opc 475 3월 8 10:29 log [opc@demo-linux-vm ~]$ cat /demo_mnt/demo_vol01/log 합계 20 drwx------. 5 opc opc 4096 3월 8 10:23 . drwxr-xr-x. 3 root root 17 3월 8 09:58 .. -rw-r--r--. 1 opc opc 18 6월 13 2019 .bash_logout -rw-r--r--. 1 opc opc 193 6월 13 2019 .bash_profile -rw-r--r--. 1 opc opc 231 6월 13 2019 .bashrc drwxrwxr-x. 3 opc opc 18 3월 8 10:09 .cache drwxrwxr-x. 3 opc opc 18 3월 8 10:09 .config drwx------. 2 opc opc 29 3월 8 09:58 .ssh -rw-------. 1 opc opc 801 3월 8 10:23 .viminfo [opc@demo-linux-vm ~]$  3. Block Volume 연결 끊기 및 제거 Blokc Volume을 제거하는 방법은 다음과 같습니다.\n unmount /etc/fstab에 설정 제거 OCI Console에서 block volume 연결 끊기 OCI Console에서 block volue 삭제  3.1 unmount 마운트 포인트를 지정하여 해당 block volume을 언마운트합니다.\numount \u0026lt;mount_point\u0026gt;  다음과 같이 해당 마운트를 해지합니다.\n3.2 /etc/fstab에 설정 제거 /etc/fstab 파일에 해당 마운트 설정을 제거합니다.\nsudo vi /etc/fstab  위 명령으로 /etc/fstab 파일을 오픈하고 block volume 설정을 제거합니다. 아래 이미지는 /etc/fstab 파일에 마운트 정보를 주석 처리한 상태입니다.\n3.3 OCI Console에서 block volume 연결 끊기 다음 메뉴 패스로 Block Volume 상세 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Block Storage  Block Volumes  (Block Volues 목록에서) demo_vol01 클릭  Attached Instance 클릭(왼쪽 메뉴) 다음 그림과 같이 Attached Instance 목록에서 현재 연결을 해제할 인스턴스의 오른쪽 메뉴를 클릭하고 Detach From Instance 메뉴를 클릭합니다.\nDetach From Instance 메뉴를 클릭하면 다음과 같은 Detach Block Volume 창이 오픈됩니다.\n이 창에서 DETACH COMMANDS 명령을 복사하여 대상 Compute 인스턴스에서 실행합니다.\n위 iscsiadm 명령을 해당 compute 인스턴스의 터미널에서 실행하면 해당 볼륨은 compute 인스턴스에서 완전히 사라집니다. 그리고 Detach Block Volume 창의 \u0026ldquo;Continue Detachment\u0026ldquo;을 클릭합니다. 그러면 Block Volume 상세 페이지에서 Attached Instance가 사라집니다.\n3.4 OCI Console에서 block volue 삭제 Block Volume 상세 페이지에서 Terminate 버튼을 클릭하면, Block Volume은 완전히 삭제됩니다. 이 볼륨의 모든 데이터는 소멸됩니다.\n4 참고 문서  [Official OCI Docs] Boot Volumes     "
},
{
	"uri": "/oci_docs/70_solutions/data_catalog/",
	"title": "OCI Data Catalog",
	"tags": [],
	"description": "OCI에서 제공하는 관리형 데이터 디스커버리 및 거버닝 서비스입니다.",
	"content": "OCI Data Catalog는 오라클 클라우드의 데이터 거버넌스(Data Govenrance) 서비스 입니다. 데이터 거버넌스(data governance)는 기업에서 사용하는 데이터의 가용성, 유용성, 통합성, 보안성을 관리하기 위한 정책과 프로세스입니다. OCI Data Catalog는 OCI에서 신뢰도 높은 데이터 자산을 관리하고 유지하는 거버넌스를 위해서 만들어진 서비스입니다.\n데이터 전문가는 OCI Data Catalog를 이용하여 비지니스 데이터, 운영 데이터, 기술 데이터의 메타 데이터를 수집하고, 구조화하고, 검색/접근 및 보강할 수 있습니다. OCI Data Catalog가 관리하는 데이터는 데이터 디스커버리, 고급 분석 및 거버넌스에 활용됩니다.\n"
},
{
	"uri": "/oci_docs/10_quickstart/how_to_sign_up_oci/",
	"title": "OCI Free Tier 계정 등록",
	"tags": [],
	"description": "",
	"content": " Oracle Cloud Free Tier는 Oracle Cloud를 무료로 경험할 수 있도록 제공하는 프로그램입니다. Oracle Cloud Free Tier 계정을 신청하면 한 달 동안 사용할 수 있는 300달러 크래딧이 지급됩니다. 이 크래딧을 이용하여 Oracle Cloud의 모든 서비스를 자유롭게 사용할 수 있습니다.\n이번 문서는 다음과 같은 목차로 구성됩니다.\n Oracle Cloud Free Tier 프로그램 구성  1. Oracle Cloud Free Trial 2. Oracle Cloud Always Free  Oracle Cloud Free Tier 계정 등록 절차 참고문서    Oracle Cloud Free Tier 계정을 신청하기 위해서는 다음과 같은 정보가 필요합니다.\n E-메일 (gmail, naver, daum 메일 가능) 전화 번호 신용 카드 번호  Oracle Cloud Free Tier 프로그램을 프로모션 사용자를 E-Mail, 전화번호, 신용 카드 번호 조합으로 사용자로 구분합니다. 계정을 등록할 때 입력한 개인 메일과 전화번호는 기존에 Oracle Cloud Free Tier(혹은 이전 Free Trial) 등록에 사용된 이력이 있는지 검증합니다. 따라서 이전에 사용 이력이 없는 메일과 전화 번호를 사용해야 합니다. 신용카드는 일정 횟수 중복 사용을 허용합니다. 그러나 가능한 기존에 사용하지 않는 새로운 카드 사용을 권장합니다. 새로 발급한 은행 직불카드(비자, 마스터)를 사용하는 것이 편리합니다.\n Oracle Cloud Free Tier 계정 등록에 사용되는 신용 카드 정보는 Oracle Cloud Free Tier 프로그램 사용 이력 파악과 일회 사용자 인증 용도로만 사용됩니다. 사용자 인증을 위하여 Oracle Cloud Free Tier 계정 등록에 사용된 카드에 1불을 결재합니다. 결재가 정상적으로 처리되면 정상적인 사용자로 분류하고, 앞서 발생한 결재를 바로 취소합니다.\nOracle Cloud Free Tier 등록에 사용된 신용 카드로 어떠한 과금도 발생하지 않습니다. Oracle Cloud Free Tier를 등록하고 Oracle Cloud Free Tier 계정에서 여러 서비스를 생성한 후, 클라우드 자원을 정지하거나 지우는 작업을 잊어버렸을 경우에 추가 비용이 발생하거나 청구되는 것을 걱정하시는 분들이 많습니다. Oracle Cloud Free Tier 계정에서는 어떠한 비용과 신용카드 청구가 발생하지 않습니다.\n Oracle Cloud Free Tier 프로그램 구성 Oracle Cloud Free Tier는 오라클 클라우드 경험 기회를 무료로 여러 사용자에게 제공하기 위한 프로그램입니다. Oracle Cloud Free Tier는 다음과 같은 2개 프로모션으로 구성됩니다.\n Oracle Cloud Free Trial Oracle Cloud Always Free  \u0026ldquo;Oracle Cloud Free Trial\u0026ldquo;은 오라클 클라우드 계정을 만들면 누구나 30일 동안 300달러에 해당하는 클라우드 자원을 자유롭게 사용할 수 있는 프로그램입니다. \u0026ldquo;Oracle Cloud Always Free\u0026ldquo;는 특정 클라우드 서비스를 기간과 비용에 제약 없이 사용할 수 있는 프로그램입니다.\n오라클은 Oracle Cloud Free Trial 프로그램을 2016년 부터 운영해 왔습니다. Oracle Cloud Free Tier는 기존 Oracle Cloud Free Trial에 Oracle Cloud Always Free를 추가한 모델입니다.\nOracle Cloud Always Free는 Oracle OpenWorld 2019에서 발표한 새로운 프로모션입니다. Oracle Cloud Free Tier 계정을 등록한 사용자는 계정을 등록한 시점 부터 Oracle Cloud Always Free 프로그램에서 지정한 자원을 영구적으로 사용할 수 있습니다.\n2019년 9월 16일부터 Oracle Cloud Free Tier 계정으로 Oracle Cloud Free Trial과 Oracle Cloud Always Free를 모두 이용할 수 있습니다.\n1. Oracle Cloud Free Trial Oracle Cloud Free Trial 프로그램은 오라클 클라우드를 30일 동안 300달러 규모로 클라우드 서비스를 사용하는 프로모션입니다. 오라클 클라우드 서비스 사용 시간 만큼 이용 금액이 차감됩니다. 일반적으로 PaaS 서비스(Autonomous Service 등) 사용 비용은 IaaS 서비스 보다 높습니다. \u0026ldquo;Oracle Cloud Free Trial\u0026rdquo; 사용 기간 동안에 모든 Oracle Cloud PaaS 서비스는 IaaS 컴퓨팅 가격으로 계산됩니다. 따라서 300달러로 상당히 많은 서비스를 이용할 수 있습니다.\n\u0026ldquo;Oracle Cloud Free Trial\u0026ldquo;이 지원하는 주요 서비스와 사용 규모는 다음과 같습니다.\n Infrasturcture  Compute: 3,500시간, 1.5TB 스토리지, VM과 베어메탈(Bare Metal) 서버 Storage: 5TB Object Storage Container: 관리형 쿠버네티스 (컴퓨트 기준 3,500시간)\u001d, 2TB 규모의 Docker Registry Function: 서버리스 서비스로 1억 1천 2백만번 실행 Load Balancer: 3500시간  Database  Autonomous Transaction Processing(ATP) Autonomous Data Warehouse(ADW) NoSQL Database: 10억번 쓰기(1.25 billion writes), 25억번 읽기(2.5 billion reads), 저장공강 100GB Oracle Database Cluod Service: 3,200 시간  Application Development  Java: 관리형 Weblogic 서비스 1,700 시간 Digital Assistant: 챗봇 서비스, 110,000 요청 처리 Mobile Hub: 110,000 요청 처리 Messaging: 8억개 메시지 처리  Analytics  Oracle Analytics: 4,700 시간   위 목록에서 제시된 시간은 각 서비스를 구성하는 전체 VM 서버 실행 시간을 합친 값입니다. 예를 들어서 관리형 Kubernetes 서비스(OKE)의 클러스터 인스턴스를 3개 VM으로 구성하고 10시간 사용하면, 이 서비스의 총 사용 시간은 30시간으로 계산됩니다.\n2. Oracle Cloud Always Free Oracle Cloud Free Tier 계정을 등록한 사용자는 Oracle Cloud Always Free 프로그램을 통해서 다음과 같은 서비스를 기간 제약없이 영구적으로 이용할 수 있습니다.\n   서비스 지원 규모 비고     Autonomous Data Warehouse(ADW) 1개 인스턴스 CPU: 1 OCPU, Storage: 20GB   Autonomous Transaction Processing(ATP) 1개 인스턴스 CPU: 1 OCPU, Storage: 20GB)   컴퓨트 2VM VM 사양: 1/8 OCPU, 1GB 메모리   블록스토리지 2개 블록 볼륨 전체 크기 100GB   오브젝트 스토리지 Standard Mode: 10GBArchive Mode: 10GB 매월 50,000 API 요청   로드 밸런서(Load Balancer) 1개 Bandwith: 10Mbps   아웃바운드 데이터 전송(Outbound Data Transfer) 매월 10TB    모니터링 서비스 매월 5억 건의 데이터 수집, 10억 건 데이터 조회    알림 서비스 매월 1백만 건 알림 서비스    메일 매월 1000개 메일     Oracle Cloud Free Tier 계정 등록 절차 Oracle Cloud Free Tier 등록 페이지는 https://oracle.com   에서 찾을 수 있습니다. 다음 이미지와 같이 oracle.com 홈페이지에서 Oracle Cloud Free Tier 메뉴로 Free Tier 메인 페이지에 이동할 수 있습니다.\nOracle Cloud Free Tier 메인 페이지에서 \u0026ldquo;Start for free\u0026rdquo; 버튼을 클릭하면 계정 등록 페이지로 이동합니다.\n현재 사용하는 브라우저로 오라클 클라우드에 처음 접속할 경우에 쿠키 정보 수집과 관련한 사용자 동의 페이지가 출력될 수 있습니다. 쿠키 정보 수집을 동의하면 계정 등록 페이지로 이동합니다.\n이제 계정 등록 절차가 시작됩니다. 계정 등록에 사용할 E-mail 주소와 현재 위치 및 사용자 정보 사용에 대한 동의를 체크하고 \u0026ldquo;Next\u0026rdquo; 버튼을 클릭하여 다음으로 이동합니다. 아래 페이지에서 사용 가능한 E-mail인지 검증이 진행됩니다.\n다음 페이지에서 사용 목적, 홈 리전 위치, 등록자 이름, 주소, 소속 국가 및 전화번호 입력이 진행됩니다. 주소를 입력할 때, 다섯 자리 우편 번호를 사용하는 신주소 체계를 사용합니다. 전화번호를 입력할 경우에 첫 번째 번호는 생략해야 합니다. 예를 들어서 010-1234-1234일 경우에 국가 코드를 제외하고 10-1234-1234로 입력해야 합니다. \u0026ldquo;Next:Verify Mobile Number\u0026rdquo; 버튼을 클릭하면 주소 및 전화번호 확인 절차로 넘어갑니다.\n앞에서 입력한 주소 확인 팝업 창이 오픈됩니다. 잘 못 입력되었으면 \u0026ldquo;Edit\u0026ldquo;으로 수정하고 맞으면 \u0026ldquo;Use Original\u0026ldquo;를 클릭합니다.\n위 이미지에서 주소를 확인하면, 앞에서 입력한 전화번호로 다음과 같은 SMS 문자가 전송됩니다. SMS 문자에는 여섯 자리 인증 코드가 포함됩니다.\nSMS 포함된 인증 코드를 다음 팝업 창에 입력하고 \u0026ldquo;Verify Code\u0026rdquo; 버튼을 클릭합니다. 인승 번호가 맞으면 패스워드 설정 페이지로 이동합니다.\n다음과 같은 규칙으로 패스워드를 입력하고 \u0026ldquo;Next: Payment Information\u0026rdquo; 버튼을 클릭하고 신용카드 등록 페이지로 이동합니다.\n다음 이미지와 같이 \u0026ldquo;Add Credit Card Details\u0026rdquo; 버튼을 클릭하면 신용 카드 상세 정보 입력 폼이 출력됩니다.\n아래 이미지와 같은 신용 카드 정보를 입력합니다. 여기서 입력한 신용카드 정보는 사용자 인증 용도로만 이용됩니다. Free Tier 사용과 관련된 어떠한 결재도 발생하지 않습니다.\n신용 카드가 등록되면 다음과 같이 1달러 결재와 1달러 취소 트랜잭션이 실행됩니다. 이 결재와 취소 과정을 통해서 신용 카드 인증이 완료됩니다. Free Tier에 등록된 신용카드 정보는 사용자를 인증한 다음에는 어떤 결제에도 이용되지 않습니다.\n신용 카드 등록이 완료한 후, 다음 그림과 같이 오라클 클라우드 사용 동의 체크 박스를 체크하고 \u0026ldquo;Complete Sign-up\u0026rdquo; 버튼을 클릭하면 모든 사용자 등록 절차는 완료됩니다.\n사용자 등록 절차가 완료되면 다음 이미지와 같이 사용자 생성 중 페이지가 출력됩니다. 이 사용자 생성 페이지는 약 1분 정도 후에 오라클 클라우드 로그인 페이지로 자동 이동됩니다.\n앞에서 입력한 로그인 E-mail과 패스워드를 입력하고 \u0026ldquo;Sign-in\u0026rdquo; 버튼을 클릭하면 Oracle Cloud에 로그인합니다.\n사용자 정보를 확인하고 로그인이 완료되면, Oracle Cloud 메인 페이지에서 Free Trial과 Always Free가 활성화된 것을 확인할 수 있습니다.\n참고문서  새로운 Oracle Cloud 프로모션: \u0008Free Tier    Oracle Offers Always Free Autonomous Database and Cloud Infrastructure    What can I try with my Oracle Cloud Free Trial credits?     "
},
{
	"uri": "/oci_docs/80_oci_tools/sdk/python_sdk/",
	"title": "OCI Python SDK",
	"tags": [],
	"description": "OCI Python SDK를 설치하고 사용하는 방법을 소개합니다. ",
	"content": "2020/ocidocs/pythonsdk/020.jpg\nOracle Cloud Infrastructure는 OCI REST API를 랩핑하는 OCI Python SDK를 제공합니다. OCI REST API를 파이썬 프로그램에서 사용할 때, OCI Python SDK를 이용하면 편의성이 향상됩니다.\n다음 문서에서 OCI Python SDK를 설치하는 벙법을 소개하고, 각 OCI 서비스 별로 Python SDK를 사용하는 예제 코드를 정리합나다.\n"
},
{
	"uri": "/oci_docs/80_oci_tools/sdk/",
	"title": "OCI SDK",
	"tags": [],
	"description": "OCI가 언어별로 제공하는 SDK를 설치하고 사용하는 방법을 소개합니다. ",
	"content": "Oracle Cloud Infrastructure(OCI)는 OCI REST API를 여러 언어로 랩핑하여 OCI SDK를 제공합니다. OCI는 2020년 1월 현재 다음과 같은 언어에 대하여 SDK를 제공합니다.\n   지원 언어 SDK 이름 설명     Python OCI Python SDK 파이썬은 현재 가장 인기있는 애플리케이션 개발언어인 동시에 시스템 관리에 사용되는 언어입니다. OCI Python SDK는 애플리케이션 개발 및 Ansible OCI 모듈 개발에 사용됩니다.   Java OCI Java SDK OCI Java SDK는 자바를 지원하는 다양한 언어에서 사용될 수 있습니다. (Scala, Kotlin, Groovy, \u0026hellip;)   Ruby OCI Ruby SDK 루비는 현재 시스템 관리 언어로 가장 광범위히게 사용되는 언어입니다. OCI Ruby SDK를 이용하여 Chef와 Puppet 플러거인이 개발되었습니다.   Go OCI Go SDK Go는 최근에 각공 받은 애플리케이션 개발 언어인 동시에 저수준 시스템 개발 언어입니다.    다음 문서에서 각 언어별로 SDK를 설치하고 활용하는 방법을 소개합니다.\n Python: OCI Python SDK Ruby: OCI Python SDK  를 파이썬 프로그램에서 사용할 때, OCI Python SDK를 이용하면 편의성이 향상됩니다.\n다음 문서에서 OCI Python SDK를 설치하는 벙법을 소개하고, 각 OCI 서비스 별로 Python SDK를 사용하는 예제 코드를 정리합나다.\n"
},
{
	"uri": "/oci_docs/98_misc_tips/how_to_collect_basic_info_of_oci/",
	"title": "OCI 기본 정보 확인법",
	"tags": [],
	"description": "",
	"content": " OCI 명령어 툴인 OCI CLI을 사용하기 위해서는 다음과 같은 설정 파일(~/.oci/config)이 필요합니다.\n 위 OCI CLI 설정에는 OCI 사용자 OCID, 테넌시 OCID 및 리전 ID가 사용되고 있습니다. 이 설정 정보는 여러 작업에서 공통적으로 사용됩니다. Oracle Cloud Infrastructure 서비스 프로비저닝, 서비스 연동 설정, OCI CLI 설정, OCI SDK 설정과 같은 여러 OCI 설정 작업을 할 때 다음과 같은 OCI 환경 정보가 자주 사용됩니다.\n OCI User 정보 (이름, OCID) OCI Tenancy (이름, OCID) OCI Region ID Compartment ID  OCI 계정을 처음 만들고 필요한 환경 정보를 OCI Console에서 확인하는 방법을 소개합니다.\n이번 문서는 다음과 같은 목차로 구성됩니다.\n OCI User의 OCID  콘솔 로그인 사용자의 OCID 특정 OCI User의 OCID 확인  OCI Tenancy의 OCID OCI Region ID Compartment OCID    OCI 콘솔이란 오라클이 운영하는 OCI 관리 웹 사이트입니다. 아래 그림은 오라클 클라우드(https://www.oracle.com)에 로그인하면 출력되는 OCI Console 메인 화면입니다.\n위 그림의 OCI Console의 메인 화면을 시작점으로해서 OCI 환경 정보를 확인하는 방법을 알아보겠습니다.\nOCI User의 OCID OCID는 OCI의 모든 자원을 유일하게 표현하는 ID체계입니다. OCI에 어떤 접속 설정을할 때 OCI User OCID를 사용합니다 OCI Uer OCID를 확인하는 방법은 두 가지입니다.\n 현재 OCI 콘솔에 로그인한 사용자의 OCID 확인 특정 OCI User의 OCID 확인  두 가지 상황에서 OCI User OCID를 확인하는 방법을 소개합니다.\n콘솔 로그인 사용자의 OCID OCI Console 메인 페이지에서 왼쪽 위에 위치하는 사용자 아이콘을 클릭하면, 현재 로그인 사용자의 몇 가지 프로파일 정보가 출력됩니다. 프로파일 아래 첫 번째 줄에 출력되는 것이 현재 로그인 사용자의 OCI User 명입니다. OCI User 명은 oracleidentitycloudservice/\u0026lt;로그인 email\u0026gt;의 형식을 갖습니다.\n프로파일의 OCI User 명을 클릭하면, 아래 그림과 같이 OCI User 상세 페이지로 이동합니다. OCI User 상세 페이지에서는 OCI User와 관련된 다양한 정보를 제공합니다. 이 중에서 OCID 항목이 가장 출력되고, show, hide, copy 링크가 있습니다. 이 링크를 클릭하여 OCID를 화면에 출력하거나 감추거나 클립보드에 복사할 수 있습니다.\nOCI User OCID를 정보를 확보하기 위해서 copy링크를 클릭하여 별도로 보관합니다. OCI User OCID는 다음과 같은 형식을 갖습니다.\nocid1.user.oc1..aaaaaaaafordemop4tprzfordemoyg3zebqgqgpfordemopyzcluzi2yndna  특정 OCI User의 OCID 확인 현재 로그인한 OCI User가 사용자 관리 권한이 있다면 OCI User 관리 페이지에 접근할 수 있습니다. OCI User 관리 페이지에서 특정 OCI User를 찾고 해당 OCID를 확인할 수 있습니다. 다음 그림곽 같이 OCI Console 메인 페이지의 오른쪽 위에 햄버그 버튼의 메뉴를 이용하여 OCI User 관리 페이지로 이동할 수 있습니다. 메뉴 패스는 다음과 같습니다.\nOCI Console 햄버그 버튼 --\u0026gt; Identity --\u0026gt; Users  위 메뉴 패스를 통해서 다름 그림과 같은 OCI User 관리 페이지에 접근할 수 있습니다. OCI User 관리 페이지에서 OCI User를 생성하고 관리할 수 있습니다.\nOCI User 관리 페이지에서 특정 OCI User를 찾고 OCI User 명을 클릭하면 다음 그림과 같은 상세 페이지로 이동합니다. 상세 페이지에서 해당 OCI User의 OCID를 확인할 수 있습니다.\nOCI Tenancy의 OCID OCI Tenancy는 Oracle Cloud Infrastructure 계정을 만들 때, 만들어지는 OCI 계정의 최상위 단위입니다. OCI 리소스 생성, 구성, 관리 및 사용 비용의 단위입니다. Tenancy 별로 모든 자원은 완전하게 격리됩니다. 한 회사는 여러개의 Tenancy를 갖을 수 있지만, 이 경우 다른 Tenancy에 소속된 자원은 완전하게 격리됩니다. Tenancy 이름은 OCI 계정을 등록할 때 입력한 Cloud Account Name입니다. 아래 그림으로 OCI 계정을 만들면 Tenancy 명이 apacsct01이 됩니다.\nTenancy 상세 페이지로 이동하는 방법은 두 가지 입니다.\n Type1: OCI Console 사용자 아이콘이 제공하는 사용자 프로파일, Tenancy 메뉴 클릭 Type2: 다른 하나는 OCI Console의 햄버그 아이콘으로 시작하는 메뉴 패스  OCI Console 햄버그 버튼  Administration  Tenancy Details   다음 그림은 위 두 가지 접근법의 스크린 샷입니다.\n두 가지 접근 경로를 통해서 다음과 같은 Tenancy 상세 페이지로 이동할 수 있습니다. Tenancy 상세 페이지에서 Tenency OCID를 확인할 수 있습니다.\nTenency OCID는 다음과 같은 형태를 갖습니다.\nocid1.tenancy.oc1..aaaaaaaa6mafordemof76uzqidv22cfordemosgpqmmsgxihlbcfordemoqa  OCI Region ID OCI(Oracle Cloud Infrastructure)에서 Region은 물리적인 데이터 센터가 위치하는 지역을 나타냅니다. 사용자가 어떤 지역의 데이터 센터를 사용할지 지정할 때 OCI Region ID를 사용합니다. OCI Region 괸리 페이지로 이동하는 방법은 두 가지 입니다.\n Type1: OCI Console의 왼쪽 위에 표시된 Region으로 시작하는 메뉴 패스로 이동  Region 명  Manage Region  Type2: 다른 하나는 OCI Console의 햄버그 아이콘으로 시작하는 메뉴 패스  OCI Console 햄버그 버튼  Administration  Region Management   다음 그림은 위 두 가지 접근법의 스크린 샷입니다.\n두 가지 접근 경로를 통해서 다음과 같은 Region 관리 페이지로 이동할 수 있습니다. Region 관리 페이지에서 Region ID를 확인할 수 있습니다.\n서울 리전을 사용할 경우 Region ID는 다음과 같습니다.\nap-seoul-1  Compartment OCID OCI에서 Compartment는 OCI 자원을 관리하는 논리적 개념입니다. OCI에서 자원을 생성할 때 Compartment를 지정합니다. Compartment는 폴더 구조로 만들집니다. 따라서 재귀적인 형태로 구성됩니다. OCI 계정이 만들어 지면 Tenancy에 Root Compartment 하나가 생성됩니다. OCI 계정 관리자는 Root Compartment 아래에 새로운 Compartment를 만들 수 있습니다. OCI에서 모든 자원을 생성할 때, 해당 자원이 어떤 Compartment에 포함되는지 지정해야 합니다. 이때 Compartment OCID가 사용됩니다.\nOCI Compartment는 한글로 \u0026ldquo;구획\u0026ldquo;이라고 번역됩니다.\n Compartment OCID를 확인하기 위해서는 Compartment 관리 페이지로 이동해야 합니다. Compartment 관리 페이지는 OCI Console의 햄버그 아이콘으로 시작하는 메뉴패스로 이동할 수 있습니다.\n 이동 패스: OCI Console 햄버그 버튼  Identity  Compartments  Compartment 관리 페이지로 이동하면 Root Compartment 목록이 출력됩니다. Compartment 링크를 클릭하여 사용할 Compartment로 이동하면, 다음 그림과 같은 Compartment 상세 페이지가 출력됩니다.\n위 그림에서 사용할 Compartment OCID 확인할 수 있습니다. 위 그림에서 ET_TEAM Compartment의 OCID는 다음과 같습니다.\nocid1.compartment.oc1..aaaaaaaavgdtzsakzxht2y7iqnfra25boavdc7jrq34i42guio3sa7kaviqq  "
},
{
	"uri": "/oci_docs/20_identity_and_access_management/",
	"title": "OCI 사용자 및 권한 관리",
	"tags": [],
	"description": "",
	"content": "Oracle Cloud의 계정 최고 단위는 Tenancy입니다. Tenancy는 Oracle Cloud의 계약 단위입니다. Oracle Cloud를 계약하는 주체예 따라서 Tenancy는 회사가 되기도하고, 큰 회사의 부서가 되기도합니다. Tenancy는 Oracle Cloud의 계약 단위이자 자원이 공유되는 최상위입니다.\n두 개의 Tenancy가 서로 시스템을 연결하는 방법은 외부 네트워크를 통합 연결 뿐입니다. Oracle Cloud가 지원하는 통합의 최고 단위가 Tenancy이기 때문에\nOracle Cloud의 IAM(Identity and Access Managment)를 살펴보고, OCI 사용자 관리를 중심으로 다음과 같은 사용자 관리 주제를 정리합니다.\n OCI 사용자 관리 체계: IAM \u0026amp; IDCS 어떤 계정 관리 체계를 사용할 것인가? IAM 구성 컴포넌트  User Group Compartment Policy  IAM  "
},
{
	"uri": "/oci_docs/99_oci_sites/tutorials/",
	"title": "OCI 서비스 튜토리얼 사이트 모음",
	"tags": [],
	"description": "",
	"content": " OCI Service 튜토리얼 사이트 OCI Core  https://oracle.github.io/learning-library/oci-library/  OCI Function  OCI Function 퀵스타트: Oracle Functions: https://www.oracle.com/webfolder/technetwork/tutorials/infographics/oci_faas_gettingstarted_quickview/functions_quickview_top/functions_quickview/index.html\n fn 프로젝트 튜터리얼: https://fnproject.io/tutorials/\n OCI Function 튜터리얼: https://oci-tutorials.github.io/\n  "
},
{
	"uri": "/oci_docs/80_oci_tools/oci_cli/installation_on_linux_and_mac/",
	"title": "[OCI CLI 설치] Linux &amp; Mac OS",
	"tags": [],
	"description": "",
	"content": " 이 문서는 리눅스 계열 OS와 Mac OS에서 OCI CLI를 설치하고 제거하는 과정을 소개합니다. 다음과 같은 목차로 구성됩니다.\n OCI CLI 설치 OCI CLI 제거    OCI CLI 설치 OCI CLI 프로젝트에서는 리눅스 계열 OS와 Mac OS를 위한 쉡 스크립트를 제공합니다. 터미널상에서 다음 스크립트를 실행하여 간편하게 OCI CLI를 설치할 수 있습니다.\nbash -c \\ \u0026gt; \u0026quot;$(curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh)\u0026quot;  위 스크립트를 실행하면 다음과 같은 항목에 대한 입력이 요청됩니다. 모든 항목에 대하여 기본 값을 선택할 것을 추천합니다.\n   입력 요청 질의 설명 입력값     ===\u0026gt; In what directory would you like to place the install? (leave blank to use \u0026lsquo;/home/opc/lib/oracle-cli\u0026rsquo;): OCI CLI 설치 위치 기본 값 사용(Enter)   ===\u0026gt; In what directory would you like to place the \u0026lsquo;oci\u0026rsquo; executable? (leave blank to use \u0026lsquo;/home/opc/bin\u0026rsquo;): OCI CLI 실행 파일 설치 위치 기본 값 사용(Enter)   ===\u0026gt; In what directory would you like to place the OCI scripts? (leave blank to use \u0026lsquo;/home/opc/bin/oci-cli-scripts\u0026rsquo;): OCI CLI 스크립트 파일 설치 위치 기본 값 사용(Enter)   ===\u0026gt; Currently supported optional packages are: [\u0026lsquo;db (will install cx_Oracle)\u0026lsquo;] What optional CLI packages would you like to be installed (comma separated names; press enter if you don\u0026rsquo;t need any optional packages)?: 추가패키지 설치 기본 값 사용(Enter)   ===\u0026gt; Modify profile to update your $PATH and enable shell/tab completion now? (Y/n): 환경변수 수정 기본 값 사용(Enter)   ===\u0026gt; Enter a path to an rc file to update (leave blank to use \u0026lsquo;/home/opc/.bashrc\u0026rsquo;): 패스 업데이트 기본 값 사용(Enter)    전체 설치 로그는 다음과 같습니다.\n[opc@demo02 ~]$ bash -c \\ \u0026gt; \u0026quot;$(curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh)\u0026quot; % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 13979 100 13979 0 0 55147 0 --:--:-- --:--:-- --:--:-- 55472 ****************************************************************************** You have started the OCI CLI Installer in interactive mode. If you do not wish to run this in interactive mode, please include the --accept-all-defaults option. If you have the script locally and would like to know more about input options for this script, then you can run: ./install.sh -h If you would like to know more about input options for this script, refer to: https://github.com/oracle/oci-cli/blob/master/scripts/install/README.rst ****************************************************************************** Downloading Oracle Cloud Infrastructure CLI install script from https://raw.githubusercontent.com/oracle/oci-cli/v2.9.3/scripts/install/install.py to /tmp/oci_cli_install_tmp_2Rob. ######################################################################## 100.0% Python3 not found on system PATH Running install script. python /tmp/oci_cli_install_tmp_2Rob -- Verifying Python version. -- Python version 2.7.5 okay. ===\u0026gt; In what directory would you like to place the install? (leave blank to use '/home/opc/lib/oracle-cli'): -- Creating directory '/home/opc/lib/oracle-cli'. -- We will install at '/home/opc/lib/oracle-cli'. ===\u0026gt; In what directory would you like to place the 'oci' executable? (leave blank to use '/home/opc/bin'): -- Creating directory '/home/opc/bin'. -- The executable will be in '/home/opc/bin'. ===\u0026gt; In what directory would you like to place the OCI scripts? (leave blank to use '/home/opc/bin/oci-cli-scripts'): -- Creating directory '/home/opc/bin/oci-cli-scripts'. -- The scripts will be in '/home/opc/bin/oci-cli-scripts'. ===\u0026gt; Currently supported optional packages are: ['db (will install cx_Oracle)'] What optional CLI packages would you like to be installed (comma separated names; press enter if you don't need any optional packages)?: -- The optional packages installed will be ''. -- Trying to use python3 venv. -- Executing: ['/usr/bin/python', '-m', 'venv', '/home/opc/lib/oracle-cli'] /usr/bin/python: No module named venv -- System was unable to use venv, is going to download and create virtualenv. -- Downloading virtualenv package from https://github.com/pypa/virtualenv/archive/15.0.0.tar.gz. -- Downloaded virtualenv package to /tmp/tmpZCpUza/15.0.0.tar.gz. -- Checksum of /tmp/tmpZCpUza/15.0.0.tar.gz OK. -- Extracting '/tmp/tmpZCpUza/15.0.0.tar.gz' to '/tmp/tmpZCpUza'. -- Executing: ['/usr/bin/python', 'virtualenv.py', '--python', '/usr/bin/python', '/home/opc/lib/oracle-cli'] Already using interpreter /usr/bin/python New python executable in /home/opc/lib/oracle-cli/bin/python Installing setuptools, pip, wheel...done. -- Executing: ['/home/opc/lib/oracle-cli/bin/pip', 'install', '--cache-dir', '/tmp/tmpZCpUza', 'oci_cli', '--upgrade'] DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support Collecting oci_cli Downloading oci_cli-2.9.3-py2.py3-none-any.whl (7.4 MB) |████████████████████████████████| 7.4 MB 31.0 MB/s Collecting cryptography==2.8 Downloading cryptography-2.8-cp27-cp27mu-manylinux2010_x86_64.whl (2.3 MB) |████████████████████████████████| 2.3 MB 33.0 MB/s Collecting certifi Downloading certifi-2019.11.28-py2.py3-none-any.whl (156 kB) |████████████████████████████████| 156 kB 40.2 MB/s Collecting pyOpenSSL==18.0.0 Downloading pyOpenSSL-18.0.0-py2.py3-none-any.whl (53 kB) |████████████████████████████████| 53 kB 2.6 MB/s Collecting arrow==0.10.0 Downloading arrow-0.10.0.tar.gz (86 kB) |████████████████████████████████| 86 kB 7.7 MB/s Collecting retrying==1.3.3 Downloading retrying-1.3.3.tar.gz (10 kB) Collecting oci==2.10.5 Downloading oci-2.10.5-py2.py3-none-any.whl (3.5 MB) |████████████████████████████████| 3.5 MB 38.5 MB/s Collecting pytz==2016.10 Downloading pytz-2016.10-py2.py3-none-any.whl (483 kB) |████████████████████████████████| 483 kB 35.1 MB/s Collecting idna\u0026lt;2.7,\u0026gt;=2.5 Downloading idna-2.6-py2.py3-none-any.whl (56 kB) |████████████████████████████████| 56 kB 6.5 MB/s Collecting PyYAML==5.1.2 Downloading PyYAML-5.1.2.tar.gz (265 kB) |████████████████████████████████| 265 kB 35.2 MB/s Collecting terminaltables==3.1.0 Downloading terminaltables-3.1.0.tar.gz (12 kB) Collecting six==1.11.0 Downloading six-1.11.0-py2.py3-none-any.whl (10 kB) Collecting python-dateutil==2.7.3 Downloading python_dateutil-2.7.3-py2.py3-none-any.whl (211 kB) |████████████████████████████████| 211 kB 35.6 MB/s Collecting configparser==3.5.0 Downloading configparser-3.5.0.tar.gz (39 kB) Collecting jmespath==0.9.3 Downloading jmespath-0.9.3-py2.py3-none-any.whl (23 kB) Collecting click==6.7 Downloading click-6.7-py2.py3-none-any.whl (71 kB) |████████████████████████████████| 71 kB 9.0 MB/s Collecting cffi!=1.11.3,\u0026gt;=1.8 Downloading cffi-1.14.0-cp27-cp27mu-manylinux1_x86_64.whl (387 kB) |████████████████████████████████| 387 kB 33.3 MB/s Collecting ipaddress; python_version \u0026lt; \u0026quot;3\u0026quot; Downloading ipaddress-1.0.23-py2.py3-none-any.whl (18 kB) Collecting enum34; python_version \u0026lt; \u0026quot;3\u0026quot; Downloading enum34-1.1.6-py2-none-any.whl (12 kB) Collecting pycparser Downloading pycparser-2.19.tar.gz (158 kB) |████████████████████████████████| 158 kB 43.3 MB/s Building wheels for collected packages: arrow, retrying, PyYAML, terminaltables, configparser, pycparser Building wheel for arrow (setup.py) ... done Created wheel for arrow: filename=arrow-0.10.0-py2.py3-none-any.whl size=32852 sha256=588fb64659d6e482ab77ff9923c1a3b0df991546b38f6c8a2fa35d312d149d08 Stored in directory: /tmp/tmpZCpUza/wheels/e9/2b/c1/e12eca55f056e9a41ed1d83bc42996bb12283c7509d5d690c6 Building wheel for retrying (setup.py) ... done Created wheel for retrying: filename=retrying-1.3.3-py2-none-any.whl size=11430 sha256=41590ed3406a3bb96547a454c2dcdef5c7317a5a563f35b52d57f46ac1347ba0 Stored in directory: /tmp/tmpZCpUza/wheels/fa/24/c3/9912f4c9363033bbd0eafbec1b27c65b04d7ea6acd312876b0 Building wheel for PyYAML (setup.py) ... done Created wheel for PyYAML: filename=PyYAML-5.1.2-cp27-cp27mu-linux_x86_64.whl size=44911 sha256=008463f3440ed923750648617d3f55c8be612daef2ddcb8fa25f5a692d2c2f33 Stored in directory: /tmp/tmpZCpUza/wheels/87/9b/a7/9bfdaa1487acce958269a6b5f86db2e4d38204dff4e256e23a Building wheel for terminaltables (setup.py) ... done Created wheel for terminaltables: filename=terminaltables-3.1.0-py2-none-any.whl size=15354 sha256=8ccf0b3bc5630e3a28f8f2b0712cb4b0068d7a782cc06562dcd32d69d824f65d Stored in directory: /tmp/tmpZCpUza/wheels/f0/11/d1/8902b10e29e3ce2c8965a86533b76894c844565e02d5341520 Building wheel for configparser (setup.py) ... done Created wheel for configparser: filename=configparser-3.5.0-py2-none-any.whl size=21661 sha256=1e85a455796d38a0e4119626b41a5c1c0527d1de6f04952c4d60e02d2edfcc69 Stored in directory: /tmp/tmpZCpUza/wheels/fe/e1/b2/ffea2d060a50955b9228e7a1dc7b1fc7a5013dc506da8c5272 Building wheel for pycparser (setup.py) ... done Created wheel for pycparser: filename=pycparser-2.19-py2.py3-none-any.whl size=111028 sha256=ef0b916e255c13a6b24f2f827db4c01d8602e5a11c0505ba2ad977b5468ed606 Stored in directory: /tmp/tmpZCpUza/wheels/f1/ed/ed/1cba03d3b567c6fabb01ea0e572dffecf350b7da49612d05b0 Successfully built arrow retrying PyYAML terminaltables configparser pycparser Installing collected packages: six, pycparser, cffi, ipaddress, enum34, cryptography, certifi, pyOpenSSL, python-dateutil, arrow, retrying, pytz, configparser, oci, idna, PyYAML, terminaltables, jmespath, click, oci-cli Successfully installed PyYAML-5.1.2 arrow-0.10.0 certifi-2019.11.28 cffi-1.14.0 click-6.7 configparser-3.5.0 cryptography-2.8 enum34-1.1.6 idna-2.6 ipaddress-1.0.23 jmespath-0.9.3 oci-2.10.5 oci-cli-2.9.3 pyOpenSSL-18.0.0 pycparser-2.19 python-dateutil-2.7.3 pytz-2016.10 retrying-1.3.3 six-1.11.0 terminaltables-3.1.0 ===\u0026gt; Modify profile to update your $PATH and enable shell/tab completion now? (Y/n): Y ===\u0026gt; Enter a path to an rc file to update (leave blank to use '/home/opc/.bashrc'): -- Backed up '/home/opc/.bashrc' to '/home/opc/.bashrc.backup' -- Tab completion set up complete. -- If tab completion is not activated, verify that '/home/opc/.bashrc' is sourced by your shell. -- -- ** Run `exec -l $SHELL` to restart your shell. ** -- -- Installation successful. -- Run the CLI with /home/opc/bin/oci --help [opc@demo02 ~]$  설치 상태를 oci -v명령으로 확인할 수 있습니다. 이 명령이 실행되면 설치된 OCI CLI 버전이 출력됩니다.\n[opc@demo02 ~]$ oci -v 2.9.3 [opc@demo02 ~]$  OCI CLI 제거 OCI CLI가 설치된 상태에서 다음 디렉터리를 삭제하면 OCI CLI는 제거됩니다.\n   디렉터리 유형 기본 설정 값(기본 디렉터리)     OCI CLI 라이브러리 설치 위치 ~/lib/oracle-cli   OCI CLI 실행 파일 설치 위치 ~/bin    OCI CLI 라이브러리 설치 디렉터리와 실행 파일 설치 위치를 모두 삭제합니다. 기본 설정 값으로 설치했다면 다음 명령으로 OCI CLI를 제거할 수 있습니다.\nrm -rf $HOME/lib rm -rf $HOME/bin  "
},
{
	"uri": "/oci_docs/99_oci_sites/useful_sites_for_oci/oci_status/",
	"title": "ocistatus.oraclecloud.com",
	"tags": [],
	"description": "",
	"content": "\u0026lsquo;Oracle Cloud Infrastructure\u0026#39;s Status   \u0026rsquo;는 Oracle Cloud의 각 리전에서 운영하는 세부 서비스의 현재 운영 상태와 과거 장애 이력 정보를 제공하는 사이트입니다.\n다음 그림과 같이 각 리전 세부 서비스의 현재 상태 정보를 4개 분류(Normal Performance, Degraded Performance, Partial Outage, Major Outage)로 제공합니다.\n\u0026lsquo;Oracle Cloud Infrastructure\u0026#39;s Status   \u0026rsquo; 페이지를 이용하여 다음과 같은 정보를 확인할 수 있습니다.\n OCI 전체 리전 목록 각 리전에서 운영 중인 OCI 세부 서비스 세부 서비스 현재 운영 상태  또한 이 페이지는 과거 OCI 장애 이력 정보를 제공하는 \u0026lsquo;Incident History   \u0026rsquo;페이지 링크를 제공합니다.\n여기에서 제공하는 OCI 장애 기록을 클릭하면, 각 OCI 장애에 대한 상제 정보 페이지가 오픈됩니다. 이 페이지에서 장애 발생 시간, 처리 완료 시간, 장애 유형과 원인, 사용자 영향도와 같은 상세 정보를 확인할 수 있습니다.\n"
},
{
	"uri": "/oci_docs/10_quickstart/vcn/manual_vcn/",
	"title": "메뉴얼 VCN 만들기",
	"tags": [],
	"description": "",
	"content": "문서 준비중입니다.\n"
},
{
	"uri": "/oci_docs/70_solutions/data_catalog/glossary/",
	"title": "용어정리",
	"tags": [],
	"description": "",
	"content": " Data Catalog는 데이터 거버넌스(Data Governance)를 지원하는 서비스입니다. 따라서 데이터 거버넌스 분야에 사용되는 용어가 다수 사용됩니다. 이 문서에서는 다음과 같은 데이터 거버넌스(Data Governance)와 Data Catalog 서비스에서 사용되는 용어를 먼저 정리힙니다.\n Data Governance Data Havest(Data Havesting) Data Steward Technical Metadata     Data Governance 용어 참조  http://www.datagovernance.com/glossary-governance/   Data Governance Data Governance란 기업에서 가치 있는 양질의 데이터를 지속적으로 발굴하고 관리하여 비즈니스 자산으로 활용하기 위한 데이터 통합 관리 체계다.\n 동의어: 데이터 거버넌스, 데이터 통합 관리  데이터가 다양한 저장소 분산고 데이터 양이 급증하면 다음과 같은 상황이 발생할 수데이터가 통합되기 어렵되고 결과적으로 사용빈도가 없는 다크 데이터가 증가하게 된다. 데이터 통합 및 관리 부족으로 발생할 수있는 의도하지 않는 정보 노출과 관리 비용을 줄이고, 고품질의 데이터를 발굴하여 데이터를 높이는 지속적인 프로세스를 데이터를 Data Governance리고 한다.\n 출처: http://terms.tta.or.kr/dictionary/dictionaryView.do?word_seq=137417-6  Data Havest(Data Havesting)  유사 용어: Information Havesting  data harvesting in the online world refers to gathering user information (by way of email addresses, IM handles, social media sites, surfing behaviors, online ads clicked on, etc.) from the Internet. Data harvesting is the leading method spammers use to acquire new addresses.\nHistorical perspective: In March, 2018 The New York Times reported that 50 million Facebook users had their profile information harvested by a Trump-connected data analytics firm Cambridge Analytica via a personality app on the site, later prompting a #DeleteFacebook movement.\nTo see what’s connected to your Facebook account, login to Facebook and go to your Settings. From there, check the Active tab under the Apps and Websites. The panel will show you all the apps that have access to your Facebook account.\nTo see what’s connected to your Google account, go to myaccount.google.com and from there, go to Apps with account access under the Sign-in \u0026amp; security. The next page will show you all the apps that have access to your Google account as well as all the sites you have saved passwords for using Google Smart Lock.\n 출처  https://www.netlingo.com/word/harvest-or-harvesting.php https://hirinfotech.com/data-mining-vs-data-harvesting/   Data Steward  동의어: 데이터 관리자  데이터 거버넌스 또는 데이터 책임 프로그램에 의해 설정된 데이터 관련 책임을 갖는 사람을 의미한다. Data Steward의 역할에 따라 다음과 같이 여러가지 유형으로 구분할 수있다.\n Data Quality Steward(데이터 품질 관리자) Data Definition Steward(데이터 정의 관리자) Data Usage Steward(데이터 사용 관리자)\n 참고: http://www.ciokorea.com/news/26284\n  Technical Metadata \u0026ldquo;Technical metadata\u0026ldquo;는 데이터 변환 룰, 데이터 스토리지 구조(Data Storage Structure), 시멘틱 레이어와 인터페이스 레이어에 대한 메타 정보를 의미한다.\n 출처: https://www.sciencedirect.com/topics/computer-science/technical-metadata  "
},
{
	"uri": "/oci_docs/60.data_and_ai_service/data_flow/",
	"title": "Data Flow",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)의 Serverless Spark 서비스인  Data Flow를 소개합니다.",
	"content": " OCI Data Flow 서비스를 다음과 같은 목차로 소개합니다.\n OCI Data Flow 란?  OCI Data Flow 주요 특징  특징1: 인프라 관리 부담 최소화 특징2: JOB 수행 결과 데이터 관리 자동화 특징3: 통합된 Spark Job 정보 제공 특징4: OCI 보안과 통합된 안전성 특징5: 편리한 디버깅과 진단(Diagnostics)  OCI Data Flow 관련 사이트   \n OCI Data Flow 란? OCI((OCI Cloud Infrastructure) Data Flow는 오라클 클라우드에서 제공하는 서비스로 다음과 같은 키워드로 요약할 수 있습니다.\n 대규모 데이터 병렬처리를 위한 서비스 아파치 스파크(Apache Spark) 서비스 서비리스 서비스 완전 관리형 서비스  OCI Data Flow는 Object Storage에 저장된 대규모 데이터 병렬처리 기술을 제공하는 서비스입니다. Data Flow는 아파치 스파크 기술을 기반으로 합니다. Data Flow를 이용하면 원하는 규모의 스파크 클러스터를 즉시 구성할 수 있습니다. OCI Data Flow 사용자가 Spark 프로그램을 제출하면 Data Flow는 사용자가 지정한 규모의 Spark 클러스터를 생성한 다음에 Spark Job을 완료하면 사용한 모든 spark 클러스터를 제거하는 방식으로 운영되는 서비리스 서비스입니다. 그리고 OCI Data Flow의 모든 관리 영역은 OCI가 전담하는 완전 관리형 서비스입니다.\nOCI Data Flow 주요 특징 OCI Data Flow의 특징을 5가지로 요약할 수 있습니다.\n 인프라 관리 부담 최소화 JOB 수행 결과 데이터 관리 자동화 통합 관리 정보 제공 OCI 보안과 통합된 안전성 편리한 디버깅과 진단(Diagnostics)  특징1: 인프라 관리 부담 최소화 Data Flow 사용자가 Spark 애플리케이션을 Data Flow에 서비스에 등록하고 Job을 실행하면 필요한 인프라를 만들고, Job을 완료하면 인프라를 제거하는 서비리스 서비스입니다. Job을 완료하고 인프라를 제거하기 전에 Job 실행으로 발생한 모든 데이터와 로그를 별도 저장하여 통합관리합니다.\nData Flow 사용자는 인프라와 Spark 클러스터의 설치, 패치, 업그레이드 관리 부담을 느낄 필요가 없습니다. Data Flow 서비스가 인프라 프로비저닝, 네트워크 구성, 스토리지 관리 및 보안 설정을 모두 전담하고합니다. 또한 실행 데이터 관리와 사용을 마친 자원 제거까지 모든 인프라 관리 작업을 담당합니다.\nData Flow 사용자는 인프라 운영에서 자유로울 수 있고 대규모 데이터 처리 Spark Application 개발에 집중할 수 있습니다.\n특징2: JOB 수행 결과 데이터 관리 자동화 Data Flow가 실행한 모든 Job 데이터는 OCI Object Storage의 dataflow-log 버킷에 저장됩니다. 이 데이터는 Data Flow Run 상세 페이지에서 직접 조회할 수 있습니다.\n특징3: 통합된 Spark Job 정보 제공 Data Flow는 Spark Job을 등록하고 실행한 모든 내역을 단일 UI로 효과적으로 제공합니다. Job을 수행하면서 생성된 모든 실행 로그, 출력 결과, 에러 로그, Spark 작업 프로파일 정보를 웹 UI로 제공하는 기능을 제공합니다.\n다음과 같이 Data Flow는 수행한 모든 Spark Job 정보를 안전하게 관리할 수 있고, 사용자가 활용하기 편리한 인터페이스(Web UI, API, CLI)를 제공합니다.\n특징4: OCI 보안과 통합된 안전성 Data Flow는 OCI 보안 체계와 IAM( Identity and Access Management) 서비스와 완전 통합되어 있습니다. Object Storage 및 Data Flow에 대한 세밀한 권한 설정이 가능합니다.\n사용자 그룹별로 Job 등록, Job 수행, Job 결과 조회, Job 수행 로그 및 데이터 조회 등을 개별적으로 설정하여 데이터 안전성을 높이고 지정된 사용자에게만 자원을 공유하는 구성을 지원합니다.\nALLOW GROUP dataflow-admin TO READ buckets IN  ALLOW GROUP dataflow-admin TO MANAGE dataflow-family IN  ALLOW GROUP dataflow-users TO READ buckets IN  ALLOW GROUP dataflow-users TO USE dataflow-family IN  ALLOW GROUP dataflow-users TO MANAGE dataflow-family IN  ALLOW GROUP dataflow-users TO MANAGE objects IN  ALLOW GROUP  TO USE dataflow-applications in compartment ALLOW GROUP  TO MANAGE dataflow-runs in in compartment ALLOW GROUP  TO MANAGE dataflow-runs in  where target.user.id = request.user.id ALLOW GROUP dataflow-admin TO READ buckets IN   특징5: 편리한 디버깅과 진단(Diagnostics) Data Flow의 모든 Run 상세 페이지는 실행한 Spark 프로세스 상세 정보를 제공하는 Spark UI를 제공합니다. 이 Spark UI와 실행 로그를 이용하여 Spark 애플리케이션을 디버깅하고 상태를 진단할 수 있습니다.\n각 Run의 Spark UI는 영구적으로 제공됩니다.\nOCI Data Flow 관련 사이트  https://www.oracle.com/big-data/data-flow/    https://docs.cloud.oracle.com/en-us/iaas/data-flow/using/dfs_data_flow.htm    https://docs.cloud.oracle.com/en-us/iaas/data-flow/data-flow-tutorial/tutorial/dfs_tut_front.htm     Data Flow와 관련하여 다음과 같은 문서를 정리합니다.\n  "
},
{
	"uri": "/oci_docs/98_misc_tips/tools/management_of_java_tools_with_sdkman/",
	"title": "sdkman 자바 개발환경 관리툴",
	"tags": [],
	"description": "sdk를 이용하여 Java 개발 환경을 관리하는 방법을 소개합니다.",
	"content": " SDKMAN!은 자바 관련 개발 환경을 관리하는 툴입니다. SDkMAN!을 사용하면 자바 관련 여러 개발 툴 설치, 버전관리 및 업그레이드가 매우 편리합니다. SDKMAN은 Java를 비롯한 자바 툴(Maven, Ant, sbt, Spark, Spring Boot) 총 28개를 지원합니다. (2020.03.23일 기준)\nSDKMAN! 설치, 설정 및 활용을 다루는 이 문서는 다음과 같은 목차로 진행됩니다.\n SDKMAN! 설치  SDkMAN! 설치 환경 준비 SDkMAN! 설치 설치된 SDkMAN! 제거  SDKMAN!을 활용한 개발툴 관리  Java 설치 및 버전 관리  지원 Java 목록 조회 OpenJDK 14 버전 설치 OpenJDK 11 버전 설치 Java 14 버전 활성화 Java 14 버전 업데이트 Java 11 버전 제거  Maven 설치 SBT 설치   \n SDKMAN! 설치 SDkMAN! 설치 환경 준비 SDkMAN!은 기반 시스템으로 유닉스 스타일을 사용합니다. 따라서 SDkMAN!을 설치하고 운영하기 위해서는 유닉스 기반 환경이 필요합니다. 리눅스와 Mac OS X는 SDkMAN! 설치/사용을 위해서 별도 분비가 필요 없습니다. Windows 환경에서는 유닉스 스타일 기반 시스템을 준비해야 합니다. Windows 10 이상을 사용하신다면 Windows SubSystem으로 리눅스를 구성하는 방법을 추천합니다. Window 7 등을 사용하신다면 Cgywin과 윈도우를 위한 POSIX 소프트웨어를 설치해야 합니다.\nWindows 10에서 Windows SubSystem을 새로 구성해야 한다면 다음 문서를 참조하여 준비하시기 바랍니다.\n 리눅스 Windows Subsystem 설치     SDkMAN! 설치 SDkMAN!을 설치하고자 한다면 사용하는 운영체제의 터미널에서 다음 명령을 실행합니다.\ncurl -s \u0026quot;https://get.sdkman.io\u0026quot; | bash  아래 [접기/펼치기]를 클릭하면 SDkMAN! 설치 명령 전체 출력 로그를 확인할 수 있습니다.\n  [접기/펼치기] SDkMAN! 설치 명령 전체 출력 로그   $ curl -s \"https://get.sdkman.io\" | bash -+syyyyyyys: `/yho:` -yd. `/yh/` +m. .oho. hy .` .sh/` :N` `-/o` `+dyyo:. .yh:` `M- `-/osysoym :hs` `-+sys: hhyssssssssy+ .sh:` `N: ms/-`` yy.yh- -hy. `.N-````````+N. `od/` `N- -/oM- ddd+` `sd: hNNm -N: :do` .M. dMMM- `ms. /d+` `NMMs `do .yy- :N` ```mMMM. - -hy. /MMM: yh `+d+` `:/oo/` `-/osyh/ossssssdNMM` .sh: yMMN` /m. -dh- :ymNMMMMy `-/shmNm-`:N/-.`` `.sN /N- `NMMy .m/ `oNs` -hysosmMMMMydmNmds+-.:ohm : sd` :MMM/ yy .hN+ /d: -MMMmhs/-.` .MMMh .ss+- `yy` sMMN` :N. :mN/ `N/ `o/-` :MMMo +MMMN- .` `ds mMMh do /NN/ `N+....--:/+oooosooo+:sMMM: hMMMM: `my .m+ -MMM+ :N. /NMo -+ooooo+/:-....`...:+hNMN. `NMMMd` .MM/ -m: oMMN. hs -NMd` :mm -MMMm- .s/ -MMm. /m- mMMd -N. `mMM/ .- /MMh. -dMo -MMMy od. .MMMs..---yh +MMM. sNo`.sNMM+ :MMMM/ sh`+MMMNmNm+++- mMMM- /--ohmMMM+ :MMMMm. `hyymmmdddo MMMMh. ```` `-+yy/`yMMM/ :MMMMMy -sm:.``..-:-.` dMMMMmo-.``````..-:/osyhddddho. `+shdh+. hMMM: :MmMMMM/ ./yy/` `:sys+/+sh/ .dMMMMMMmdddddmmNMMMNNNNNMMMMMs sNdo- dMMM- `-/yd/MMMMm-:sy+. :hs- /N` `/ymNNNNNNNmmdys+/::----/dMMm: +m- mMMM+ohmo/.` sMMMMdo- .om: `sh `.-----+/.` `.-+hh/` `od. NMMNmds/ `mmy:` +mMy `:yy. /moyso+//+ossso:. .yy` `dy+:` .. :MMMN+---/oys: /+m: `.-:::-` /d+ +MMMMMMMNh:` +MN/ -yh. `+hddhy+. /MM+ .sh: :NMo -sh/ -NMs `/yy: .NMy `:sh+. `mMm` ./yds- `dMMMmyo:-.````.-:oymNy:` +NMMMMMMMMMMMMMMMMms:` -+shmNMMMNmdy+:` Now attempting installation... Looking for a previous installation of SDKMAN... Looking for unzip... Looking for zip... Looking for curl... Looking for sed... Installing SDKMAN scripts... Create distribution directories... Getting available candidates... Prime the config file... Download script archive... ######################################################################## 100.0% Extract script archive... Install scripts... Set version to 5.7.4+362 ... Attempt update of login bash profile on OSX... Attempt update of zsh profile... All done! Please open a new terminal, or run the following in the existing one: source \"/Users/taewan/.sdkman/bin/sdkman-init.sh\" Then issue the following command: sdk help Enjoy!!!    zsh 사용자는 $HOME/.zshrc 파일을 그리고 bash 사용자는 $HOME/.bash_profile 파일 마지막에 다음 코드를 추가합니다.\nexport SDKMAN_DIR=\u0026quot;$HOME/.sdkman\u0026quot; [[ -s \u0026quot;$SDKMAN_DIR/bin/sdkman-init.sh\u0026quot; ]] \u0026amp;\u0026amp; source \u0026quot;$SDKMAN_DIR/bin/sdkman-init.sh\u0026quot;  그리고 bash를 사용한다면 다음 명령을 실행합니다.\nsource $HOME/.zshrc  zsh를 사용한다면 다음 명령을 실행합니다.\nsource $HOME/.zshrc  sdk version 명령을\n설치된 SDkMAN! 제거 설치된 SDkMAN!을 제거하고자 한다면 사용하는 운영체제의 터미널에서 다음 명령을 실행합니다.\nrm -rf ~/.sdkman  SDKMAN!을 활용한 개발툴 관리 주요 자바 툴을 설치하고 관리하는 절차를 소개합니다.\nJava 설치 및 버전 관리 SDKMAN!을 이용한 Java 설치 및 관리 방법 소개를 다음과 같은 순서로 진행하겠습니다.\n 지원 Java 목록 조회 Java 14 버전 설치 Java 11 버전 설치 Java 14 버전 기본 설정 Java 14 버전 제거  지원 Java 목록 조회 다음 명령을 입력하여 SDKMAN!이 현재 지원하는 Java 목록을 조회합니다.\nsdk list java  아래 [접기/펼치기]를 클릭하면 위 명령의 전체 출력 결과를 확인할 수 있습니다.\n  [접기/펼치기] SDKMAN! 명령 전체 출력 로그   $ sdk list java ================================================================================ Available Java Versions ================================================================================ Vendor | Use | Version | Dist | Status | Identifier -------------------------------------------------------------------------------- AdoptOpenJDK | | 14.0.0.j9 | adpt | | 14.0.0.j9-adpt | | 14.0.0.hs | adpt | | 14.0.0.hs-adpt | | 13.0.2.j9 | adpt | | 13.0.2.j9-adpt | | 13.0.2.hs | adpt | | 13.0.2.hs-adpt | | 12.0.2.j9 | adpt | | 12.0.2.j9-adpt | | 12.0.2.hs | adpt | | 12.0.2.hs-adpt | | 11.0.6.j9 | adpt | | 11.0.6.j9-adpt | | 11.0.6.hs | adpt | | 11.0.6.hs-adpt | | 8.0.242.j9 | adpt | | 8.0.242.j9-adpt | | 8.0.242.hs | adpt | | 8.0.242.hs-adpt Amazon | | 11.0.6 | amzn | | 11.0.6-amzn | | 8.0.242 | amzn | | 8.0.242-amzn | | 8.0.202 | amzn | | 8.0.202-amzn Azul Zulu | | 14.0.0 | zulu | | 14.0.0-zulu | | 13.0.2 | zulu | | 13.0.2-zulu | | 12.0.2 | zulu | | 12.0.2-zulu | | 11.0.6 | zulu | | 11.0.6-zulu | | 11.0.5.fx | zulu | | 11.0.5.fx-zulu | | 10.0.2 | zulu | | 10.0.2-zulu | | 9.0.7 | zulu | | 9.0.7-zulu | | 8.0.242 | zulu | | 8.0.242-zulu | | 8.0.232.fx | zulu | | 8.0.232.fx-zulu | | 8.0.202 | zulu | | 8.0.202-zulu | | 7.0.181 | zulu | | 7.0.181-zulu BellSoft | | 14.0.0.fx | librca | | 14.0.0.fx-librca | | 14.0.0 | librca | | 14.0.0-librca | | 13.0.2.fx | librca | | 13.0.2.fx-librca | | 13.0.2 | librca | | 13.0.2-librca | | 12.0.2 | librca | | 12.0.2-librca | | 11.0.6.fx | librca | | 11.0.6.fx-librca | | 11.0.6 | librca | | 11.0.6-librca | | 8.0.242.fx | librca | | 8.0.242.fx-librca | | 8.0.242 | librca | | 8.0.242-librca GraalVM | | 20.0.0.r11 | grl | | 20.0.0.r11-grl | | 20.0.0.r8 | grl | | 20.0.0.r8-grl | | 19.3.1.r11 | grl | | 19.3.1.r11-grl | | 19.3.1.r8 | grl | | 19.3.1.r8-grl | | 19.3.0.r11 | grl | | 19.3.0.r11-grl | | 19.3.0.r8 | grl | | 19.3.0.r8-grl | | 19.3.0.2.r11 | grl | | 19.3.0.2.r11-grl | | 19.3.0.2.r8 | grl | | 19.3.0.2.r8-grl | | 19.2.1 | grl | | 19.2.1-grl | | 19.1.1 | grl | | 19.1.1-grl | | 19.0.2 | grl | | 19.0.2-grl | | 1.0.0 | grl | | 1.0.0-rc-16-grl Java.net | | 15.ea.15 | open | | 15.ea.15-open | | 14.0.0 | open | | 14.0.0-open | | 13.0.2 | open | | 13.0.2-open | | 12.0.2 | open | | 12.0.2-open | | 11.0.2 | open | | 11.0.2-open | | 10.0.2 | open | | 10.0.2-open | | 9.0.4 | open | | 9.0.4-open SAP | | 13.0.2 | sapmchn | | 13.0.2-sapmchn | | 12.0.2 | sapmchn | | 12.0.2-sapmchn | | 11.0.6 | sapmchn | | 11.0.6-sapmchn ================================================================================ Use the Identifier for installation: $ sdk install java 11.0.3.hs-adpt ================================================================================ $    OpenJDK 14 버전 설치 다음 명령을 입력하여 SDKMAN!으로 14.0.0-open를 설치합니다.\nsdk instsall java 14.0.0-open  아래 [접기/펼치기]를 클릭하면 위 명령의 전체 출력 결과를 확인할 수 있습니다.\n  [접기/펼치기] SDKMAN! 명령 전체 출력 로그   $ sdk install java 14.0.0-open Downloading: java 14.0.0-open In progress... ############################################################################### 100.0% Repackaging Java 14.0.0-open... Done repackaging... Cleaning up residual files... Installing: java 14.0.0-open Done installing! Setting java 14.0.0-open as default. $    다음 명령을 입력하여 14.0.0-open이 설치된 상태를 확인합니다.\njava --version  아래와 같이 출력된다면 설치가 완료됐다고 판단할 수 있습니다.\n$ java --version openjdk 14 2020-03-17 OpenJDK Runtime Environment (build 14+36-1461) OpenJDK 64-Bit Server VM (build 14+36-1461, mixed mode, sharing) $  다음 명령을 입력하여 SDKMAN!으로 설치된 자바 버전과 활성화된 상태를 확인할 수 있습니다.\nsdk list java  다음 출력에서 설치 버전은 installed로 설치되고 활성화된 버전은 \u0026gt;\u0026gt;\u0026gt;으로 표현됩니다. 문서 가독성을 고려하여 아래 출력에서 일부분 출력을 제거했습니다.\n$ sdk list java ================================================================================ Available Java Versions ================================================================================ Vendor | Use | Version | Dist | Status | Identifier -------------------------------------------------------------------------------- AdoptOpenJDK | | 14.0.0.j9 | adpt | | 14.0.0.j9-adpt | | 14.0.0.hs | adpt | | 14.0.0.hs-adpt | | 13.0.2.j9 | adpt | | 13.0.2.j9-adpt | | 13.0.2.hs | adpt | | 13.0.2.hs-adpt | | 12.0.2.j9 | adpt | | 12.0.2.j9-adpt | | 12.0.2.hs | adpt | | 12.0.2.hs-adpt | | 11.0.6.j9 | adpt | | 11.0.6.j9-adpt | | 11.0.6.hs | adpt | | 11.0.6.hs-adpt | | 8.0.242.j9 | adpt | | 8.0.242.j9-adpt | | 8.0.242.hs | adpt | | 8.0.242.hs-adpt Java.net | | 15.ea.15 | open | | 15.ea.15-open |  | 14.0.0 | open | installed | 14.0.0-open | | 13.0.2 | open | | 13.0.2-open | | 12.0.2 | open | | 12.0.2-open | | 11.0.2 | open | | 11.0.2-open | | 10.0.2 | open | | 10.0.2-open | | 9.0.4 | open | | 9.0.4-open ================================================================================ Use the Identifier for installation: $ sdk install java 11.0.3.hs-adpt ================================================================================ $  OpenJDK 11 버전 설치 이제 OpenJDK 11 버전을 설치해 보겠습니다. 다음 명령으로 OpenJDK 11을 설치합니다.\nsdk install java 11.0.2-open  위 명령이 실행되면 Java 상태는 다음과 깉이 변경됩니다. 기본 설치 버전은 Java 11으로 변경됩니다.\n$ java --version openjdk 11.0.2 2019-01-15 OpenJDK Runtime Environment 18.9 (build 11.0.2+9) OpenJDK 64-Bit Server VM 18.9 (build 11.0.2+9, mixed mode) $ sdk list java ================================================================================ Available Java Versions ================================================================================ Vendor | Use | Version | Dist | Status | Identifier -------------------------------------------------------------------------------- GraalVM | | 20.0.0.r11 | grl | | 20.0.0.r11-grl | | 20.0.0.r8 | grl | | 20.0.0.r8-grl | | 19.3.1.r11 | grl | | 19.3.1.r11-grl | | 19.3.1.r8 | grl | | 19.3.1.r8-grl | | 19.3.0.r11 | grl | | 19.3.0.r11-grl | | 19.3.0.r8 | grl | | 19.3.0.r8-grl | | 19.3.0.2.r11 | grl | | 19.3.0.2.r11-grl | | 19.3.0.2.r8 | grl | | 19.3.0.2.r8-grl | | 19.2.1 | grl | | 19.2.1-grl | | 19.1.1 | grl | | 19.1.1-grl | | 19.0.2 | grl | | 19.0.2-grl | | 1.0.0 | grl | | 1.0.0-rc-16-grl Java.net | | 15.ea.15 | open | | 15.ea.15-open | | 14.0.0 | open | installed | 14.0.0-open | | 13.0.2 | open | | 13.0.2-open | | 12.0.2 | open | | 12.0.2-open |  | 11.0.2 | open | installed | 11.0.2-open | | 10.0.2 | open | | 10.0.2-open | | 9.0.4 | open | | 9.0.4-open SAP | | 13.0.2 | sapmchn | | 13.0.2-sapmchn | | 12.0.2 | sapmchn | | 12.0.2-sapmchn | | 11.0.6 | sapmchn | | 11.0.6-sapmchn ================================================================================ Use the Identifier for installation: $ sdk install java 11.0.3.hs-adpt ================================================================================ $  Java 14 버전 활성화 현재 Java 11이 활성화된 상태입니다. Java 14를 활성화 시키기 위해서는 다음 명령을 실행합니다.\nsdk use java 14.0.0-open  위 명령이 실행되면 Java 상태는 다음과 깉이 변경됩니다. 기본 설치 버전은 Java 14으로 변경됩니다.\n$ java --version openjdk 14 2020-03-17 OpenJDK Runtime Environment (build 14+36-1461) OpenJDK 64-Bit Server VM (build 14+36-1461, mixed mode, sharing)  ✔  5027  14:06:13 $ sdk list java ================================================================================ Available Java Versions ================================================================================ Vendor | Use | Version | Dist | Status | Identifier -------------------------------------------------------------------------------- GraalVM | | 20.0.0.r11 | grl | | 20.0.0.r11-grl | | 20.0.0.r8 | grl | | 20.0.0.r8-grl | | 19.3.1.r11 | grl | | 19.3.1.r11-grl | | 19.3.1.r8 | grl | | 19.3.1.r8-grl | | 19.3.0.r11 | grl | | 19.3.0.r11-grl | | 19.3.0.r8 | grl | | 19.3.0.r8-grl | | 19.3.0.2.r11 | grl | | 19.3.0.2.r11-grl | | 19.3.0.2.r8 | grl | | 19.3.0.2.r8-grl | | 19.2.1 | grl | | 19.2.1-grl | | 19.1.1 | grl | | 19.1.1-grl | | 19.0.2 | grl | | 19.0.2-grl | | 1.0.0 | grl | | 1.0.0-rc-16-grl Java.net | | 15.ea.15 | open | | 15.ea.15-open |  | 14.0.0 | open | installed | 14.0.0-open | | 13.0.2 | open | | 13.0.2-open | | 12.0.2 | open | | 12.0.2-open | | 11.0.2 | open | installed | 11.0.2-open | | 10.0.2 | open | | 10.0.2-open | | 9.0.4 | open | | 9.0.4-open ================================================================================ Use the Identifier for installation: $ sdk install java 11.0.3.hs-adpt ================================================================================ $  ✔  5028  14:06:18  Java 14 버전 업데이트 다음 명령으로 현재 활성된 14.0.0-open를 최신 버전으로 업데이트 합니다.\nsdk update java 14.0.0-open  Java 11 버전 제거 SDKMAN!으로 설치한 11.0.2-open를 다음 명령으로 제거합니다.\nsdk uninstall java 11.0.2-open  위 명령이 실행되면 Java 상태는 다음과 깉이 변경됩니다. Java 11은 설치되지 않는 상태로 표시됩니다.\n$ sdk list java ================================================================================ Available Java Versions ================================================================================ Vendor | Use | Version | Dist | Status | Identifier -------------------------------------------------------------------------------- GraalVM | | 20.0.0.r11 | grl | | 20.0.0.r11-grl | | 20.0.0.r8 | grl | | 20.0.0.r8-grl | | 19.3.1.r11 | grl | | 19.3.1.r11-grl | | 19.3.1.r8 | grl | | 19.3.1.r8-grl | | 19.3.0.r11 | grl | | 19.3.0.r11-grl | | 19.3.0.r8 | grl | | 19.3.0.r8-grl | | 19.3.0.2.r11 | grl | | 19.3.0.2.r11-grl | | 19.3.0.2.r8 | grl | | 19.3.0.2.r8-grl | | 19.2.1 | grl | | 19.2.1-grl | | 19.1.1 | grl | | 19.1.1-grl | | 19.0.2 | grl | | 19.0.2-grl | | 1.0.0 | grl | | 1.0.0-rc-16-grl Java.net | | 15.ea.15 | open | | 15.ea.15-open |  | 14.0.0 | open | installed | 14.0.0-open | | 13.0.2 | open | | 13.0.2-open | | 12.0.2 | open | | 12.0.2-open | | 11.0.2 | open | | 11.0.2-open | | 10.0.2 | open | | 10.0.2-open | | 9.0.4 | open | | 9.0.4-open ================================================================================ Use the Identifier for installation: $ sdk install java 11.0.3.hs-adpt ================================================================================ $  Maven 설치 SDKMAN!으로 Maven을 설치하는 과정을 소개합니다. Maven은 대표적인 자바 플젝젝트 빌드 툴입니다.\n다음 명령으로 SDKMAN!이 지원하는 Maven 목록을 확인합니다.\nsdk list maven  위 명령의 전체 출력 결과는 다음과 같습니다.\n$ sdk list maven ================================================================================ Available Maven Versions ================================================================================ 3.6.3 3.6.2 3.6.1 3.6.0 3.5.4 3.5.3 3.5.2 3.5.0 3.3.9 ================================================================================ + - local version * - installed  - currently in use ================================================================================ $  Maven 3.6.3 버전을 다음 명령으로 설치합니다.\nsdk install maven 3.6.3  위 명령이 실행되어 설치되면 maven은 다음 명령으로 확인할 수 있습니다.\n$ mvn --version Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f) Maven home: /Users/taewan/.sdkman/candidates/maven/current Java version: 14, vendor: Oracle Corporation, runtime: /Users/taewan/.sdkman/candidates/java/14.0.0-open Default locale: ko_KR, platform encoding: UTF-8 OS name: \"mac os x\", version: \"10.15.1\", arch: \"x86_64\", family: \"mac\"  ✔  5035  14:29:32 $ sdk list maven ================================================================================ Available Maven Versions ================================================================================  * 3.6.3 3.6.2 3.6.1 3.6.0 3.5.4 3.5.3 3.5.2 3.5.0 3.3.9 ================================================================================ + - local version * - installed  - currently in use ================================================================================ $  SBT 설치 SDKMAN!으로 SBT를 설치하는 과정을 소개합니다. SBT는 Scala 프로젝트 빌드 툴입니다.\n다음 명령으로 SDKMAN!이 지원하는 SBT 목록을 확인합니다.\nsdk list maven  위 명령의 전체 출력 결과는 다음과 같습니다.\n$ sdk list sbt ================================================================================ Available Sbt Versions ================================================================================ 1.3.8 1.2.3 0.13.18 1.3.7 1.2.1 0.13.15 1.3.6 1.2.0 0.13.13 1.3.5 1.1.6 0.13.12 1.3.4 1.1.5 0.13.11 1.3.3 1.1.4 0.13.9 1.3.2 1.1.3 1.3.1 1.1.2 1.3.0 1.1.1 1.3.0-RC1 1.1.0 1.2.8 1.0.4 1.2.7 1.0.3 1.2.6 1.0.2 1.2.5 1.0.1 1.2.4 1.0.0 ================================================================================ + - local version * - installed  - currently in use ================================================================================ $  Maven 3.6.3 버전을 다음 명령으로 설치합니다.\nsdk install sbt 0.13.9  위 명령이 실행되어 설치되면 sbt는 다음 명령으로 확인할 수 있습니다.\n$ sdk version SDKMAN 5.7.4+362 $ sdk list sbt ================================================================================ Available Sbt Versions ================================================================================ 1.3.8 1.2.3 0.13.18 1.3.7 1.2.1 0.13.15 1.3.6 1.2.0 0.13.13 1.3.5 1.1.6 0.13.12 1.3.4 1.1.5 0.13.11 1.3.3 1.1.4  * 0.13.9 1.3.2 1.1.3 1.3.1 1.1.2 1.3.0 1.1.1 1.3.0-RC1 1.1.0 1.2.8 1.0.4 1.2.7 1.0.3 1.2.6 1.0.2 1.2.5 1.0.1 1.2.4 1.0.0 ================================================================================ + - local version * - installed  - currently in use ================================================================================ $  "
},
{
	"uri": "/oci_docs/50.database_service/adb/adw/hands-on/basic_management/instance_scale_management/",
	"title": "인스턴스 Scale Up/Dwon",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)에서 프로비저닝된 ADW 인스턴스의 Scale Up/Down 절차를 정리합니다.",
	"content": " ADW 인스턴스는 Sacle Up과 Scacle Down을 지원합니다. ADW 인스턴스에서 상세 페이지에서 ADW 인스턴스의 CPU와 스토리지를 조정할 수 있습니다. ADW 인스턴스의 Scale Up \u0026amp; Down은 ADW 인스턴스 서비스 중단없이 진행됩니다.\nADW 자원 할당 관리 ADW 인스턴스의 Scale Up/Down 실습은 다음과 같은 목차로 진행됩니다.\n ADW 자원 할당 관리  사전 준비 사항 실습 1: ADW Sacle Up: OCI COnsole ADW Scale Up/Down: OCI CLI  사전 준비 사항 ADW Scale Dwon: OCI CLI 명령    \n 사전 준비 사항 실습으로 사용할 ADW 인스턴스가 준비되어 있어야 합니다. 다음과 같은 ADW 인스턴스가 준비되어 있다는 가정으로 진행합니다.\n에제로 사용할 ADW 인스턴스는 다음과 같은 특징을 갖습니다.\n Compartment: root/sandbox OCPU: 1개 Storage: 1TB Auto Scaling: Enabled  실습에 사용할 인스턴스가 없다면 다음 문서를 참조하여 ADW 인스턴스를 만드시기 바랍니다.\n   자원 유형 자원 이름 소속 Compartment 추가 설명 자원 생성 참조 문서     ADW DemoADW root \u0026gt; sandbox 인스턴스 사양: 1OCPU/1TB ADW 인스턴스 생성       실습 1: ADW Sacle Up: OCI COnsole Scale up은 서비스에 할당된 물리적 자원을 높이는 작업입니다. 변경 가능한 자원은 CPU와 Storage입니다. OCI Console의 ADW 인스턴스 상세 페이지에서 \u0026ldquo;Scale Up/Down\u0026rdquo; 버튼을 클릭하면 대상 ADW 인스턴스의 자원을 조정하는 창이 오픈됩니다.\n\u0026ldquo;Scale Up/Down\u0026rdquo; 설정 창에서 다음 항목을 설정합니다.\n   설정항목 설정값 설명     OCPU Count 4 1개 OCPU를 4개로 증설   Storage(TB) 2 1TB 스토리지를 2TB로 증설   Auto Scaling 체크 DB Auto Scaling 지원 DB Workload에 따라 자동으로 설정 CPU 의 3배 까지 Up / Down 수행    위 설정을 입력하고 Update 버튼을 클릭하면 자원 할당 작업이 진행됩니다. Scale Up이 진행되면 ADW 인스턴스 상태는 Scaling In Process 상태가 됩니다.\nScale Up이 마무리되면 DW 인스턴스 상태는 Available 이됩니다.\nADW Scale Up/Down: OCI CLI OCI CLI로 ADW 인스턴스를 Sacle up/down 할 수 있습니다.\n사전 준비 사항 OCI CLI 설치와 설정이 되어 있어야합니다. OCI CLI 설치와 설정이 필요하다면 다음 문서를 첨조해서 준비하시기 바랍니다.\n [OCI CLI 설치] Linux \u0026amp; Mac OS OCI CLI 설정  OCI CLI를 구동할 터미널에서 다음 명령을 실행하여 DemoAdw 인스턴스의 OCID를 환경 변수로 등록합니다. 다음 명령은 Linux와 Mac OS X에서 환경 변수를 등록하는 명령입니다.\n## Settting ADW Instance OCID OCID with EVN Variable export DEMOADW_OCID=ocid1.autonomousdatabase.oc1.phx.abyhqljtogo4bx4zmj7zhizvjxfba4oy2dy2lu6arzkkgfalixu4gxz7blxa  Linux와 Mac OS X에서 등록한 환경 변수를 다음과 같은 명령으로 확인할 수 있습니다.\n$ env |grep OCID COCID=ocid1.compartment.oc1..aaaaaaaar7os3x3p4e6dcak22z7m4zg2ogki6kr34b6sdlkcppzlfij7lvwq DEMOADW_OCID=ocid1.autonomousdatabase.oc1.phx.abyhqljtogo4bx4zmj7zhizvjxfba4oy2dy2lu6arzkkgfalixu4gxz7blxa $  ADW Scale Dwon: OCI CLI 명령 다음 명령을 실행하여 ADW 인스턴스 OCPU와 Storage 크기를 조정할 수있습니다.\n현재 ADW 인스턴스에는 4개 OCPU와 2TB 스토리지가 할당돼있습니다. 다음 명령은 ADW 인스턴스가 1개 OCPU와 1TB 스토리지를 갖도록 Scale Dwon합니다.\noci db autonomous-database update \\ \u0026gt; --autonomous-database-id $ADW_OCID \\ \u0026gt; --cpu-core-count 1 \\ \u0026gt; --data-storage-size-in-tbs 1  아래 [접기/펼치기]를 클릭하여 ADW 인스턴스 Scale Down 명령의 전체 출력 결과를 확인할 수 있습니다.\n  [접기/펼치기] DemoAdw 인스턴스 Scale Down 명령 전체 로그   $ oci db autonomous-database update \\ \u0026gt; --autonomous-database-id $ADW_OCID \\ \u0026gt; --cpu-core-count 1 \\ \u0026gt; --data-storage-size-in-tbs 1 { \u0026quot;data\u0026quot;: { \u0026quot;autonomous-container-database-id\u0026quot;: null, \u0026quot;compartment-id\u0026quot;: \u0026quot;ocid1.compartment.oc1..aaaaaaaar7os3x3p4e6dcak22z7m4zg2ogki6kr34b6sdlkcppzlfij7lvwq\u0026quot;, \u0026quot;connection-strings\u0026quot;: { \u0026quot;all-connection-strings\u0026quot;: { \u0026quot;HIGH\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_high.adwc.oraclecloud.com\u0026quot;, \u0026quot;LOW\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_low.adwc.oraclecloud.com\u0026quot;, \u0026quot;MEDIUM\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_medium.adwc.oraclecloud.com\u0026quot; }, \u0026quot;dedicated\u0026quot;: null, \u0026quot;high\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_high.adwc.oraclecloud.com\u0026quot;, \u0026quot;low\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_low.adwc.oraclecloud.com\u0026quot;, \u0026quot;medium\u0026quot;: \u0026quot;adb.us-phoenix-1.oraclecloud.com:1522/ep2rzoh7surh5ch_demoadw_medium.adwc.oraclecloud.com\u0026quot; }, \u0026quot;connection-urls\u0026quot;: { \u0026quot;apex-url\u0026quot;: null, \u0026quot;machine-learning-user-management-url\u0026quot;: null, \u0026quot;sql-dev-web-url\u0026quot;: null }, \u0026quot;cpu-core-count\u0026quot;: 4, \u0026quot;data-safe-status\u0026quot;: \u0026quot;NOT_REGISTERED\u0026quot;, \u0026quot;data-storage-size-in-tbs\u0026quot;: 2, \u0026quot;db-name\u0026quot;: \u0026quot;DemoAdw\u0026quot;, \u0026quot;db-version\u0026quot;: \u0026quot;19c\u0026quot;, \u0026quot;db-workload\u0026quot;: \u0026quot;DW\u0026quot;, \u0026quot;defined-tags\u0026quot;: {}, \u0026quot;display-name\u0026quot;: \u0026quot;demo adw\u0026quot;, \u0026quot;freeform-tags\u0026quot;: {}, \u0026quot;id\u0026quot;: \u0026quot;ocid1.autonomousdatabase.oc1.phx.abyhqljtogo4bx4zmj7zhizvjxfba4oy2dy2lu6arzkkgfalixu4gxz7blxa\u0026quot;, \u0026quot;is-auto-scaling-enabled\u0026quot;: true, \u0026quot;is-dedicated\u0026quot;: false, \u0026quot;is-free-tier\u0026quot;: false, \u0026quot;is-preview\u0026quot;: false, \u0026quot;license-model\u0026quot;: \u0026quot;BRING_YOUR_OWN_LICENSE\u0026quot;, \u0026quot;lifecycle-details\u0026quot;: null, \u0026quot;lifecycle-state\u0026quot;: \u0026quot;SCALE_IN_PROGRESS\u0026quot;, \u0026quot;nsg-ids\u0026quot;: null, \u0026quot;private-endpoint\u0026quot;: null, \u0026quot;private-endpoint-label\u0026quot;: null, \u0026quot;service-console-url\u0026quot;: \u0026quot;https://adb.us-phoenix-1.oraclecloud.com/console/index.html?tenant_name=OCID1.TENANCY.OC1..AAAAAAAA6MA7KQ3BSIF76UZQIDV22CAJS3FPESGPQMMSGXIHLBCEMKKLRSQA\u0026amp;database_name=DEMOADW\u0026amp;service_type=ADW\u0026quot;, \u0026quot;subnet-id\u0026quot;: null, \u0026quot;system-tags\u0026quot;: {}, \u0026quot;time-created\u0026quot;: \u0026quot;2020-03-21T07:32:28.875000+00:00\u0026quot;, \u0026quot;time-deletion-of-free-autonomous-database\u0026quot;: null, \u0026quot;time-maintenance-begin\u0026quot;: \u0026quot;2020-03-22T02:00:00+00:00\u0026quot;, \u0026quot;time-maintenance-end\u0026quot;: \u0026quot;2020-03-22T06:00:00+00:00\u0026quot;, \u0026quot;time-reclamation-of-free-autonomous-database\u0026quot;: \u0026quot;2020-03-28T08:50:58.984000+00:00\u0026quot;, \u0026quot;used-data-storage-size-in-tbs\u0026quot;: 1, \u0026quot;whitelisted-ips\u0026quot;: null }, \u0026quot;etag\u0026quot;: \u0026quot;4d5c9be5\u0026quot;, \u0026quot;opc-work-request-id\u0026quot;: \u0026quot;ocid1.coreservicesworkrequest.oc1.phx.abyhqljtlcse5izkvqsyaau65kz523mkmyrbil6s2mw74lxlq7duiqgrjuoa\u0026quot; } $    다음 명령을 입력하여 ADW 인스턴스의 상태를 확인할 수 있습니다.\n $ oci db autonomous-database get --autonomous-database-id $ADW_OCID |grep lifecycle-state \u0026quot;lifecycle-state\u0026quot;: \u0026quot;SCALE_IN_PROGRESS\u0026quot;, $ oci db autonomous-database get --autonomous-database-id $ADW_OCID |grep lifecycle-state \u0026quot;lifecycle-state\u0026quot;: \u0026quot;AVAILABLE\u0026quot;, $  OCI CLI를 이용한 Scale Down 작업이 완료되면, 대상 ADW 인스턴스의 자원이 OCPU 1개와 스토리지 1TB로 변경된 것을 확인할 수 있습니다.\n"
},
{
	"uri": "/oci_docs/10_quickstart/ha_with_load_balancer/provisioning_load_balancer/",
	"title": "OCI Load Balancer 프로비저닝",
	"tags": [],
	"description": "OCI Load Banalcer 프로비저닝 절차를 소개합니다.",
	"content": " 이 문서에서는 위 이미지와 같이 이름이 demo_vcn인 VCN(Virtual Cloud Netwrok)의 private subnet에 아파치 웹서버가 설치된 Compute 인스턴스를 3개 프로비저닝하는 절차를 소개할 것입니다. 이번 문서에서는 OCI 콘솔을 이용하여 OCI Linux VM 인스턴스를 생성할 것입니다 .OCI Linux VM 인스턴스 생성 과정은 다음과 같은 절차로 진행됩니다.\n VM 프로비저닝  SSH Key Pair 파일 준비 사용 가능한 자원 확인 Oralce Linxu 7.7 이미지로 VM 생성 주의 사항: Single AD Resion \u0026amp; 3 AD Resion  참고 문서  \n VM 프로비저닝 SSH Key Pair 파일 준비 OCI Linux VM 인스턴스을 생성할 때 등록할 SSH Key Pair 파일을 생성합니다. 이 파일은 SSH 접속에 사용됩니다. SSH Key Pair 파일은 다음 문서를 참조하여 만듭니다.\n   작업 유형 작업 참조 문서     Key Paring RSA 파일 생성 운영체제별 SSH Key Pair 준비       SSH Key Pair 파일의 공개키는 다음과 같은 형식을 갖습니다.\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDN40LZmMb7uiZNTG1bBHE+pJZhjrg7an +plbU1r9Dc3rXFjUuJMepwABAsFIKuZF6VrFFkoJ7xvD6zjB12b5xFHgZ5Z9VkmAXQtd2ec zXL/BLWb2j7prt4Bdq+e6+LCTn0BVbmUwhf5dt/LCD4Wr/ITpG0ST/p+vy8VufQNdC+TQ4p MV0kJabcdcnqQ3zS2Rz2nfxez2iNukrgl6TeNU52SwtEgPKWn4Kl1THjn/ujPea9d2qLElI pLZ496AIHugEMaShX8cr4QtoQmzCdxSoqtJvRe+byf/W3Z2pNwr0ENOX0ZkHyjk3t2YZxvD bK9NxlqhTy9kmyJLYZgWldHj3 taewan@taewanui-MBP  생성한 SSH Key Pair 파일의 위치와 파일명은 다음과 같다고 가정하고 진행하겠습니다.\n   파일 유형 파일 위치 파일명     RSA 공개키 /temp id_rsa.pub   RSA 비밀키 /temp id_rsa    사용 가능한 자원 확인 현재 Tenancy에 할당된 사용 가능한 자원을 확인 합니다. Tenancy에 할당된 자원량을 확인하는 Limits, Quotas and Uasge(제한, 할당량 및 사용량) 페이지는 다음과 같은 메뉴 패스로 이동할 수 있습니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Governance  Limits, Quotas and Uasge(제한, 할당량 및 사용량) Limits, Quotas and Uasge(제한, 할당량 및 사용량) 페이지에서 리전의 AD(Available Domain)에서 서비스 별로 Tenancy에 할당된 자원 크기와 현재 사용중인 자원 크기 및 사용 가능한 자원 크기를 확인할 수 있습니다. 또한 Request a services limit increase에서 자원 할당 증설을 요청할 수 있습니다.\n위 페이지에서 사용 가능한 Shape인 VM.Standard2.1으로 리눅스 VM 인스턴스를 생성할 것입니다.\nOralce Linxu 7.7 이미지로 VM 생성 이제 부터 Oracle Linux 7.7 이미지를 Shape VM.Standard2.1로 3개 인스턴스를 프로비저닝하겠습니다. 다음 메뉴 패스로 OCI Compute의 Instance관리 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Compute  Instances OCI Compute의 Instance관리 페이지에서 앞으로 생성할 VM을 할당할 Compartment인 sandbox를 선택합니다. \u0026ldquo;create instance\u0026rdquo; 버튼을 클릭하여 \u0026ldquo;Create Compute Instance\u0026rdquo; 페이지로 이동합니다.\n\u0026ldquo;Create Compute Instance\u0026rdquo; 페이지에서 입력 폼 각 항목에 다음과 같이 입력합니다.\n   설정 항목 vm_web01 vm_web02 vm_web03     Name your instance vm_web01 vm_web02 vm_web03   Operating System or Image Source Oracle Linux 7.7 Oracle Linux 7.7 Oracle Linux 7.7   Availability Domain AD 1 AD 2 AD 3   Instance Type Virtual Machine Virtual Machine Virtual Machine   Instance Shape VM.Stanndard2.1 VM.Stanndard2.1 VM.Stanndard2.1   Virtaul cloud network compartment sandbox sandbox sandbox   Virtaul cloud network demo_vcn demo_vcn demo_vcn   Subnet Compartment sandbox sandbox sandbox   Subnet Private Subnet-demo_vcn Private Subnet-demo_vcn Private Subnet-demo_vcn   Public IP DO NOT ASSIGN A PUBLIC IP ADDRESS DO NOT ASSIGN A PUBLIC IP ADDRESS DO NOT ASSIGN A PUBLIC IP ADDRESS   Choose SSH Key file 체크 체크 체크   public key id_rsa.pub id_rsa.pub id_rsa.pub    마지막으로 3개 VM을 생성할 때, Advanced Option의 Management_ 텝에 PASTE CLOUD-INIT SCRIPT를 선택하고 다음 스크립트를 등록합니다.\n#!/bin/sh sudo yum install httpd -y sudo bash -c 'echo $HOSTNAME running on OCI \u0026gt;\u0026gt; /var/www/html/index.html' sudo apachectl start sudo systemctl enable httpd sudo firewall-cmd --permanent --zone=public --add-service=http sudo firewall-cmd --reload  CLOUD-INIT SCRIPT는 VM을 프로비저닝하고 시작할 때, 실행되는 스크립트입니다. 이 스크립트는 다음과 같은 기능을 제공합니다.\n 아파치 웹서버 설치 아파치 웹서버 시작 아파치 웹서버 서비스 등록 방화벽 오픈  다음 이미지는 vm_web01을 입력한 예제입니다. 위 설정 값을 입력한 후 \u0026ldquo;Create\u0026rdquo; 버튼을 클릭하여 인스턴스 생성을 시작합니다. 이 생성 작업은 vm_web02와 vm_web03까지 3번 반복합니다.\n\u001e vm_web01, vm_web02 및 vm_web03 3개 Compute 인스턴스가 생성되면 다음과 같은 형태가 됩니다.\n주의 사항: Single AD Resion \u0026amp; 3 AD Resion 위에서 다른 예제는 3개 AD(Availability Domain) 리전인 Phoenix에서 진행했습니다. 3 AD 리전에서는 고가용성 구성을 위하여 Subnet을 Regional Subnet으로 구성하고 각 VM을 AD에 분산하여 프로비저닝 합니다. 각 Compute 인스턴스를 AD 별로 분산하여 장애 및 다양한 이슈에 시스템 안정성을 향상 시킬 수 있습니다.\n3 AD 리전이 아닌 싱글 AD 리전에서 HA 구성을 할 경우에는 Compute Instance는 AD로 분산하지 않고 Fault Domain으로 분산하여 시스템 안정성을 확보합니다. Fault Domain 설정은 Advanced Option의 Management_ 텝에서 설정됩니다. 싱글 AD 리전에서 이 문서를 실습실 경우에는 Fault Domain을 다음과 같이 설정합니다.\n   Compute Instance 이름 Fault Doamin 설정     vm_web01 FAULT-DOMAIN-1   vm_web02 FAULT-DOMAIN-2   vm_web03 FAULT-DOMAIN-3    위 설정은 다음 이미지와 같이 적용됩니다.\n참고 문서  [Official OCI Docs] Tutorial - Launching Your First Linux Instance     "
},
{
	"uri": "/oci_docs/50.database_service/adb/adw/hands-on/adw_tools/",
	"title": "ADW 지원 툴",
	"tags": [],
	"description": "OCI ADW(Authonomous Data Warehouse)를 지원하는 주요 툴에 대해서 정리합니다.",
	"content": " 이 절에서는 Oracle SQL Developer와 ADW 인스턴스 제공툴의 설치/설정 및 접근 방법을 소개합니다.\nOracle SQL Developer Oracle SQL Developer는 ADW 데이터베이스를 지원하는 대표적인 SQL 툴로 오라클이 무상으로 제공하는 개발 도구입니다.\nADW 인스턴스 제공 툴 ADW 인스턴스는 3가지 서비스 툴을 제공합니다. ADW 인스턴스가 제공하는 서비스 툴은 다음과 같습니다.\n   서비스 명 설명     Oracle APEX Oracle APEX 개발 / 관리 환경   SQL Developer Web SQLDeveloper 웹 버전, 웹 기반 SQL UI 도구   Oracle Machine Learning 노트북 Oracle Machine Learning을 위한 Apache Zeppelin 노트북    이 서비스는 Autonomous Database 상세 페이지에서 다음과 같은 메뉴 페스로 접근할 수 있습니다.\n(Autonomous Database 상세 페이지)Service Console  개발 (서비스 콘솔 페이지 메뉴) 각 메뉴를 클릭하면 개별 서비스 페이지가 오픈됩니다.\nADW 지원 툴은 다음과 같은 주제로 진행됩니다.\n SQL Developer: 설정 및 접속     SQL Developer Web 접속   \n APEX 서비스   \n OML Notebook    \n "
},
{
	"uri": "/oci_docs/50.database_service/adb/adw/hands-on/performance/",
	"title": "ADW 쿼리 성능 테스트",
	"tags": [],
	"description": "OCI ADW(Authonomous Data Warehouse)에서 자원 할당에 따라서 잘라지는 쿼리 실행 시간을 테스트합니다.",
	"content": "ADW 인스턴스에서 쿼리를 실행할때 자원이 할당되는 방식과 규모에 따라서 쿼리 수행 시간은 영향을 받습니다.\nADW 인스턴스는 3개의 사전 정의 데이터베이스 서비스(HIGH, MEDIUM, LOW)를 제공합니다. 서비스 유형에 따라서 쿼리당 할당되는 자원 규모와 동시성 지원 규모가 달라집니다.\nADW는 서비스 중단없이 할당된 OCPU와 스토리지를 변경하는 Scale-Up/Down\nADW 쿼리 성능 테스트는 다음과 같은 주제로 진행됩니다.\n ADW 서비스 별 쿼리 성능     ADW OCPU와 쿼리 성능    \n "
},
{
	"uri": "/oci_docs/50.database_service/adb/adw/hands-on/adw_tools/sqldeveloper/",
	"title": "SQL Developer: 설정 및 접속",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)에서 프로비저닝한 ADW 인스턴스의 SQL Developer 설정 방법을 정리합니다.",
	"content": " 이번 문서는 오라클 클라우드 Free Tier 계정에 ADW 인스턴스를 만들었다는 전제로 진행합니다. 현재 ADW 인스턴스가 없다면, 다음 문서를 참조하여 ADW 인스턴스(DemoADW)를 만드시기 바랍니다.\n ADW 인스턴스 생성     이번 문서에서는 Oracle SQL Developer로 ADW 인스턴스에 연결하는 설정을 구성하는 절차를 소개합니다. 다음과 같은 목차로 진행 됩니다.\n SQL Developer의 ADW 접속 설정  ADW Wallet 다운로드 Wallet 파일 구성 Oracle SQL Developer 설정 Oracle SQL Developer 접속   \n SQL Developer의 ADW 접속 설정 ADW Wallet 다운로드 ADW 인스턴스의 접속 설정을 SQL Developer에 구성하기 위해서는 Wallet 파일이 필요합니다. Wallet 파일을 다운로드하기 위해서 OCI Console의 ADW 인스턴스 상세 페이지에서 DB Connection 버튼을 클릭합니다.\nOCI Console의 ADW 인스턴스 상세 페이지에서 DB Connection 버튼을 클릭하면, 다음과 같이 Database Connection 창이 오픈됩니다. 다음 그림과 같이 Wallet Type을 Instance Wallet을 선택하고 Download Wallet 버튼을 클릭합니다.\nDownload Wallet 버튼을 클릭하면 Wallet 파일에 대한 패스워드를 설청 화면이 출력됩니다. Wallet 파일에 대한 패스워드를 설정한 다음에, Download 버튼을 클릭합니다.\nDownload 버튼을 클릭하면, 다음과 같은 형식의 파일이 다운로드됩니다.\nWallet_\u0026lt;Database_name\u0026gt;.zip  이와 같으 형식으로 Wallet_DemoApp.zip 파일이 다운로드됩니다.\nWallet 파일 구성 Wallet_DemoApp.zip은 다음과 같은 파일을 포함합니다.\n데이터베이스 접속 정보를 제공하는 tnsnames.ora 파일은 다음과 같은 내용으로 만들어집니다. 이 파일의 tnsname인 demoadw_high, demoadw_low, demoadw_medium을 다음에 사용합니다.\ndemoadw_high = (description= (retry_count=20) (retry_delay=3) (address=(protocol=tcps)(port=1522)(host=adb.us-ashburn-1.oraclecloud.com)) (connect_data=(service_name=w0a8icio6wvena7_demoadw_high.adwc.oraclecloud.com)) (security= (ssl_server_cert_dn=\u0026quot;CN=adwc.uscom-east-1.oraclecloud.com,OU=Oracle BMCS US,O=Oracle Corporation,L=Redwood City,ST=California,C=US\u0026quot;) ) ) demoadw_low = (description= (retry_count=20) (retry_delay=3) (address=(protocol=tcps)(port=1522)(host=adb.us-ashburn-1.oraclecloud.com)) (connect_data=(service_name=w0a8icio6wvena7_demoadw_low.adwc.oraclecloud.com)) (security=(ssl_server_cert_dn=\u0026quot;CN=adwc.uscom-east-1.oraclecloud.com,OU=Oracle BMCS US,O=Oracle Corporation,L=Redwood City,ST=California,C=US\u0026quot;) ) ) demoadw_medium = (description= (retry_count=20) (retry_delay=3) (address=(protocol=tcps)(port=1522)(host=adb.us-ashburn-1.oraclecloud.com)) (connect_data=(service_name=w0a8icio6wvena7_demoadw_medium.adwc.oraclecloud.com)) (security= (ssl_server_cert_dn=\u0026quot;CN=adwc.uscom-east-1.oraclecloud.com,OU=Oracle BMCS US,O=Oracle Corporation,L=Redwood City,ST=California,C=US\u0026quot;) ) )  Oracle SQL Developer 설정 SQL Developer를 실행하고 다음과 같이 \u0026ldquo;+\u0026rdquo; 아이콘을 클릭하고, Connect 관리 창을 오픈합니다.\nConnection 관리 창에서, 다음과 같은 값을 설정합니다.\n   설정 항목 설정 값 설명     Name demo adw 커넥션 설정을 구분하는 이름   사용자 이름 admin 접속에 사용할 데이터베이스 사용자 명   비밀번호 Welcome123456 사용자 이름으로 설정한 데이터베이스 사용자의 패스워드   접속 유형 클라우드 전자지갑(Cloud Wallet) 인증 정보 설정 방식   구성 파일 /sandbox/Wallet_DemoApp.zip 다운로드 wallet 파일 위치   서비스 demoadw_medium tnsname.ora 파일에 등록된 tnsname 명    위 설정을 입력한 다음에 테스트(T) 버튼을 클릭하여 커넥션 설정을 테스트합니다. 테스트가 성공으로 표시되면 저장(S) 버튼을 클릭하고 저장합니다.\nOracle SQL Developer 접속 Oracle 접속의 demo adw을 더블 클릭하고 다음과 같이 패스워드를 입력하고 접속을 시도합니다.\n접속이 이뤄지면, 다음과 같이 SQL을 입력하고 쿼리를 수행할 수 있습니다.\n"
},
{
	"uri": "/oci_docs/99_oci_sites/useful_sites_for_oci/cloudharmony/",
	"title": "CloudHarmondy: 네트웍 테스트",
	"tags": [],
	"description": "",
	"content": "클라우드 서비스를 사용하다 보면 현재 위치에서 사용하는 클라우드 센터까지 네트워크 속도가 얼마나\n\u0026lsquo;CloudHarmony 서비스(https://cloudharmony.com)   \u0026rsquo;는 클라우드 서비스이 네트워크 속도 테스트 서비스를 제공합니다. 사용자 브라우저에서 지정한 클라우드 데이터센터까지 지정한 서비스의 업 링크, 다운로드 링크 속도를 측정할 수 있습니다.\nCloudHarmony 서비스는 사용자 브라우저에서 지정한 클러우드 데이터센터까지 구간 속도를 측정합니다. CloudHarmony 서비스 결과는 사용자가 사용하는 컴퓨터와 네트워크 상태에 영향을 받습니다. 아래 그림은 핸드폰 테더링을 연결한 노트북에서 측정한 결과입니다.\n 다음 그림은 CloudHarmony 서비스   에서 Oracle Cloud Infrastructure의 31개 서비스 테스트를 진행한 결과입니다.\n아래 그림과 같이 CloudHarmony 서비스는 클라우드 프로바이더 데이터 센터와 서비스 유형을 선택할 수 있습니다. 또한 다음과 같은 속성을 지정할 수 있습니다.\n Uplink downlonk Latency DNS Protocol  위 설정을 하고 네트워크 속도를 측정하면 다음과 같은 결과가 출력됩니다.\n"
},
{
	"uri": "/oci_docs/10_quickstart/first_sign_in_oci/",
	"title": "Free Tier 계정 첫 번째 로그인",
	"tags": [],
	"description": "",
	"content": " 이번 문서는 오라클 클라우드 Free Tier 계정이 생성된 상황을 전제로 합니다. 만약에 현재 오라클 클라우드 계정이 없는 상태라면, 다음 문서를 참조하여 오라클 클라우드 계정을 만들고 진행하시기 바랍니다.\n OCI FREE TIER 계정 등록  이 문서에는 다음과 같은 내용을 다룹니다.\n OCI Console에 로그인하기 OCI Console 언어 설정 현재 사용 중인 OCI 사용자 정보 확인 현재 사용 중인 Oracle Cloud 계정의 홈 리전(Home Region) 확인  이번 문서는 다음과 같은 목차로 구성됩니다.\n 1. OCI 콘솔(Console) 로그인 2. OCI 콘솔 언어 설정 3. 현재 사용 중인 OCI 사용자 정보 확인 4. OCI 홈 리전 확인    1. OCI 콘솔(Console) 로그인 OCI 콘솔 로그인 방법을 소개합니다. OCI 콘솔 로그인을 위해서는 사용할 다음과 같은 정보가 필요합니다.\n 오라클 클라우드 계정(Account) 사용자 이름 비밀번호  OCI 로그인에 필요한 정보는 OCI FREE TIER 계정 등록에서 다음과 같이 설정되었습니다.\nOCI 콘솔 로그인을 위해서는 www.oracle.com   에서 다음과 같은 패스로 이동합니다.\n View Account  Sign-in to Cloud  Oracle Cloud Account에 클라우드 계정명(meetup101)을 입력합니다. 그리고 \u0026ldquo;Next\u0026rdquo; 버튼을 클릭합니다.\n다음 페이지에서 사용자 명과 비밀번호에 앞에서 등록한 Email과 패스워드를 입력합니다. 그리고 \u0026ldquo;사인인(Sign-in)\u0026rdquo; 버튼을 클릭합니다.\n정상적으로 로그인 정보가 인증되면 다음과 같이 OCI 콘솔로 이동합니다.\n2. OCI 콘솔 언어 설정 OCI 콘솔은 30개 언어를 지원합니다. OCI 콘솔의 지구본 아이콘을 클릭하여고 원하는 언어를 선택할 수 있습니다.\n3. 현재 사용 중인 OCI 사용자 정보 확인 2020년 현재 오라클 클라우드의 공식 브랜드 명은 OCI(Oracle Cloud Infrastructure)입니다. 오라클 클라우드는 처음에 OPC(Oracle Public Cloud)라는 브랜드 명으로 시작했습니다. 오라클 클라우드 브랜드 명을 OPC로 사용하던 시기에 클라우드 인프라스트럭처 서비스는 두 가지로 제공되었습니다.\n처음에는 제공된 오라클 클라우드 인프라스트럭처 서비스는 Oracle Computing Cloud Service였습니다. 그리고 2세대 클라우드 기술로 OCI(Oracle Cloud Infrastructure)를 개발한 이후에 오라클 클라우드 인프라스트럭처 서비스는 OCI로 변경되었습니다. 그리고 2018년에 오라클 클래우드 브랜드 명을 OPC에서 OCI로 변경했습니다.\n따라서 OCI라는 이름이 때로은 Oracle Cloud의 브랜드 명으로 사용되기도 하고 때로는 Oracle Cloud의 인프라스트럭처 서비스명으로 사용되기도 합니다. 이 문서에서는 OCI는 Oracle Cloud의 인프라스트럭처 서비스명을 의미합니다.\n OCI 콘솔 위 오른쪽 메뉴에서 사용자 아이콘을 클릭하면 다음 그림과 같이 사용자 프로파일이 출력됩니다. 사용자 프로파일로부터 다음 그림과 같은 정보를 확인할 수 있습니다.\n 사용자 ID: oracleidentitycloudservice/oracle.testa1@gmail.com 테넌시: meetup101  위 그림에서 사용자 ID(oracleidentitycloudservice/oracle.testa1@gmail.com)는 oracle cloud의 IDCS(IDentty Cloud Service)를 통해서 만들어지고 OCI에 Fedaration된 사용자 ID입니다. 여기서 Federation이란 통합된다는 의미입니다. 즉 IDCS에서 만들어진 사용자 ID가 OCI의 계정 관리 기능인 IAM에 적용된다는 의미입니다. 오라클 클라우드 사용자 ID 관리 방식에 대해서는 별도 문서로 정리하겠습니다. Oracle Cloud 계정 생성 과정에서 IDCS(IDentty Cloud Service)가 만든 사용자 ID는 다음과 같은 형식으로 OCI에 Fedaration됩니다.\n oracleidentitycloudservice/\u0026lt;등록 email\u0026gt;  Oracle Cloud 계정 생성 과정에서 IDCS(IDentty Cloud Service)가 만든 사용자 ID는 Oracle Cloud 계정이 사용하는 모든 오라클 클라우드 서비스에 대하여 관리자 권한을 갖습니다.\n사용자 프로파일에서는 테넌시 명이 출력됩니다. 오라클 클라우드 계정명(Account)과 Tenancy(테넌시)는 같은 의미로 사용됩니다. 위 메뉴에서 사용자 ID를 클릭하면 사용자 ID 상세 페이지로 이동합니다.\n4. OCI 홈 리전 확인 OCI 콘솔 위 오른쪽 메뉴에서 현재 오라클 클라우드 계정(Tenancy)이 사용 중인 리전을 확인할 수 있습니다. 현재 사용 중인 리전을 클릭하면, Oracle Cloud 계정에 설정된 홈 리전 정보가 출력됩니다. OCI 홈 리전은 OCI Free Tier 계정을 생성할 때 설정한 정보입니다. Oracle Cloud 계정이 사용하는 홈 리전은 변경할 수 없습니다.\n그리고 홈 리전 아래 \u0026ldquo;영역 관리(Region managment)\u0026ldquo;메뉴를 클릭하면 아래와 같은 리전 관리 페이지로 이동합니다. 리전 관리 페이지에서 새로운 리전을 구독하고 해당 리전으로 이동할 수 있습니다. OCI Free Tier 계정은 홈 리전만을 사용하는 제약이 있습니다. 홈 리전 이외의 리전을 구독하고 이동하는 것을 제한하고 있습니다. 이 제한을 풀고자 한다면, 오라클 클라우드에 SR(Service Request)을 요청해야 합니다.\n"
},
{
	"uri": "/oci_docs/80_oci_tools/oci_cli/",
	"title": "OCI CLI (Command Line Interface)",
	"tags": [],
	"description": "OCI CLI 툴을 소개합니다.",
	"content": "OCI CLI는 OCI(Oracle Cloud Infrastructure)에서 주요 인프라 관리 기능을 수행하는 CLI(Command Line Interface) 툴입니다. OCI CLI를 이용하여 OCI Console과 같은 기능을 수행할 수 있습니다. OCI CLI를 스크립트와 함께 사용할 경우 OCI 인프라 관리 기능을 자동화하고 편리한 운영 환경을 구성할 수 있습니다. OCI를 더 효율적으로 사용하기 위해서 Command Line Interface(이하 CLI) 사용이 필수입니다.\nOCI REST API를 랩핑하는 개발 언어별 OCI SDK를 오라클 github 레파지토리   에서 오픈소스 형태로 개발하고 있습니다. OCI SDK가 지원하는 언어는 Python, Go, Java와 Ruby입니다. oci cli는 oracle/oci-python-sdk   프로젝트를 기반으로 만들어 졌습니다.\nOCI CLI 설치 방법과 설정 방법을 다음과 같은 순서로 소개합니다.\n [OCI CLI 설치] Window 10 [OCI CLI 설치] Linux/Mac OS [OCI CLI 설치] Linux/Mac OS에서 Docker 이용 [OCI CLI 설치] Linux/Mac OS에서 소스 설치 OCI CLI 설정   OCI CLI는 Python 3.5 버전 이상을 지원합니다. OCI CLI 설치 스크립트는 현재 컴퓨터에 OCI CLI가 지원하는 Python을 확인합니다. 설치 대상 컴퓨터에 OCI CLI 지원 Python 버전이 없으면 Python을 직접 설치합니다. 설치 스크립트가 설치하는 Python 버전을 지정할 수는 없습니다. 따라서 OCI CLI를 설치하기 전에 Python 3.5 버전 이상을 미리 설치하는 것을 추천합니다.   "
},
{
	"uri": "/oci_docs/30_core_infrastructure/",
	"title": "OCI Core Infastructure Service",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/oci_docs/30_core_infrastructure/object_storage/",
	"title": "Object Storage",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/oci_docs/30_core_infrastructure/object_storage/management/bucket/",
	"title": "Object Storage Bucket 관리",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/oci_docs/30_core_infrastructure/object_storage/management/",
	"title": "Object Storage 관리",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/oci_docs/50.database_service/streaming/pricing/",
	"title": "Streaming 서비스 가격 모델",
	"tags": [],
	"description": "",
	"content": " OCI Streaming 서비스의 가격 모델 원친은 PAYG(Pay-as-You-Go, 사용 기준 과금 모델)입니다. Streaming 서비스에 대한 선불 금액이나 최소 비용은 없습니다. 오로지 자원을 사용한 만큼 비용으로 계산됩니다.\nGET/PUT request price (GigaBytes of data transferred) Please refer to the pricing guide for actual pricing of OCI Streaming.\nLet\u0026rsquo;s consider a scenario where a data producer puts 500 records per second in aggregate and each record is 2kB. The customer wants to egress/retrieve data at a rate twice that of ingress. Also the customer wants to store this data for 7 days.\nPrice calculation/day (just as an example)\nEach record size = 4kB (rounded to 4kB for any record less than 4kB)\nIn this scenario, total amount of data produced per day = 500 * 4 * 24 * 60 * 60 kB = 172.8 GB Total amount of data retrieved = Twice that of Produce = 2*172.8 GB = 345.6 GB PUT Request price/day = $172.8 * $xx= $A GET Request price/day = $345.6 * $xx = $B Data storage cost = $172.8*247$yy = $C Total bill/day = $(A + B + C) Optional:\nExtended data retention is an optional cost determined by the amount of additional days of retention beyond the default 24-hour retention (GigaBytes of storage per hour)\n참고 문서  https://www.oracle.com/kr/big-data/streaming/faq.html  "
},
{
	"uri": "/oci_docs/80_oci_tools/oci_cli/manual_installation/",
	"title": "[OCI CLI 설치] 메뉴얼 설치",
	"tags": [],
	"description": "",
	"content": " 이 문서는 윈도우, 리눅스 계열 OS와 Mac OS에서 OCI CLI를 PyPI(Python Package Index)와 Github OCI CLI 소스로 설치하하는 과정을 소개합니다. 다음과 같은 목차로 구성됩니다.\n 운영 체제별 사전 준비 항목  Window 준비 사항 Oracle Linux 7.X 준비 사항 Oracle Linux 6 준비 사항 CentOS 6 \u0026amp; 7 준비 사항 Ubuntu 16.04  OCI CLI 메뉴얼 설치  Github 릴리즈 파일를 이용한 설치 PyPI를 이용한 설치     운영 체제별 사전 준비 항목 운영 체제 별로 다음 항목을 미치 처리합니다. 운영체제 별로 기술한 명령을 모두 실행하여 사전 준비를 합니다.\nWindow 준비 사항 Python 3.5 패키지를 다운로드하고 설치합니다.\nOracle Linux 7.X 준비 사항 sudo yum install gcc libffi-devel python-devel openssl-devel sudo easy_install pip  Oracle Linux 6 준비 사항 sudo yum install gcc libffi-devel python-devel openssl-devel sudo easy_install pip curl -O https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz tar -xvzf Python-3.6.0.tgz cd Python-3.6.0 ./configure make sudo make install  CentOS 6 \u0026amp; 7 준비 사항 sudo yum install gcc libffi-devel python-devel openssl-devel sudo easy_install pip  Ubuntu 16.04 sudo apt-get update sudo apt-get install build-essential libssl-dev libffi-dev python-dev sudo apt-get install python3-pippip3 install --upgrade pip  OCI CLI 메뉴얼 설치 OCI CLI 메뉴얼 설치는 두 가지 방법으로 진행할 수 있습니다.\nGithub 릴리즈 파일를 이용한 설치 Github의 OCI-CLI 레파지토리에서 제공하는 릴리즈 파일을 이용하여 설치를 진행할 수 있습니다. OCI-CLI 레파지토리의 릴리즈 페이지   에서 최신 버전의 Zip 파일을 다운로드 받습ㄴ니다.\nzip 파일의 압축을 풉니다.\n[opc@demo02 ~]$ unzip ./oci-cli-2.9.3.zip //로그 생략 [opc@demo02 ~]$ ls oci-cli oci-cli-2.9.3.zip [opc@demo02 ~]$ cd oci-cli [opc@demo02 oci-cli]$ ls CHANGELOG.rst LICENSE.txt oci_cli-2.9.3-py2.py3-none-any.whl oci_cli_docs [opc@demo02 oci-cli]$  다음 명령을 이용하여 whl 파일로 설치를 진행합니다.\npip install --user oci_cli-*-py2.py3-none-any.whl  이 명령의 전체 설치 로그는 다음과 같습니다.\n[opc@demo02 oci-cli]$ pip install --user oci_cli-*-py2.py3-none-any.whl DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support Defaulting to user installation because normal site-packages is not writeable Processing ./oci_cli-2.9.3-py2.py3-none-any.whl Requirement already satisfied: cryptography==2.8 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli==2.9.3) (2.8) Requirement already satisfied: certifi in /home/opc/.local/lib/python2.7/site-packages (from oci-cli==2.9.3) (2019.11.28) Requirement already satisfied: pyOpenSSL==18.0.0 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli==2.9.3) (18.0.0) Requirement already satisfied: arrow==0.10.0 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli==2.9.3) (0.10.0) Requirement already satisfied: retrying==1.3.3 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli==2.9.3) (1.3.3) Requirement already satisfied: oci==2.10.5 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli==2.9.3) (2.10.5) Requirement already satisfied: pytz==2016.10 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli==2.9.3) (2016.10) Requirement already satisfied: idna\u0026lt;2.7,\u0026gt;=2.5 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli==2.9.3) (2.6) Requirement already satisfied: PyYAML==5.1.2 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli==2.9.3) (5.1.2) Requirement already satisfied: terminaltables==3.1.0 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli==2.9.3) (3.1.0) Requirement already satisfied: six==1.11.0 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli==2.9.3) (1.11.0) Requirement already satisfied: python-dateutil==2.7.3 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli==2.9.3) (2.7.3) Requirement already satisfied: configparser==3.5.0 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli==2.9.3) (3.5.0) Requirement already satisfied: jmespath==0.9.3 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli==2.9.3) (0.9.3) Requirement already satisfied: click==6.7 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli==2.9.3) (6.7) Requirement already satisfied: cffi!=1.11.3,\u0026gt;=1.8 in /home/opc/.local/lib/python2.7/site-packages (from cryptography==2.8-\u0026gt;oci-cli==2.9.3) (1.14.0) Requirement already satisfied: ipaddress; python_version \u0026lt; \u0026quot;3\u0026quot; in /usr/lib/python2.7/site-packages (from cryptography==2.8-\u0026gt;oci-cli==2.9.3) (1.0.16) Requirement already satisfied: enum34; python_version \u0026lt; \u0026quot;3\u0026quot; in /usr/lib/python2.7/site-packages (from cryptography==2.8-\u0026gt;oci-cli==2.9.3) (1.0.4) Requirement already satisfied: pycparser in /usr/lib/python2.7/site-packages (from cffi!=1.11.3,\u0026gt;=1.8-\u0026gt;cryptography==2.8-\u0026gt;oci-cli==2.9.3) (2.14) Installing collected packages: oci-cli Successfully installed oci-cli-2.9.3 [opc@demo02 oci-cli]$ [opc@demo02 oci-cli]$ oci -v 2.9.3 [opc@demo02 oci-cli]$  PyPI를 이용한 설치 다음 명령을 이용하여 OCI CLI를 설치합니다.\npip install --user oci-cli  이 명령의 전체 설치 로그는 다음과 같습니다.\n[opc@demo02 oci-cli]$ pip install --user oci-cli DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support Collecting oci-cli Using cached oci_cli-2.9.3-py2.py3-none-any.whl (7.4 MB) Requirement already satisfied: cryptography==2.8 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli) (2.8) Requirement already satisfied: certifi in /home/opc/.local/lib/python2.7/site-packages (from oci-cli) (2019.11.28) Requirement already satisfied: pytz==2016.10 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli) (2016.10) Requirement already satisfied: PyYAML==5.1.2 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli) (5.1.2) Requirement already satisfied: arrow==0.10.0 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli) (0.10.0) Requirement already satisfied: retrying==1.3.3 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli) (1.3.3) Requirement already satisfied: oci==2.10.5 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli) (2.10.5) Requirement already satisfied: pyOpenSSL==18.0.0 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli) (18.0.0) Requirement already satisfied: idna\u0026lt;2.7,\u0026gt;=2.5 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli) (2.6) Requirement already satisfied: terminaltables==3.1.0 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli) (3.1.0) Requirement already satisfied: six==1.11.0 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli) (1.11.0) Requirement already satisfied: python-dateutil==2.7.3 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli) (2.7.3) Requirement already satisfied: configparser==3.5.0 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli) (3.5.0) Requirement already satisfied: jmespath==0.9.3 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli) (0.9.3) Requirement already satisfied: click==6.7 in /home/opc/.local/lib/python2.7/site-packages (from oci-cli) (6.7) Requirement already satisfied: cffi!=1.11.3,\u0026gt;=1.8 in /home/opc/.local/lib/python2.7/site-packages (from cryptography==2.8-\u0026gt;oci-cli) (1.14.0) Requirement already satisfied: ipaddress; python_version \u0026lt; \u0026quot;3\u0026quot; in /usr/lib/python2.7/site-packages (from cryptography==2.8-\u0026gt;oci-cli) (1.0.16) Requirement already satisfied: enum34; python_version \u0026lt; \u0026quot;3\u0026quot; in /usr/lib/python2.7/site-packages (from cryptography==2.8-\u0026gt;oci-cli) (1.0.4) Requirement already satisfied: pycparser in /usr/lib/python2.7/site-packages (from cffi!=1.11.3,\u0026gt;=1.8-\u0026gt;cryptography==2.8-\u0026gt;oci-cli) (2.14) Installing collected packages: oci-cli Successfully installed oci-cli-2.9.3 [opc@demo02 oci-cli]$ oci -v 2.9.3 [opc@demo02 oci-cli]$ which oci ~/.local/bin/oci [opc@demo02 oci-cli]$  "
},
{
	"uri": "/oci_docs/98_misc_tips/tools/",
	"title": "개발 툴 관련 Tip",
	"tags": [],
	"description": "OCI 지원 도구 관련 여러 팁을 정리합니다. ",
	"content": "Oracle Cloud와 함께 사용되는 여러 툴과 관련된 다양한 주제를 정리합니다.\n"
},
{
	"uri": "/oci_docs/50.database_service/adb/adw/hands-on/adw_tools/sql_devleloper_web/",
	"title": "SQL Developer Web 접속",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)에서 프로비저닝한 ADW 인스턴스를 SQL Developer에 설정하는 방법을 정리합니다.",
	"content": " OCI ADW 인스턴스에 접근하여 데이터베이스 작업을 진행할 때 일반적으로 사용자 컴퓨터에 Oracle SQL Developer를 설치하고 ADW 인스턴스에 접속하여 작업을 진행합니다. OCI ADW는 Oracle SQL Developer의 웹 버전인 SQL Develoepr Web을 인스턴스 툴로 제공합니다. 별도 설치와 설정이 필요 없고 ADW 인스턴스 사용자 계정(DB User)로 로그인하고 바로 설정할 수 있다는 것이 강점입니다. 이 문서에서는 SQL Develoepr Web을 접근법과 주요 기능을 살펴보겠습니다.\n이번 문서는 오라클 클라우드 Free Tier 계정에 ADW 인스턴스를 만들었다는 전제로 진행합니다. 현재 ADW 인스턴스가 없다면, 다음 문서를 참조하여 ADW 인스턴스(DemoADW)를 만드시기 바랍니다.\n ADW 인스턴스 생성     이번 문서에서는 OCI ADW 인스턴스를 제공하는 SQL Developer Web으로 ADW 인스턴스에 연결하는 절차를 소개합니다. 다음과 같은 목차로 진행 됩니다.\n SQL Developer Web  SQL Developer Web 접근  OCI Console의 ADW 인스턴스 상세 페이지 접근 OCI CLI 제공 URL을 이용한 접근  SQL Developer Web 주요 기능  SQL문을 실행 ERD 기반 모델링 데이터 로딩    \n SQL Developer Web SQL Develeloper Web은 Oracle SQL Developer의 웹 버전 서비스입니다. SQL Developer Web을 사용하면 Oracle SQL Developer의 핵심 기능을 편리하게 사용할 수 있습니다.\nSQL Developer Web 접근 SQL Developer Web을 접근하는 두 가지 방법이 있습니다.\n OCI Console의 ADW 인스턴스 상세 페이지로 부터 접근 OCI CLI가 제공하는 SQL Developer Web URL을 이용한 접근  OCI Console의 ADW 인스턴스 상세 페이지 접근 OCI ADW 상세 페이지에서 다음 이미지와 같이 Tools 텝을 선택하면 3개 개발 지원 기능이 출력됩니다.\n이 중에서 Open SQL Developer Web 버튼을 클릭하면 SQL Developer Web 로그인 페이지가 출력됩니다\nSQL Developer Web 로그인 페이지에서 ADW 인스턴스 계정의 인증 정보를 입력하고 로그인합니다.\nOCI CLI 제공 URL을 이용한 접근 OCI CLI에서 제공하는 SQL Developer Web 접근 URL을 사용할 수 있습니다.\nOCI CLI가 현재 설치되거나 구성되지 않았다면 다음 문서를 참조하여 준비하시기 바랍니다.\n [OCI CLI 설치] Linux \u0026amp; Mac OS    [OCI CLI 설치] Window 10    OCI CLI 설정     OCI CLI를 이용하면 다음과 같이 SQL Developer Web 접근 URL을 조회할 수 있습니다.\nSQL Developer Web 접근 URL을 조회하는 명령은 다음과 같습니다.\n$ ## 환경변수 설정 $ export ADW_OCID=ocid1.autonomousdatabase.oc1.phx.abyhqljtzqexa2wanbyiojvxvhqd34x7n7botgonkf73iapukd7vydg6g7tq $ ## 환경변수 사용: $ADW_OCID $ oci db autonomous-database get --autonomous-database-id $ADW_OCID | grep sql-dev-web-url \u0026quot;sql-dev-web-url\u0026quot;: \u0026quot;https://EP2RZOH7SURH5CH-DEMOADW.adb.us-phoenix-1.oraclecloudapps.com/ords/admin/_sdw/?nav=worksheet\u0026quot; $  \u0026ldquo;sql-dev-web-url\u0026ldquo;이 제공하는 URL을 사용하여 SQL Developer Web을 접근할 수 있습니다. SQL Developer Web 로그인 페이지에서 ADW 인스턴스 계정의 인증 정보를 입력하고 로그인합니다.\nSQL Developer Web 주요 기능 앞에서 SQL Developer Web에 로그인하면 다음과 같은 화면이 출력됩니다.\nQL Developer Web 주요 기능은 다음과 같습니다.\n SQL문을 실행 SQL 결과를 학인 Query 실행 계획 분석 스키마를 관리 기능 ERD 기반 모델링 기능  SQL문을 실행 SQL 입력 및 실행 결과, 실행 계획을 다음과 같이 확인할 수 있습니다.\nERD 기반 모델링 ADW 인스턴스가 관리하는 테이블/뷰를 다음과 이미지와 같이 ERD 모델을 제공합니다. 이 모델을 사용하여 데이터 모델의 특징과 상태를 효과적으로 확인할 수 있습니다.\n데이터 로딩 로컬 컴퓨터에 있는 파일을 ADW 인스턴스에 로딩하는 기능을 제공합니다. CSV, XLS, XLSX, TSV, TXT 파일을 지원합니다. 데이터 로딩에 대해서는 별도 문서로 다루겠습니다.\n"
},
{
	"uri": "/oci_docs/50.database_service/adb/adw/hands-on/basic_management/reset_password_4_admin/",
	"title": "ADW 관리자 비밀번호 재설정",
	"tags": [],
	"description": "ADW 인스턴스에서 관리자 비밀번호 변경 방법을 소개합니다.",
	"content": " ADW 인스턴스를 관리하기 위해서 사용하는 ADW 인스턴스 관리자 계정의 패스워드를 재설정하는 과정을 소개합니다. ADW 인스턴스의 기본 관리자 예정은 admin입니다. admin 계정의 패스워드 변경 절차를 정리합니다.\n이 문서는 오라클 클라우드 Free Tier 계정을 생성하고 로그인한 상황을 전제로 진행합니다. 현재 오라클 클라우드 계정이 없는 상태라면, 다음 문서를 참조하여 오라클 클라우드 계정을 만들고 OCI 콘솔에 로그인하시기 바랍니다. 마지막으로 ADW 인스턴스가 프로비저닝된 상태라고 가정합니다. ADW 인스턴스가 준비돼있지 않다면 다음 문서를 참조하시기 바랍니다.\n OCI FREE TIER 계정 등록 Free Tier 계정 로그인 ADW 인스턴스 생성  ADW 인스턴스 관리 페이지로 이동 admin 비밀번호를 변경하기 위해서 대상 ADW 인스턴스의 상세 페이지로 이동합니다. 그리고 ADW 상세 페이지에서 \u0026ldquo;Service Console\u0026ldquo; 버튼을 클릭합니다. Service Console\u0026ldquo; 버튼을 클릭하면 ADW 인스턴스의 관리 페이지로 이동합니다. 여기서 왼쪽 메뉴의 관리 링크를 클릭합니다.\nADW 인스턴스 관리 비밀번호 재설정 AD@ 인스턴스 기본 관리자 계정은 admin이며, ADW 데이터베이스 사용자입니다. ADW 인스턴스 관리자 계정 패스워드 재설정은 결국 ADW 데이터베이스 사용자 비밀번호를 변경하는 것 입니다.\nADW 인스터스 관리 페이지에서 관리 링크를 클릭하고 관리자 비밀번호 설정 영역을 클릭합니다.\n관리자 비밀번호 설정 영역을 클릭하면 패스워드 변경 창이 오픈됩니다. 변경할 패스워드를 2번 입력하고 확인버튼을 클릭합니다.\n관리자 비밀번호가 정상적으로 변경되면 다음과 같은 수정 성공 알림이 출력됩니다.\n"
},
{
	"uri": "/oci_docs/30_core_infrastructure/file_storage/",
	"title": "File Storage",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/oci_docs/80_oci_tools/cloud_shell/",
	"title": "OCI Cloud Shell",
	"tags": [],
	"description": "OCI REST API 인터페이스를 사용하는 방법을 소개합니다.",
	"content": "2020년 2월에 Oracle Cloud는 다음과 같은 OCI Cloud Shell을 공개했습니다. OCI Cloud Shell은 OCI Console(OCI 웹 사이트)에서 웹 브라우저로 접근하는 VM 인스턴스 터니널입니다. Oracle Cloud는 Oracle Cloud 사용자를 위하여 다양한 OCI 툴 설치와 사용자에 맞는 설정까지 완료되어 바로 사용 가능한 VM을 무상으로 제공합니다. 사용자 편의성을 높이는 이 VM을 접근하는 웹 브라우저 기반 터미널이 Cloud Shell입니다.\nOCI Cloud Shell을 이용하여 OCI 도구를 편리하게 사용할 수 있습니다.\n"
},
{
	"uri": "/oci_docs/99_oci_sites/useful_sites_for_oci/oci_archi_diagram/",
	"title": "OCI 비쥬얼 다이어그램",
	"tags": [],
	"description": "",
	"content": "\u0026lsquo;https://online.visual-paradigm.com/   \u0026rsquo;는 다양한 다이아그램을 그리고 시각화하는 온라인 서비스입니다. \u0026ldquo;visual-paradigm.com\u0026ldquo;에서는 OCI 다이아그램으로 8개 템플릿을 지원합니다.\n다음과 같이 편집 기능을 제공합니다.\n\u0026ldquo;visual-paradigm.com\u0026ldquo;는 유료 서비스이지만 Free 라이센스로 사용할 수 있습니다.\n"
},
{
	"uri": "/oci_docs/80_oci_tools/oci_cli/installation_on_linux_and_mac_with_docker/",
	"title": "[OCI CLI 설치] Linux/Mac OS (Docker)",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/oci_docs/50.database_service/adb/adw/hands-on/adw_tools/apex/",
	"title": "APEX 서비스",
	"tags": [],
	"description": "APEX는 Oracle Database에서 제공하는 Low-Code 엔터프라이즈 애플리케이션 개발 툴입니다. ADW에서 제고하는 APEX 개발 환경 접속 방법을 정리합니다. ",
	"content": " Oracle Application Express(APEX)는 어디든 배치할 수 있는 안전하고 확장성을 갖춘 엔터프라이즈 앱을 구축 로우코드 개발 플랫폼입니다. ADW는 자체 서비스로 APEX를 제공합니다. 이 문서에서는 APEX 개발 환경 접속 방법을 정리합니다.\n이번 문서는 오라클 클라우드 Free Tier 계정에 ADW 인스턴스를 만들었다는 전제로 진행합니다. 현재 ADW 인스턴스가 없다면, 다음 문서를 참조하여 ADW 인스턴스(DemoADW)를 만드시기 바랍니다.\n ADW 인스턴스 생성     이번 문서에서는 ADW에서 제공하는 APEX 서비스에 대하여 접속 방법과 간단한 예제 애플리케이션 개발 절차를 소개합니다. 다음과 같은 목차로 진행 됩니다.\n ADW 제공 서비스: APEX  APEX 서비스 접근 Workspace 생성 Workspace 로그인  샘플 데이터 \u0026amp; 애플리케이션 생성 샘플 애플리케이션 실행    \n ADW 제공 서비스: APEX ADW 인스턴스 상세 페이지에서 Tools 텝을 통해서 Oracle Application Express를 접근할 수 있습니다.\nAPEX 서비스 접근 ADW 인스턴스 상세 페이지에서 Tools 텝을 통해서 Oracle Application Express를 접근할 수 있습니다. Oracle APEX 버튼을 클릭하면 Oracle APEX 서비스 페이지가 오픈됩니다.\n처음에 Oracle APEX 버튼을 클릭하면 ADW 인스턴스의 admin 계정 비밀번호 입력화면이 출력됩니다. 비밀 번호를 입력하고 \u0026ldquo;Sign in to Administration\u0026rdquo; 버튼을 클릭하면 Workdspace 생성 페이지로 이동합니다.\nWorkspace 생성 Create Workspace 버튼을 클릭하고 다음 페이지로 이동합니다. Workspace를 생성하기 위해서 다음 3개자 항목의 설정 값을 입력합니다.\n   설정항목 설정값 설명     Database User APEXUSER 새로운 사용자 등록시 Database User가 생성됨   Password Welcome123456 비밀번호 설정   Workspace Name APEXUSER Database User와 같은 값 설정    설정값을 입력하고 Create Workspace 버튼을 클릭합니다.\n오른쪽 위의 사용자 프로파일을 클릭하고 로그아웃합니다.\n로그라웃 확인 페이지가 출력됩니다. Return to Sign in Page 버튼을 클릭합니다.\nWorkspace 로그인 Workspace을 생성할 때 설정했던 값을 입력하고 로그인합니다.\n샘플 데이터 \u0026amp; 애플리케이션 생성 Workspace 메인 페이지에서 SQL Workspace를 클릭합니다.\nSQL Workspace에서 Data Workshop을 클릭합니다.\nLoad Data 창에서 Copy and Paste를 클릭하고 Classic Departments and Employees를 선택하고 Next 버튼을 클릭합니다.\n테이블이 저장될 Database User와 테이블 명을 입력하고 Load Data 버튼을 클릭합니다.\nLoad Data 버튼을 클릭합니다.\n샘플 데이터 로딩 마지막 단계로 애플리케이션 생성을 요청합니다.\n예제 애플리케이션 이름을 Employee로 설정하고 Create Application 버튼을 클릭합니다.\n샘플 애플리케이션 실행 이제 Employee 테이블과 Dept 테이블로 예제 애플리케이션이 만들어졌습니다. Run Application을 클릭합니다.\nRun Application을 클릭하면 Employee 애플리케이션의 로그인 창이 열립니다. 기본 로그인 인증을 위해서 Workspace를 만들때 등록한 Database User 정보를 입력합니다.\nEmployee 애플리케이션은 Employee 테이블 기본 검색과 리포트 페이비가 만들어져 있습니다.\nEmployee Search 페이지는 다음과 같은 검색 기능을 제공합니다.\nEmployee Report 페이지는 다음과 같은 데이터 출력 기능을 제공합니다.\nEmployee Report 페이지는 레코드 별로 데이터 수정과 삭제 기능을 제공합니다.\n"
},
{
	"uri": "/oci_docs/80_oci_tools/oci_cli/config_of_ocicli/",
	"title": "OCI CLI 설정",
	"tags": [],
	"description": "",
	"content": " 이번 문서는 오라클 클라우드 Free Tier 계정을 생성하고 로그인한 상황을 전제로 합니다. 만약에 현재 오라클 클라우드 계정이 없는 상태라면, 다음 문서를 참조하여 오라클 클라우드 계정을 만들고 OCI 콘솔에 로그인하시기 바랍니다. 마지막으로 OCI CLI를 설치해야 합니다.\n OCI FREE TIER 계정 등록 Free Tier 계정 로그인 OCI CLI 설치  OCI CLI 설치: Window 10 OCI CLI 설치: Linux \u0026amp; Mac OS OCI CLI 설치: 메뉴얼 설치   설치된 OCI CLI가 OCI Tenancy에 접속하고 정상적으로 동작하기 위해서는 OCI CLI 사용자 설정을 해야 합니다. OCI CLI 사용자 설정에는 다음과 같은 정보가 필요합니다.\n User OCID Tenancy OCID Region  이번 문서에서는 OCI CLI 사용자 설정 정보를 확인하고 OCI CLI에 사용자 정보를 설정하는 과정을 소개합니다. 다음과 같은 목차로 진행됩니다.\n OCI CLI 설정 정보 수집  User OCID Tenancy 명과 Tenancy OCID Region ID  OCI CLI 기본 설정 및 확인  기본 설정 RSA 공개키 등록 OCI CLI 설정 테스트  OCI CLI 추가 프로파일 등록  RSA 공개키 등록 OCI CLI 설정 테스트   \n OCI CLI 설정 정보 수집 User OCID User OCID는 OCI Console의 OCI User 상세 페이지에서 확인할 수 있습니다. 현재 로그인 사용자의 OCI User 상세 페이지는 다음 메뉴 패스로 이동할 수 있습니다.\n 오른쪽 위 OCI User Icon  오른쪽 위 OCI User Icon  사용자 ID  (OCI 콘솔 왼쪽 위 햄버그 버튼)  Identity  Users  사용자 목록에서 로그인 ID 클릭   다음 그림과 같이 위 메뉴 패스를 통해서 OCI User 상세 페이지로 이동할 수 있습니다.\nOCI User 상세 페이지에서 다음 그림과 같이 copy 링크를 클릭하여 User OCID를 복사할 수 있습니다.\n위에서 복사한 User OCID는 다음과 같은 패턴을 갖습니다.\nocid1.user.oc1..aaaaaaaaqddvfo3p4tprztewinniya3zebqdqgpbnk4cjspyzcluzi2yndna  Tenancy 명과 Tenancy OCID Tenancy 명과 Tenancy OCID는 OCI Console의 Tenancy 상세 페이지에서 확인할 수 있습니다. Tenancy 상세 페이지는 다음 메뉴 패스로 이동할 수 있습니다.\n 오른쪽 위 OCI User Icon  오른쪽 위 OCI User Icon  사용자 ID  (OCI 콘솔 왼쪽 위 햄버그 버튼)  Identity  Users  사용자 목록에서 로그인 ID 클릭   다음 그림과 같이 위 메뉴 패스를 통해서 Tenancy 상세 페이지로 이동할 수 있습니다.\nTenancy 상세 페이지에서 Tenancy 이름을 확인할 수 있고 다음 그림과 같이 copy 링크를 클릭하여 Tenancy OCID를 복사할 수 있습니다.\n위에서 복사한 Tenancy 이름과 Tenancy OCID는 다음과 같은 패턴을 갖습니다.\nTenancy 명: apackrsct01 ocid1.tenancy.oc1..aaaaaaaa6ma7kq3bsiddduzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa  Region ID 사용할 Region 명은 다음 그림과 같이 OCI Console의 오른쪽 위 메뉴에서 확인할 수 있습니다.\n위 그림에서 현재 계정이 사용하는 리전 이름은 Ashburn입니다. Ashburn의 Region ID는 다음 링크 페이지에서 확인할 수 있습니다.\n[taewan.kim/ocidocs] OCI 리전 정보   위 링크에서 Ashburn의 Region ID는 us-ashburn-1인 것을 확인할 수 있습니다.\nOCI CLI 기본 설정 및 확인 앞에서 OCI CLI 설정에 필요한 정보를 확인했습니다. 앞에서 확인한 정보는 다음과 같이 설정표로 나타낼 수 있습니다.\n   항목 항목 값     User OCID ocid1.user.oc1..aaaaaaaaqddvfo3p4tprztewinniya3zebqdqgpbnk4cjspyzcluzi2yndna   Tenancy OCID ocid1.tenancy.oc1..aaaaaaaa6ma7kq3bsiddduzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa   Region ID us-ashburn-1    기본 설정 OCI CLI는 다음 명령으로 환경 설정을 구성할 수 있습니다.\noci setup config  위 명령을 실행하면 몇 가지 입력이 요청됩니다. 각 입력 항목은 다음과 같습니다. 아래 표의 입력 값에서 엔터는 \u0026lsquo;return\u0026rsquo; 키 입력을 의미합니다. 각 질문 항목에 대한 기본 값은 사용하는 OS의 Account에 따라서 달라집니다.\n   입력항목 입력 값 설명     Enter a location for your config 엔터 파일 위치: $HOME/.oci/config   Enter a user OCID 위 설정표의 User OCID 앞에서 조사한 값   Enter a tenancy OCID 위 설정표의 Tenancy OCID 앞에서 조사한 값   Enter a region u위 설정표의 Region ID 앞에서 조사한 값   Do you want to generate a new RSA key pair? (If you decline you will be asked to supply the path to an existing key.) [Y/n] 엔터 RSA 키 쌍 파일 생성   Enter a directory for your keys to be created [/Users/taewan/.oci] 엔터 기본 위치 사용 권장   Enter a name for your key [oci_api_key] 엔터 RSA 키 파일 명   Enter a passphrase for your private key (empty for no passphrase) 엔터 입력값 없음    위 입력값으로 실행한 oci setup config의 전체 실행 로그는 다음과 같습니다.\n$ oci setup config This command provides a walkthrough of creating a valid CLI config file. The following links explain where to find the information required by this script: User OCID and Tenancy OCID: https://docs.cloud.oracle.com/Content/API/Concepts/apisigningkey.htm#Other Region: https://docs.cloud.oracle.com/Content/General/Concepts/regions.htm General config documentation: https://docs.cloud.oracle.com/Content/API/Concepts/sdkconfig.htm Enter a location for your config [/Users/taewan/.oci/config]: Enter a user OCID: ocid1.user.oc1..aaaaaaaaqddvfo3p4tprztenweniyg3zebqgqgpbnk4cjspyzcluzi2yndna Enter a tenancy OCID: ocid1.tenancy.oc1..aaaaaaaa6ma7kq3bsif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa Enter a region (e.g. ap-melbourne-1, ap-mumbai-1, ap-osaka-1, ap-seoul-1, ap-sydney-1, ap-tokyo-1, ca-toronto-1, eu-amsterdam-1, eu-frankfurt-1, eu-zurich-1, me-jeddah-1, sa-saopaulo-1, uk-gov-london-1, uk-london-1, us-ashburn-1, us-gov-ashburn-1, us-gov-chicago-1, us-gov-phoenix-1, us-langley-1, us-luke-1, us-phoenix-1): us-ashburn-1 Do you want to generate a new RSA key pair? (If you decline you will be asked to supply the path to an existing key.) [Y/n]: Enter a directory for your keys to be created [/Users/taewan/.oci]: Enter a name for your key [oci_api_key]: Public key written to: /Users/taewan/.oci/oci_api_key_public.pem Enter a passphrase for your private key (empty for no passphrase): Private key written to: /Users/taewan/.oci/oci_api_key.pem Fingerprint: aa:41:d3:08:3d:f1:61:19:ad:9e:db:bc:2e:de:82:43 Config written to /Users/taewan/.oci/config If you haven't already uploaded your public key through the console, follow the instructions on the page linked below in the section 'How to upload the public key': https://docs.cloud.oracle.com/Content/API/Concepts/apisigningkey.htm#How2 $  위 명령이 실행되면 $HOME/.ocn/config 파일에 다음과 같은 설정이 만들어집니다.\n$ cat $HOME/.oci/config [DEFAULT] user=ocid1.user.oc1..aaaaaaaaqddvfo3p4tprztewinniya3zebqdqgpbnk4cjspyzcluzi2yndna fingerprint=aa:41:d3:08:3d:f1:61:19:ad:9e:db:bc:2e:de:82:43 key_file=/Users/taewan/.oci/oci_api_key.pem tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7kq3bsiddduzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=us-ashburn-1 $  RSA 공개키 등록 $HOME/.oci/config 파일에 default 프로파일이 만들어진 것을 확인할 수 있습니다. 이 default 프로파일에 등록된 RSA 키 파일의 공개키를 OCI User 페이지에 등록합니다. $HOME/.oci/oci_api_key_public.pem 공개키 파일의 내용을 OCI User에 등록합니다.\n $ cat $HOME/.oci/oci_api_key_public.pem -----BEGIN PUBLIC KEY----- MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAp7gmJQu1g0wd1UNHht1g 2NcAwE03Gi10DFHm/VXHOpZe+WH4igKCoCReg5sfX8winihySEgKeJTUrASRMvY8 Z+WkpgAjmP0RVdM7i89jzBy1HDYTWSQouU+R/sWaTmbSpg18RgJF2Fg0znxJOkTD PqPIPxSf2f62m/SLZGz4teuvuUYQ3bXlDjTqio2x0vWXKwWVJqnY3tojNuRHYnbZ JGy55VTQGog4B1jaeE20xghDhx3TXHC1DeOS3lrIvxdQ0NnYhqwdcxv6lhwkACCc XcOjbdjqBARmkS+n/P+eh4wG1MqnGp7QnqymSp6rZaIU0dmdap2oym7yWMmtouPY mQIDAQAB -----END PUBLIC KEY----- $  OCI Console에서 오른쪽 위 사용자 프로파일 패스로 OCI User 사용자 상세 페이지에 이동합니다.\nOCI User 사용자 상세 페이지에서 위 공개키 값을 다음과 같이 등록합니다.\nOCI CLI 설정 테스트 모든 설정이 정상적으로 설정되었다면, 다음 명령은 Tenancy 이름을 출력합니다.\n $ oci os ns get { \u0026quot;data\u0026quot;: \u0026quot;apackrsct01\u0026quot; } $  OCI CLI 추가 프로파일 등록 Default 프로파일을 등록한 후 추가 프로파일을 등록하는 방법을 소개합니다. OCI CLI의 설정 파일인 $HOME/.oci/config에 seoul 프로파일을 등록하는 절차를 등록합니다.\noci setup config  위 명령을 실행하면 몇 가지 입력이 요청됩니다. 각 입력 항목은 다음과 같습니다. 아래 표의 입력 값에서 엔터는 \u0026lsquo;return\u0026rsquo; 키 입력을 의미합니다. 각 질문 항목에 대한 기본 값은 사용하는 OS의 Account에 따라서 달라집니다.\n   입력항목 입력 값 설명     Enter a location for your config [/Users/taewan/.oci/config] 엔터 파일 위치: $HOME/.oci/config   config file: /Users/taewan/.oci/config already exists. Do you want add a profile here? (If no, you will be prompted to overwrite the file) [Y/n] 위 설정표의 User OCID 앞에서 조사한 값   Enter the name of the profile you would like to create seoul 프로파일 이름   Enter a tenancy OCID 위 설정표의 Tenancy OCID 앞에서 조사한 값   Enter a region 위 설정표의 Region ID 앞에서 조사한 값   Do you want to generate a new RSA key pair? (If you decline you will be asked to supply the path to an existing key.) [Y/n] n RSA 키 쌍 생성하지 않음   Enter the location of your private key file $HOME/.oci/oci_api_key.pem 기본 비밀키 파일 위치/이름    위 설정값을 입력한 전체 실행 로그는 다음과 같습니다.\n $ oci setup config This command provides a walkthrough of creating a valid CLI config file. The following links explain where to find the information required by this script: User OCID and Tenancy OCID: https://docs.cloud.oracle.com/Content/API/Concepts/apisigningkey.htm#Other Region: https://docs.cloud.oracle.com/Content/General/Concepts/regions.htm General config documentation: https://docs.cloud.oracle.com/Content/API/Concepts/sdkconfig.htm Enter a location for your config [/Users/taewan/.oci/config]: Config file: /Users/taewan/.oci/config already exists. Do you want add a profile here? (If no, you will be prompted to overwrite the file) [Y/n]: Enter the name of the profile you would like to create: seoul Enter a user OCID: ocid1.user.oc1..aaaaaaaaqddvfo3p4tprztenweniyg3zebqgqgpbnk4cjspyzcluzi2yndna Enter a tenancy OCID: ocid1.tenancy.oc1..aaaaaaaa6ma7kq3bsif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa Enter a region (e.g. ap-melbourne-1, ap-mumbai-1, ap-osaka-1, ap-seoul-1, ap-sydney-1, ap-tokyo-1, ca-toronto-1, eu-amsterdam-1, eu-frankfurt-1, eu-zurich-1, me-jeddah-1, sa-saopaulo-1, uk-gov-london-1, uk-london-1, us-ashburn-1, us-gov-ashburn-1, us-gov-chicago-1, us-gov-phoenix-1, us-langley-1, us-luke-1, us-phoenix-1): ap-seoul-1 Do you want to generate a new RSA key pair? (If you decline you will be asked to supply the path to an existing key.) [Y/n]: n Enter the location of your private key file: /Users/taewan/.oci/oci_api_key.pem Fingerprint: aa:41:d3:08:3d:f1:61:19:ad:9e:db:bc:2e:de:82:43 Config written to /Users/taewan/.oci/config If you haven't already uploaded your public key through the console, follow the instructions on the page linked below in the section 'How to upload the public key': https://docs.cloud.oracle.com/Content/API/Concepts/apisigningkey.htm#How2 $  위 명령을 실행하면 $HOME/.oci/config에 SEOUL 프로파일이 추가된 것을 확인할 수 있습니다.\n $ cat /Users/taewan/.oci/config [DEFAULT] user=ocid1.user.oc1..aaaaaaaaqddvfo3p4tprztenwiniyg3aaaqgqgpbnk4cjspyzcluzi2yndna fingerprint=aa:41:d3:08:3d:f1:61:19:ad:9e:db:bc:2e:de:82:43 key_file=/Users/taewan/.oci/oci_api_key.pem tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7kq3bsif76uzqidv22cajsasbcsgpqmmsgxihlbcemkklrsqa region=us-ashburn-1 [SEOUL] user=ocid1.user.oc1..aaaaaaaaqddvfo3p4tprztenwiniyg3aaaqgqgpbnk4cjspyzcluzi2yndna fingerprint=aa:41:d3:08:3d:f1:61:19:ad:9e:db:bc:2e:de:82:43 key_file=/Users/taewan/.oci/oci_api_key.pem tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7kq3bsif76uzqidv22cajsasbcsgpqmmsgxihlbcemkklrsqa region=ap-seoul-1 $  RSA 공개키 등록 OCI User는 글로벌 객체입니다. 앞에서 디폴트 프로파일을 설정할 때 RSA 공개 키를 OCI User 상세 페이지에 등록했습니다. 새로 등록한 Seoul 프로파일이 디폴트 프로파일에서 사용한 RAS 키를 사용한다면 추가로 RSA 공개키를 등록할 필요가 업습니다.\n새로 등록한 프로파일이 기존에 등록한 RAS 키가 아닌 새로운 RAS 키를 사용한다면 앞에서 등록한 절차에 따라 RAS 공개키를 OCI User 상세 페이지에 등록해야 합니다.\nOCI CLI 설정 테스트 OCI 명령을 실행할 때 \u0026ndash;profile 옵션에 프로파일 이름을 지정할 수 있습니다. 프로파일 이름을 지정하지 않으면 DEFAULT 프로파일이 적용됩니다.\n $ oci os ns get --profile SEOUL { \u0026quot;data\u0026quot;: \u0026quot;apackrsct01\u0026quot; } $ oci os ns get --profile DEFAULT { \u0026quot;data\u0026quot;: \u0026quot;apackrsct01\u0026quot; } $ oci os ns get { \u0026quot;data\u0026quot;: \u0026quot;apackrsct01\u0026quot; } $  "
},
{
	"uri": "/oci_docs/10_quickstart/create_compartment/",
	"title": "Compartment 추가",
	"tags": [],
	"description": "",
	"content": " 이번 문서는 오라클 클라우드 Free Tier 계정을 생성하고 로그인한 상황을 전제로 합니다. 만약에 현재 오라클 클라우드 계정이 없는 상태라면, 다음 문서를 참조하여 오라클 클라우드 계정을 만들고 OCI 콘솔에 로그인하시기 바랍니다.\n OCI FREE TIER 계정 등록 Free Tier 계정 로그인  OCI에서 자원(VCN, VM, Database, Storage 및 여러 서비스)을 만들 때, Compartment는 필수 설정 항목입니다. Compartment는 OCI 자원을 논리적으로 묶는 역할을 담당합니다. 다양한 OCI 자원의 논리 그룹을 Compartment로 만들고 이 단위로 자원 모니터링, 과금 및 권한을 설정 합니다. Compartment는 OCI 자원을 관리하는 OCI 핵심 구성요소입니다.\n이번 문서는 다음과 같은 목차로 OCI 콘솔에서 컴파트먼트를 등록하는 과정을 소개합니다.\n 1. OCI Compartment  1.1 IAM 권한 설정 예시  2. Compartment 추가 3. 참고문서     Compartment 한글화  컴파트먼트를 OCI 콘솔에서는 \u0026ldquo;구획\u0026ldquo;으로 번역합니다.    1. OCI Compartment OCI에서 사용자 관리와 권한 관리는 IAM(Identity and Access Management)이 담당합니다. IAM은 권한 관리를 위하여 사용자 그룹을 만들고 사용자 그룹에 어떤 자원을 접근하는 권한을 설정합니다. 여기서 어떤 자원을 논리적으로 묶는 OCI 단위가 Compartment입니다. 이렇게 OCI는 Compartment를 근간으로 보안과 접근 제어 기능을 제공합니다. Compartment는 논리적으로 자원을 묶는 OCI IAM(Identity and Access Management)의 핵심 컴포넌트 입니다.\nCompartment는 중첩 디렉터리 구조를 갖습니다. Oracle Cloud 계정인 테넌시(Tenancy)가 만들어지면, 관리자 컴파트먼트인 Root Compartment가 만들어 집니다. Administrator 사용자 그룹에 포함된 OCI User는 Root 컴파트먼트 아래에 컴포넌트를 만들 수 있습니다. OCI에서 모든 자원은 특정 컴파트먼트에 소속됩니다.\n컴파트먼트는 OCI 글루벌 범위를 갖습니다. 컴파트먼트는 특정 리전에 종속적이지 않습니다. 특정 리전에서 만든 컴파트먼트는 모든 리전에서 사용 가능합니다.\n1.1 IAM 권한 설정 예시 IAM에서 권한을 설정하는 방식은 다음과 같습니다. 다음 목록과 같은 OCI 환경을 가정합니다.\n 사용자 그룹: HR-Admins  그룹에 포함된 OCI 사용자: demo01, demo02  Compartment: HR Policy 목표: HR-Admins 사용자 그룹에 포함된 모든 사람에게 HR 컴파트먼트에 포함된 모든 자원의 관리 기능을 부여  다음과 같은 Policy를 설정할 수 있습니다.\nallow group HR-Admins to manage all-resources in compartment HR  위 Policy가 적용되면 demo01과 demo02는 HR Compartment에 OCI의 모든 자원을 프로비저닝할 수있습니다.\n2. Compartment 추가 Root 컴파트먼트 아래에 sandbox 컴파트먼트를 추가할 것입니다. 예제로 사용할 Oracle Cloud의 계정(테넌시, Tenancy), OCI User 및 리전은 다음과 같습니다.\n Tenancy: minsu0808 OCI 사용자 ID: taewanme@gmail.com OCI 사용자 그룹: Administrator 리전: 서울(ap-seoul-1)  이 문서에서 사용할 OCI 사용자(taewanme@gmail.com)는 Administrator 그룹에 소속된 상태입니다. Administrator 그룹에 소속된 사용자 ID는 관리자 권한을 갖고 있습니다. 따라서 Tenncy(minsu0808)의 모든 자원과 컴파트먼트에 대한 접근 및 관리 권한을 갖고 있습니다. 따라서 컴파트먼트를 만든 후 별도의 Policy 설정 작업을 하지 않습니다. 이것은 처음에 빠른 실습과 절차를 단순하게 만들기 위한 조치입니다. 실제 환경에서는 관리자 ID를 사용하면 않됩니다. 따라서 실무에서 OCI 일반 사용자 ID를 사용해야 합니다. OCI 일반 사용자는 컴파트먼트를 만들고, 컴파트먼트를 사용하는 사용자에게 적절한 권한 설정하는 작업을 OCI 관리자에게 요청해야 합니다. 이 절차에 대해서는 별도 문서로 다루겠습니다.\n Root 컴파트먼트 아래에 sandbox 컴파트먼트를 생성합니다. Compartment 관리 페이지 이동 메뉴는 다음과 같습니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Identity  Compartments Compartments 관리 페이지에서 \u0026ldquo;Create Compartment\u0026rdquo; 버튼을 클릭합니다.\n새로운 Compartment에 대해서 다음과 같이 설정하고 생성합니다.\n   항목 설정 값     Name sandbox   Description compartment for demo   Parent Compartment root    Compartment가 정상적으로 생성되면 위 그림과 같이 Compartments 관리 페이지가 출력됩니다. 이 페이지에서 sandbox compartment가 생성된 것을 확인할 수 있습니다.\n3. 참고문서  Compartment \u0026amp; Policy In Oracle Cloud Infrastructure    [Official OCI Docs]Managing Compartments    [A-Team Chronicles]Oracle Cloud Infrastructure Compartments     "
},
{
	"uri": "/oci_docs/50.database_service/",
	"title": "Database Service",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/oci_docs/30_core_infrastructure/compute/provisioning/oci_developer_image/",
	"title": "Developer Image 인스턴스 생성",
	"tags": [],
	"description": "",
	"content": " 이번 문서는 오라클 클라우드 Free Tier 계정을 생성하고 로그인한 상황을 전제로 합니다. 만약에 현재 오라클 클라우드 계정이 없는 상태라면, 다음 문서를 참조하여 오라클 클라우드 계정을 만들고 OCI 콘솔에 로그인하시기 바랍니다.\n OCI FREE TIER 계정 등록 Free Tier 계정 로그인  이번 문서에서는 Oracle이 제공하는 Oracle Cloud Developer Image로 Compute VM을 생성하는 절차를 소개합니다. Oracle Cloud Developer Image으로 OCI Linux VM 인스턴스를 생성하는 문서는 다음과 같은 목차로 진행 됩니다.\n 1. 사전 준비  1.1 OCI 자원 준비 1.2 준비 파일 1.3 사용 가능한 자원 확인  2. OCI Linux VM 인스턴스 생성  2.2 Oracle Cloud Developer Image로 VM 생성 2.3 SSH 접속 2.4 VM 포트 오픈  2.4.1 Security List에 Secutiry Rule 추가 2.4.2 VM 방화벽 오픈  요약   \n 1. 사전 준비 OCI Linux VM 인스턴스를 생성 문서는 다음과 같은 자원과 파일이 이미 만들어져 있다는 것을 가정하고 진행합니다.\n1.1 OCI 자원 준비 다음 자원이 없다면 \u0026ldquo;자원 생성 참조 문서\u0026ldquo;를 참조하여 해당 자원을 생성하시기 바랍니다.\n   자원 유형 자원 이름 소속 Compartment 추가 설명 자원 생성 참조 문서     Compartment sanbox root \u0026gt; sandbox . Compartment 추가      VCN demo_vcn root \u0026gt; sandbox 80포트를 공개하는 Custom_Security_List를 포함할 것 간편 VCN 만들기       1.2 준비 파일 OCI Linux VM 인스턴스을 생성하기 위해서는 SSH 접속에 사용할 공개키 등록해야 합니다. 다음과 같은 RSA 공개키를 준비해야 합니다.\n   파일 유형 파일명 파일 위치 파일 생성 참조 문서     Key Paring RSA 공개키 id_rsa.pub ~/temp 운영체제별 SSH Key Pair 준비      Key Paring RSA 비밀키 id_rsa ~/temp 운영체제별 SSH Key Pair 준비       1.3 사용 가능한 자원 확인 현재 Tenancy에 할당된 사용 가능한 자원을 확인 합니다. Tenancy에 할당된 자원량을 확인하는 Limits, Quotas and Uasge(제한, 할당량 및 사용량) 페이지는 다음과 같은 메뉴 패스로 이동할 수 있습니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Governance  Limits, Quotas and Uasge(제한, 할당량 및 사용량) Limits, Quotas and Uasge(제한, 할당량 및 사용량) 페이지에서 리전 AD(Available Domain)에서 서비스 별로 할당된 자원 크기와 현재 사용한 자원/사용 가능한 자원 규모를 확인할 수 있습니다. 또한 Request a services limit increase에서 자원 증설을 요청할 수 있습니다.\n위 이미지의 Limits, Quotas and Uasge(제한, 할당량 및 사용량) 페이지는 VM.Standard2.1 Shape을 사용 가능한 자원으로 표시하고 있다. 이번 장에서는 이 Shape을 이용하여 리눅스 VM 인스턴스를 생성할 것입니다. 이 페이지를 보고 실습하시는 분들의 경우 상황에 따라서 VM.Standard2.1 Shape을 사용할 수 없을 수 있습니다. 이 문서에서 Shape 타입은 중요하지 않으며, 사용 가능한 Shape을 선택하시면 됩니다. 아래에서 VM.Standard2.1 Shape을 언급하는 부분을 여러분이 선택한 Shape으로 교체하고 진행하시면 됩니다.\n2. OCI Linux VM 인스턴스 생성 앞에서 설명한 것 처럼, 이제는 Compartment(sandbox)와 VCN(demo_vcn)을 만들었고, SSH Key Pair로 id_rsa파일과 id_rsa.pub 파일을 생성했을 것입니다. 이제 부터 Oracle Cloud Developer Image를 프로비저닝하겠습니다.\n2.2 Oracle Cloud Developer Image로 VM 생성 이제 부터 Oracle Cloud Developer Image를 VM.Standard2.1 Shape으로 리눅스 VM 인스턴스를 만들겠습니다. OCI Console에서 다음 메뉴 패스로 OCI Compute의 Instance 관리 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Compute  Instance OCI Compute의 Instance관리 페이지에서 VM을 할당할 sandbox Compartment를 선택합니다. 그리고 \u0026ldquo;create instance\u0026rdquo; 버튼을 클릭하고 \u0026ldquo;Create Compute Instance\u0026rdquo; 페이지로 이동합니다.\n다음 그림과 같이 \u0026ldquo;Create Compute Instance\u0026rdquo; 페이지에서 인스턴스 이름(Name your instance)에 oci_developer_linux_vm를 입력합니다. 그리고 \u0026ldquo;Change Image Source\u0026rdquo; 버튼을 클립합니다.\n\u0026ldquo;Browse All Images\u0026ldquo;에서 Oracle Images 텝을 선택하고 Oracle Cloud Develoepr Image를 선택합니다. 그리고 \u0026ldquo;I have reviewed and accept the Oracle Standard Terms and Restrictions\u0026rdquo; 항목을 체크한 다음에 Select Image 버튼을 클릭합니다.\n\u0026ldquo;Browse All Images\u0026rdquo; 창에서 Oracle Cloud Develoepr Image를 선택하면 다음 이미지와 같이 Image Source가 Oracle Cloud Developer Image로 변경됩니다.\n\u0026ldquo;Create Compute Instance\u0026rdquo; 페이지에서 입력 폼 각 항목에 다음과 같이 입력합니다.\n   설정 항목 설정값 설명     Name your instance oci_developer_linux_vm    Operating System or Image Source Oracle Linux 7.7 오라클 리눅스 7.X는 CentOs7.x/RedHat7.x와 완전한 호환성 제공   Availability Domain AD 1 현제 데모는 3AD 리전인 Ashburn에서 진행하고 있음   Instance Type Virtual Machine    Instance Shape VM.Stanndard2.1 1 Core OCPU, 15GB Memory   Virtaul cloud network compartment sandbox    Virtaul cloud network demo_vcn    Subnet Compartment sandbox    Subnet Public Subnet-demo_vcn    Assign a public IP address 체크 공개 IP를 설정하기 위해서 체크   Choose SSH Key file 체크 아래 Choose Files를 클릭하고 미리 준비한 id_rsa.pub 파일을 업로드    위 입력값을 모두 설정하면 다음 이미지와 같은 형태가 됩니다.\n다음 이미지와 같이 입력을 완료한 후 \u0026ldquo;Create\u0026rdquo; 버튼을 클릭하여 인스턴스 생성을 시작합니다. 인스턴스 생성이 시작되면 Compute Instance 상세 페이지로 이동합니다. 처음에 Compute Instance 아이콘 색깔은 주황색(생성중)입니다. Compute Instance 생성이 완료되면 아이콘이 색이 초록색으로 변경됩니다. 그리고 Public IP Address에 IP 129.213.51.111가 할당되어 있는것을 확인할 수 있습니다.\n2.3 SSH 접속 앞에서 확인한 공개 IP로 ssh 접근을 할 수 있습니다. 리눅스/맥의 터머널로 ssh 접근하는 명령의 형식은 다음과 같습니다.\nssh -i \u0026lt;id_rsa파일\u0026gt; opc@\u0026lt;공개 IP\u0026gt;  여기서 id_rsa는 앞에서 Compute Instance를 생성할 때 업로드한 공개키(id_rsa.pub)의 key pair 파일이고 opc는 오라클이 배포하는 VM 이미지의 기본 OS 사용자 계정입니다.\n2.4 VM 포트 오픈 프로비저닝된 VM은 demo_vcn의 Public 서브넷에 위치하고 공개 IP를 갖고 있습니다. OCI에서 만들어지는 VCN에서 오픈되는 기본 포트는 22번 뿐입니다 22번 포트 이외의 새로운 포트를 오픈해야 한다면 다음과 2개 작업을 해야 합니다.\n 소속된 VCN(demo_vcn)의 Public 서브넷에 포함된 Security List에 Security Rule을 추가 VM에 활성화된 방화벽 설정  2.4.1 Security List에 Secutiry Rule 추가 이 절에서는 demo_vcn의 Public Subnet-demo_vcn에 80 포트를 오픈 Security Rule을 등록하는 과정을 소개합니다. Security Rule 등록을 위해서 OCI Console에서 다음 메뉴 페스로 VCN 관리 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Networking  Virtual Cloud Networks VCN 관리 페이지에서 demo_vcn이 포함된 sandbox Compartment를 선택한 다음에 출력되는 demo_vcn 링크를 클릭하여 demo_vcn 상세 페이지로 이동합니다. 그리고 demo_vcn 상세 페이지에서 공개 서브넷인 Public Subnet-demo_vcn 링크를 클릭하여 서브넷 상세 페이지로 이동합니다.\n공개 서브넷 상세 페이지에서 디폴트 보안 목록인 \u0026ldquo;Default Security List for demo_vcn\u0026ldquo;을 클릭합니다. Public Subnet-demo_vcn 서브넷의 \u0026ldquo;Security List\u0026rdquo;에 80 포트를 오픈하는 Ingress Rule을 추가하는 작업을 진행하겠습니다. demo_vcn 상세 페이지 왼쪽 메뉴에서 공개 서브넷인 \u0026ldquo;Public Subnet-demo_vcn\u0026rdquo;을 클릭하고, \u0026ldquo;Public Subnet-demo_vcn\u0026rdquo;의 상세 페이지로 이동합니다.\n\u0026ldquo;Default Security List for demo_vcn\u0026rdquo; 링크를 클릭하면 보안 목록 상세 페이지로 이동합니다. 그리고 \u0026ldquo;Add Ingress Rules\u0026rdquo; 버튼을 클릭합니다.\n\u0026ldquo;Add Ingress Rules\u0026rdquo; 버튼을 클릭하면, Ingress Rule 등록 폼이 출력됩니다. 공개 서브넷에 80 포트 유입을 허용하는 보안 룰을 다음과 같이 설정하고 \u0026ldquo;Add Ingress Rules\u0026rdquo; 버튼을 클릭합니다.\n   설정 항목 설정 값     Stateless 체크박스 체크 하지 않음   Source CIDR 0.0.0.0/0   IP Protocol TCP   Source Port Range All   Destination Port Range 80   Description Open 80 port for Web Servers    \u0026ldquo;Ingress Rules\u0026ldquo;가 정상적으로 등록되면 다음과 같은 화면이 출력됩니다.\n2.4.2 VM 방화벽 오픈 Oracle Linux 7.x 버전에서 80포트 tcp를 오픈하는 명령은 다음과 같습니다. 다음 명령을로 방화벽에 80포트 룰을 추가하고 데몬을 재시작합니다.\nsudo firewall-cmd --zone=public --add-port=80/tcp --permanent sudo firewall-cmd --reload  요약 지금까지 Oracle Cloud Develoer Image로 Compute VM을 생성하고, SSH 접근을 시도해 보았습니다. 여기서 만든 Compute VM의 특정 포트(80 포트)를 오픈하는 절차에 대하여 알아보았습니다.\n"
},
{
	"uri": "/oci_docs/30_core_infrastructure/networking/",
	"title": "Networking",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/oci_docs/50.database_service/streaming/terminology/",
	"title": "Streaming 주요 키워드",
	"tags": [],
	"description": "",
	"content": "  Stream(스트림)  추가 전용 로그 파일 스트림에는 메시지가 저장됨 Kafka의 Topic과 같은 것 스트림은 한개 이상의 Partition으로 구성    Partition(파티션)  Stream은 여러개의 Partition으로 분할 각 Partition은 여러 노드(Broker)에 위치 Partition은 Stream을 분할하는 단위 여러 컨슈머는 Partition의 데이터를 읽어 병렬 처리 지원    Cursor(커서)  스트림의 위치를 나타내는 지시자 커서는 파이텬의 특정 오프셋 및 시간으로 나타냄 그룹의 현재 위치 지정에도 사용    Message(메시지)  스트림에 게시된(Published)된 데이터 Base64로 인코딩 됨    Producer(프로듀서)  스트림에 메시지를 게시하는 객체    Consumer(컨슈머)  스트림에서 메시지를 읽어가는 객체 하나 이상 존재 가능    Consumer Group(컨슈머 그룹)  컨슈머 그룹은 스트림에 모든 파티션으로부터 메시지 읽기 조정을 받는 인스턴스 집합 컨슈머 그룹의 인스턴스(컨슈머)는 Interaction을 통해서 그룹 멤버쉽을 유지 일정 기간 Interaction 부족할 경우에 그룹에서 인스턴스 제외    Topic / Key  관련 메시지를 그룹으로 만드는 구분자    Offset(오프셋)  파티션의 메시지 위치 스트림 읽기를 재시작할 때 offset을 지정   참조 문서  [OCI Official Docs]Streaming Service Overview     "
},
{
	"uri": "/oci_docs/60.data_and_ai_service/",
	"title": "Data &amp; AI Service",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)의 Data&amp;AI 서비스를 정리합니다.",
	"content": "Data \u0026amp; AI 관련 서비스를 정리합니다.\n"
},
{
	"uri": "/oci_docs/50.database_service/adb/adw/hands-on/adw_tools/oml/",
	"title": "OML Notebook",
	"tags": [],
	"description": "OCI ADW(Authonomous Data Warehouse)가 제공하는 OML Notebook접근법을 정리합니다.",
	"content": " ADW는 SQL을 기반으로하는 머신러닝 분석 툴인 OML4SQL을 제공합니다. 이 OML4SQL은 데이터베이스 데이터 처리 능력을 최대한 활용하는 머신러닝 기법입니다. ADW는 OML4SQL로 머신러닝 로직을 효과적으로 개발화고 검증하는 툴로 Oracle Machine Learning(OML) notebook 어플리케이션을 제공합니다. OML Notebook 서비스의 실체는 Apache Zeppelin입니다. OML notebook에서 SQL 쿼리와 Oracle Stored Porcedure를 실행하여 In-Database 머신러닝을 수행할 수 있습니다.\nOracle SQL Developer Oracle SQL Developer는 ADW 데이터베이스를 지원하는 대표적인 SQL 툴로 오라클이 무상으로 제공하는 개발 도구입니다.\nADW 인스턴스 제공 툴 ADW 인스턴스는 3가지 서비스 툴을 제공합니다. ADW 인스턴스가 제공하는 서비스 툴은 다음과 같습니다.\n   서비스 명 설명     Oracle APEX Oracle APEX 개발 / 관리 환경   SQL Developer Web SQLDeveloper 웹 버전, 웹 기반 SQL UI 도구   Oracle Machine Learning 노트북 Oracle Machine Learning을 위한 Apache Zeppelin 노트북    이 서비스는 Autonomous Database 상세 페이지에서 다음과 같은 메뉴 페스로 접근할 수 있습니다.\n(Autonomous Database 상세 페이지)Service Console  개발 (서비스 콘솔 페이지 메뉴) 각 메뉴를 클릭하면 개별 서비스 페이지가 오픈됩니다.\nADW 지원 툴은 다음과 같은 주제로 진행됩니다.\n  "
},
{
	"uri": "/oci_docs/30_core_infrastructure/compute/provisioning/oci_ai_datascience_image/",
	"title": "AI Datascience 인스턴스 생성",
	"tags": [],
	"description": "",
	"content": " 이번 문서는 오라클 클라우드 Free Tier 계정을 생성하고 로그인한 상황을 전제로 합니다. 만약에 현재 오라클 클라우드 계정이 없는 상태라면, 다음 문서를 참조하여 오라클 클라우드 계정을 만들고 OCI 콘솔에 로그인하시기 바랍니다.\n OCI FREE TIER 계정 등록 Free Tier 계정 로그인  이번 문서에서는 Oracle이 제공하는 AI Datascience 로 Compute VM을 생성하는 절차를 소개합니다. 이 이미지의 정식 이름은 \u0026ldquo;Oracle Linux 7 Image for AI/ML/DL Workloads\u0026ldquo;입니다. 이 AI DatascienceOracle Cloud Developer Image으로 OCI Linux VM 인스턴스를 생성하는 문서는 다음과 같은 목차로 진행 됩니다.\n 1. 사전 준비  1.1 OCI 자원 준비 1.2 준비 파일 1.3 사용 가능한 자원 확인  2. OCI Linux VM 인스턴스 생성  2.2 Oracle Cloud Developer Image로 VM 생성 2.3 SSH 접속 2.4 VM 포트 오픈  2.4.1 Security List에 Secutiry Rule 추가 2.4.2 VM 방화벽 오픈  요약 참고문서   \n 1. 사전 준비 OCI Linux VM 인스턴스를 생성 문서는 다음과 같은 자원과 파일이 이미 만들어져 있다는 것을 가정하고 진행합니다.\n1.1 OCI 자원 준비 다음 자원이 없다면 \u0026ldquo;자원 생성 참조 문서\u0026ldquo;를 참조하여 해당 자원을 생성하시기 바랍니다.\n   자원 유형 자원 이름 소속 Compartment 추가 설명 자원 생성 참조 문서     Compartment sanbox root \u0026gt; sandbox . Compartment 추가      VCN demo_vcn root \u0026gt; sandbox 80포트를 공개하는 Custom_Security_List를 포함할 것 간편 VCN 만들기       1.2 준비 파일 OCI Linux VM 인스턴스을 생성하기 위해서는 SSH 접속에 사용할 공개키 등록해야 합니다. 다음과 같은 RSA 공개키를 준비해야 합니다.\n   파일 유형 파일명 파일 위치 파일 생성 참조 문서     Key Paring RSA 공개키 id_rsa.pub ~/temp 운영체제별 SSH Key Pair 준비      Key Paring RSA 비밀키 id_rsa ~/temp 운영체제별 SSH Key Pair 준비       1.3 사용 가능한 자원 확인 현재 Tenancy에 할당된 사용 가능한 자원을 확인 합니다. Tenancy에 할당된 자원량을 확인하는 Limits, Quotas and Uasge(제한, 할당량 및 사용량) 페이지는 다음과 같은 메뉴 패스로 이동할 수 있습니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Governance  Limits, Quotas and Uasge(제한, 할당량 및 사용량) Limits, Quotas and Uasge(제한, 할당량 및 사용량) 페이지에서 리전 AD(Available Domain)에서 서비스 별로 할당된 자원 크기와 현재 사용한 자원/사용 가능한 자원 규모를 확인할 수 있습니다. 또한 Request a services limit increase에서 자원 증설을 요청할 수 있습니다.\n위 이미지의 Limits, Quotas and Uasge(제한, 할당량 및 사용량) 페이지는 VM.Standard2.1 Shape을 사용 가능한 자원으로 표시하고 있다. 이번 장에서는 이 Shape을 이용하여 리눅스 VM 인스턴스를 생성할 것입니다. 이 페이지를 보고 실습하시는 분들의 경우 상황에 따라서 VM.Standard2.1 Shape을 사용할 수 없을 수 있습니다. 이 문서에서 Shape 타입은 중요하지 않으며, 사용 가능한 Shape을 선택하시면 됩니다. 아래에서 VM.Standard2.1 Shape을 언급하는 부분을 여러분이 선택한 Shape으로 교체하고 진행하시면 됩니다.\n2. OCI Linux VM 인스턴스 생성 앞에서 설명한 것 처럼, 이제는 Compartment(sandbox)와 VCN(demo_vcn)을 만들었고, SSH Key Pair로 id_rsa파일과 id_rsa.pub 파일을 생성했을 것입니다. 이제 부터 Oracle Cloud Developer Image를 프로비저닝하겠습니다.\n2.2 Oracle Cloud Developer Image로 VM 생성 이제 부터 Oracle Cloud Developer Image를 VM.Standard2.1 Shape으로 리눅스 VM 인스턴스를 만들겠습니다. OCI Console에서 다음 메뉴 패스로 OCI Compute의 Instance 관리 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Compute  Instance OCI Compute의 Instance관리 페이지에서 VM을 할당할 sandbox Compartment를 선택합니다. 그리고 \u0026ldquo;create instance\u0026rdquo; 버튼을 클릭하고 \u0026ldquo;Create Compute Instance\u0026rdquo; 페이지로 이동합니다.\n다음 그림과 같이 \u0026ldquo;Create Compute Instance\u0026rdquo; 페이지에서 인스턴스 이름(Name your instance)에 oci_developer_linux_vm를 입력합니다. 그리고 \u0026ldquo;Change Image Source\u0026rdquo; 버튼을 클립합니다.\n\u0026ldquo;Browse All Images\u0026ldquo;에서 Oracle Images 텝을 선택하고 Oracle Cloud Develoepr Image를 선택합니다. 그리고 \u0026ldquo;I have reviewed and accept the Oracle Standard Terms and Restrictions\u0026rdquo; 항목을 체크한 다음에 Select Image 버튼을 클릭합니다.\n\u0026ldquo;Browse All Images\u0026rdquo; 창에서 Oracle Cloud Develoepr Image를 선택하면 다음 이미지와 같이 Image Source가 Oracle Cloud Developer Image로 변경됩니다.\n\u0026ldquo;Create Compute Instance\u0026rdquo; 페이지에서 입력 폼 각 항목에 다음과 같이 입력합니다.\n   설정 항목 설정값 설명     Name your instance oci_developer_linux_vm    Operating System or Image Source Oracle Linux 7.7 오라클 리눅스 7.X는 CentOs7.x/RedHat7.x와 완전한 호환성 제공   Availability Domain AD 1 현제 데모는 3AD 리전인 Ashburn에서 진행하고 있음   Instance Type Virtual Machine    Instance Shape VM.Stanndard2.1 1 Core OCPU, 15GB Memory   Virtaul cloud network compartment sandbox    Virtaul cloud network demo_vcn    Subnet Compartment sandbox    Subnet Public Subnet-demo_vcn    Assign a public IP address 체크 공개 IP를 설정하기 위해서 체크   Choose SSH Key file 체크 아래 Choose Files를 클릭하고 미리 준비한 id_rsa.pub 파일을 업로드    위 입력값을 모두 설정하면 다음 이미지와 같은 형태가 됩니다.\n다음 이미지와 같이 입력을 완료한 후 \u0026ldquo;Create\u0026rdquo; 버튼을 클릭하여 인스턴스 생성을 시작합니다. 인스턴스 생성이 시작되면 Compute Instance 상세 페이지로 이동합니다. 처음에 Compute Instance 아이콘 색깔은 주황색(생성중)입니다. Compute Instance 생성이 완료되면 아이콘이 색이 초록색으로 변경됩니다. 그리고 Public IP Address에 IP 129.213.51.111가 할당되어 있는것을 확인할 수 있습니다.\n2.3 SSH 접속 앞에서 확인한 공개 IP로 ssh 접근을 할 수 있습니다. 리눅스/맥의 터머널로 ssh 접근하는 명령의 형식은 다음과 같습니다.\nssh -i \u0026lt;id_rsa파일\u0026gt; opc@\u0026lt;공개 IP\u0026gt;  여기서 id_rsa는 앞에서 Compute Instance를 생성할 때 업로드한 공개키(id_rsa.pub)의 key pair 파일이고 opc는 오라클이 배포하는 VM 이미지의 기본 OS 사용자 계정입니다.\n2.4 VM 포트 오픈 프로비저닝된 VM은 demo_vcn의 Public 서브넷에 위치하고 공개 IP를 갖고 있습니다. OCI에서 만들어지는 VCN에서 오픈되는 기본 포트는 22번 뿐입니다 22번 포트 이외의 새로운 포트를 오픈해야 한다면 다음과 2개 작업을 해야 합니다.\n 소속된 VCN(demo_vcn)의 Public 서브넷에 포함된 Security List에 Security Rule을 추가 VM에 활성화된 방화벽 설정  2.4.1 Security List에 Secutiry Rule 추가 이 절에서는 demo_vcn의 Public Subnet-demo_vcn에 80 포트를 오픈 Security Rule을 등록하는 과정을 소개합니다. Security Rule 등록을 위해서 OCI Console에서 다음 메뉴 페스로 VCN 관리 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Networking  Virtual Cloud Networks VCN 관리 페이지에서 demo_vcn이 포함된 sandbox Compartment를 선택한 다음에 출력되는 demo_vcn 링크를 클릭하여 demo_vcn 상세 페이지로 이동합니다. 그리고 demo_vcn 상세 페이지에서 공개 서브넷인 Public Subnet-demo_vcn 링크를 클릭하여 서브넷 상세 페이지로 이동합니다.\n공개 서브넷 상세 페이지에서 디폴트 보안 목록인 \u0026ldquo;Default Security List for demo_vcn\u0026ldquo;을 클릭합니다. Public Subnet-demo_vcn 서브넷의 \u0026ldquo;Security List\u0026rdquo;에 80 포트를 오픈하는 Ingress Rule을 추가하는 작업을 진행하겠습니다. demo_vcn 상세 페이지 왼쪽 메뉴에서 공개 서브넷인 \u0026ldquo;Public Subnet-demo_vcn\u0026rdquo;을 클릭하고, \u0026ldquo;Public Subnet-demo_vcn\u0026rdquo;의 상세 페이지로 이동합니다.\n\u0026ldquo;Default Security List for demo_vcn\u0026rdquo; 링크를 클릭하면 보안 목록 상세 페이지로 이동합니다. 그리고 \u0026ldquo;Add Ingress Rules\u0026rdquo; 버튼을 클릭합니다.\n\u0026ldquo;Add Ingress Rules\u0026rdquo; 버튼을 클릭하면, Ingress Rule 등록 폼이 출력됩니다. 공개 서브넷에 80 포트 유입을 허용하는 보안 룰을 다음과 같이 설정하고 \u0026ldquo;Add Ingress Rules\u0026rdquo; 버튼을 클릭합니다.\n   설정 항목 설정 값     Stateless 체크박스 체크 하지 않음   Source CIDR 0.0.0.0/0   IP Protocol TCP   Source Port Range All   Destination Port Range 80   Description Open 80 port for Web Servers    \u0026ldquo;Ingress Rules\u0026ldquo;가 정상적으로 등록되면 다음과 같은 화면이 출력됩니다.\n2.4.2 VM 방화벽 오픈 Oracle Linux 7.x 버전에서 80포트 tcp를 오픈하는 명령은 다음과 같습니다. 다음 명령을로 방화벽에 80포트 룰을 추가하고 데몬을 재시작합니다.\nsudo firewall-cmd --zone=public --add-port=80/tcp --permanent sudo firewall-cmd --reload  요약 지금까지 Oracle Cloud Develoer Image로 Compute VM을 생성하고, SSH 접근을 시도해 보았습니다. 여기서 만든 Compute VM의 특정 포트(80 포트)를 오픈하는 절차에 대하여 알아보았습니다.\n참고문서  https://cloudmarketplace.oracle.com/marketplace/en_US/listing/69064648  "
},
{
	"uri": "/oci_docs/70_solutions/",
	"title": "OCI Services",
	"tags": [],
	"description": "OCI Functions 관련 정보를 정리합니다.",
	"content": "Oracle Cloud Infrastructure를 구성하는 다양한 서비스를 정리합니다.\n"
},
{
	"uri": "/oci_docs/10_quickstart/vcn/",
	"title": "VCN(Virtual Cloud Network) 생성",
	"tags": [],
	"description": "",
	"content": "OCI VM 인스턴스를 생성하기 앞서, VM 인스턴스가 위치할 VCN(Virtural Cloud Intance)을 만들어야 합니다. OCI VCN을 만드는 방법은 두 가지가 있습니다.\n 간편 모드 VCN 만들기 메뉴얼 모드 VCN 만들기  두 가지 방식으로 VCN을 만드는 방법을 소개합니다.\n"
},
{
	"uri": "/oci_docs/50.database_service/adb/adw/hands-on/performance/query_of_adw_with_different_ocpu/",
	"title": "ADW OCPU와 쿼리 성능",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)의 ADW 인스턴스의 OCPU에 따른 쿼리 실행 시간 변화를 테스트합니다.",
	"content": " ADW 인스턴스 COPU가 쿼리 실행 속도에 미치는 영향을 테스트해보겠습니다. OCPU 1개가 할당된 ADW 인스턴스와 OCPU 4개가 할당된 ADW 인스턴스에서 동일한 쿼리를 실행하고 실행 시간을 비교해 보겠습니다.\n이번 문서는 오라클 클라우드 Free Tier 계정에 ADW 인스턴스를 만들었다는 전제로 진행합니다. 현재 ADW 인스턴스가 없다면, 다음 문서를 참조하여 ADW 인스턴스(DemoADW)를 만드시기 바랍니다.\n ADW 인스턴스 생성     OCPU가 쿼리에 미치는 영향에 대한 실험은 다음과 같은 순서로 진행하겠습니다.\n ADW 인스턴스 준비  테스트 쿼리 SQL 실행 테스트  테스트 결과  \n ADW 인스턴스 준비 SQL을 수행하는 도구로 Oracle SQL Developer를 사용할 것입니다. Oracle SQL Developer 설치와 설정이 필요하시다면 다음 문서를 참조하여 준비하시기 바랍니다.\n SQL Developer: 설정 및 접속     커넥션 설정에 HIGH 데이터베이스 서버스로를 이용합니다.\nADW 인스턴스의 OCPU 갯수는 ADW Scale up/down 기능을 활용하여 준비합니다. OCPU를 변경하는 과정은 다음 문서를 참조하여 준비합니다.\n ADW Scale Up\u0026amp;Down     다음과 같은 절차로 테스트를 진행합니다.\n ADW 인스턴스 프로비저닝: 1 OCPU, 1TB, Database 명: DemoADW SQL Developer 커네션 설정: demoadw_hig 서비스 이용 테스트 쿼리 실행 (SQL Deveoper) ADW 인스턴스 Scale up: 4 OCPU, 1TB 테스트 쿼리 실행 (SQL Deveoper)  테스트 쿼리 다음 쿼리를 테스트 쿼리로 이용합니다.\nselect /*+ no_result_cache */ c_nation, s_nation, d_year, sum(lo_revenue) as revenue from ssb.customer, ssb.lineorder, ssb.supplier, ssb.dwdate where lo_custkey = c_custkey and lo_suppkey = s_suppkey and lo_orderdate = d_datekey and c_region = 'ASIA' and s_region = 'ASIA' and d_year \u0026gt;= 1992 and d_year \u0026lt;= 1997 group by c_nation, s_nation, d_year order by d_year asc, revenue desc  위 SQL은 캐쉬를 사용하지 않는 SQL Hint를 포함합니다.\nSQL 실행 테스트 1 OCPU ADW 인스턴스와 4 OCPU ADW 인스턴스에서 위 테스트 쿼리를 수행합니다.\n테스트 결과 앞에서 소개한 테스트 외에 몇번의 테스트를 추가했습니다. OCPU 1개에서 8개까지 OCPU를 늘려가면 수행한 테스트 결과는 다음과 같습니다.\n   OCUP 수 사용하는 서비스 쿼리 실행 시간     1 OCPU demoadw-high 125.419초   2 OCPU demoadw-high 64.321초   3 OCPU demoadw-high 42.958초   4 OCPU demoadw-high 32.688초   6 OCPU demoadw-high 22.943초   8 OCPU demoadw-high 17.866초    위 테스트 결과를 통해서 ADW의 OCPU 증설(Sacle-up)에 따라서 쿼리 수행 시간은 줄어드는 경향을 확인할 수 있습니다.\n"
},
{
	"uri": "/oci_docs/10_quickstart/compute/",
	"title": "VM 인스턴스 프로비저닝",
	"tags": [],
	"description": "",
	"content": "OCI에 Compute VM(Virtual Machine)을 프로비저닝하는 절차를 유형별로 소개합니다. 다음과 같은 유형의 VM 인스턴스 생성 절차를 다룰것 입니다.\n Oracle Linux 7.7 인스턴스 프로비저닝 Window VM 프로비저닝 Developer Image로 인스턴스 프로비저닝 GPU Image 인스턴스 프로비저닝  "
},
{
	"uri": "/oci_docs/10_quickstart/ha_with_load_balancer/",
	"title": "Load Balancer를 이용한 HA 구성",
	"tags": [],
	"description": "OCI Load Balancer를 이용하여 HA VM 구성 방법을 소개합니다.",
	"content": " 이 문서에서는 OCI에서 Load Balancer를 이용하여 HA(High Availability, 고가용성) 구성 환경을 구성하는 실습을 진행합니다. 이 문서는 오라클 클라우드 Free Tier 계정을 생성하고 로그인한 상황을 전제로 합니다. 만약에 현재 오라클 클라우드 계정이 없는 상태라면, 다음 문서를 참조하여 오라클 클라우드 계정을 만들고 OCI 콘솔에 로그인하시기 바랍니다.\n OCI FREE TIER 계정 등록 Free Tier 계정 로그인  사전 준비 사항 OCI Load Balancer를 이용한 HA 구성은 다음과 같은 자원이 이미 만들어져 있다는 것을 가정하고 진행합니다.\nOCI 자원 준비 다음 자원이 없다면 \u0026ldquo;자원 생성 참조 문서\u0026ldquo;를 참조하여 해당 자원을 생성하시기 바랍니다.\n   자원 유형 자원 이름 소속 Compartment 추가 설명 자원 생성 참조 문서     Compartment sanbox root \u0026gt; sandbox . Compartment 추가      VCN demo_vcn root \u0026gt; sandbox 1.2 VCN 프로비저닝까지 수행. Security List에 별도 Rule을 추가할 필요 없음 간편 VCN 만들기       OCI Load Balancer 구성 절차 이 문서는 다음과 같은 절차로 진행됩니다.\n  사전 준비된 자원 확인 Private Subnet에 3개 VM 프로비저닝 Security List에 Rule 추가 Public Subnet에 Load Balancer 구성 HA 구성 테스트   HA 구성을 마치면 다음 그림과 같은 환경이 구성됩니다.\n Private Subnet에 3개의 VM 프로비저닝 각 VM에 Apache Web 서버가 설치 \u0026amp; 서비스 Load Balancer를 Public Subnet에 구성  Private Subnet에 3개 VM에 사용자 요청을 배분  OCI Load Banalcer 주요 기능  여러 서버에 부하를 분산  Weighted Round Robin IP Hash Least Connection Load Balancer 자체를 HA 구성    "
},
{
	"uri": "/oci_docs/80_oci_tools/",
	"title": "OCI 도구(Tool)",
	"tags": [],
	"description": "OCI 사용 편의성을 돕는 툴을 소개합니다. OCI Cloud Shell, OCI Rest API, Terraform, Ansible 을 다룹니다.",
	"content": " OCI(Oracle Cloud Infrastructure(OCI)는 오라클 클라우드가 제공하는 모든 자원 관리 기능을 REST API로 제공합니다. 이 REST API를 기반으로 CLI 툴, IaC(Infrastructure as Code) 툴, IDE 플러그인, OCI 모니터링 플러그인 등이 개발되었습니다.\n다음과 같은 OCI 툴을 DevOps 및 OCI 관리 툴로 활용할 수 있습니다. 2020.02년 현재 대표적인 OCI 지원 툴로는 다음과 같은 것들이 있습니다.\n   도구 이름 역할 개발조직 코드 레파지토리/문서 사이트     OCI REST API OCI 자원 관리 기능을 공개하는 REST 인터페이스 Oracle 비공개   OCI Python SDK OCI REST API의 Python 랩퍼 Oracle Github: OCI Python SDK      OCI Java SDK OCI REST API의 Java 랩퍼 Oracle Github: OCI Java SDK      OCI Ruby SDK OCI REST API의 Ruby 랩퍼 Oracle Github: OCI Ruby SDK      OCI Go SDK OCI REST API의 Go 랩퍼 Oracle Github: OCI Go SDK      OCI CLI OCI Python SDK 기반으로 개발된 CLI 툴 Oracle 주도 Open Source Github: OCI CLI      OCI Ansible Module Ansible에서 OCI 자언 프로비저닝을 지원하는 모듈 Oracle 주도 Open Source Github: oci-ansible-modules      OCI Terraform Provider Terraform에서 OCI 자원을 제어할 수있도록 지원하는 Provider Oracle 주도 Open Source Terraform OCI Docs      OCI Grafana Plug-in Grafana에서 OCI 모니터링 정보를 쿼리하고 Grafana에 출력하는 것을 지원하는 Plug-in Oracle Grafana Docs      Jenkins OCI Plug-in Jenkin의 OCI 자원 접근 및 관리를 돕는 Plug-in Oracle github:oci-compute-jenkins-plugin      Eclipse OCI Plug-in: Oracle Cloud Tools Eclipse OCI Plug-in Oracle Eclipse Marketplace:Oracle Cloud Tools   github:oci-toolkit-eclipse       다음과 같은 OCI 지원 툴을 설치 및 사용법에 대하여 정리하겠습니다.\n OCI REST API 사용법 OCI SDK 사용법 [Java, Python, Ruby, Go] OCI CLI 설치 및 사용법 OCI Cloud Shell OCI Anaisible 모듈 OCI Terraform Eclipse Plugin - OCI Jenkins OCI Plugin Grafana Packer  참고 문서  [Official OCI Docs]Other Tools and Plug-ins     "
},
{
	"uri": "/oci_docs/80_oci_tools/external_useful_tools/",
	"title": "OCI에 유용한 써드파티 툴",
	"tags": [],
	"description": "OCI 사용 편의성을 돕는 써드 파티 툴을 소개합니다.",
	"content": " rclone  "
},
{
	"uri": "/oci_docs/99_oci_sites/useful_sites_for_oci/",
	"title": "클라우드 관련 유용한 서비스",
	"tags": [],
	"description": "OCI와 관련하여 다양한 정보를 제공하는 서비스를 정리합니다.",
	"content": "OCI 관련 유용한 정보를 제공하는 사이트와 서비스를 정리합니다.\n http://ocistatus.oraclecloud.com   : 오라클 클라우드 데이터센터 별 서비스 상태 정보 실시간 제공 https://cloudharmony.com/speedtest   : 현재 위치에서 클라우드 데이터센터까지 네트워크 속도 측정  "
},
{
	"uri": "/oci_docs/98_misc_tips/",
	"title": "OCI 알아두면 유용한 팁",
	"tags": [],
	"description": "Miscellaneous Tips",
	"content": "Oracle Cloud를 사용하면서 자주 사용되는 다양한 주제를 정리합니다.\n 운영체제 별 SSH Key Pair 준비   "
},
{
	"uri": "/oci_docs/00_oci/oci_resion_info/",
	"title": "OCI 리전 정보",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)의 리전 정보를 정리합니다.",
	"content": " OCI 리전의 기본 정보를 정리합니다.\n OCI Region 기본 정보 참고 문서    OCI Region 기본 정보    리전 이름 리전 ID 리전 위치 리전 Key Availability Domain 수     Amsterdam eu-amsterdam-1 네덜란드, 암스테르담 AMS 1   Ashburn us-ashburn-1 미국 버지니아, 애슈번 IAD 3   Sao Paulo sa-saopaulo-1 브라질, 상파올로 GRU 1   Frankfurt eu-frankfurt-1 독일, 프랑크푸르트 FRA 3   Jeddah me-jeddah-1 사우디 아라비아, 제다 JED 1   London uk-london-1 영국, 런던 LHR LHR   Melbourne ap-melbourne-1 호주, 멜버른 MEL 1   Montreal ca-montreal-1 캐나다, 몬트리올 YUL 1   Mumbai ap-mumbai-1 인도, 뭄바이 BOM 1   Osaka ap-osaka-1 일본, 오사카 KIX 1   Phoenix us-phoenix-1 미국 애리조나, 피닉스 PHX 3   Tokyo ap-tokyo-1 일본, 도쿄 NRT 1   Toronto ca-toronto-1 캐나다, 토론토 YYZ 1   Seoul ap-seoul-1 대한민국, 서울 ICN 1   Sydney ap-sydney-1 호주, 시드니 SYD 1   Zurich eu-zurich-1 스위스, 취리히 ZRH 1    참고 문서  https://docs.cloud.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm  "
},
{
	"uri": "/oci_docs/10_quickstart/object_storate/",
	"title": "Object Storage",
	"tags": [],
	"description": "",
	"content": "Object Storage\n"
},
{
	"uri": "/oci_docs/10_quickstart/adb/",
	"title": "Autonomous DB",
	"tags": [],
	"description": "",
	"content": "OCI Autonomous Database 인스턴스를 생성하는 절차를 소개합니다.\n"
},
{
	"uri": "/oci_docs/30_core_infrastructure/compute/provisioning/",
	"title": "Compute 인스턴스 만들기",
	"tags": [],
	"description": "",
	"content": "OCI(Oracle Cloud Infrastructure)에서 Compute 인스턴스를 프로비저닝하는 방법을 유형별 정리합니다.\n Oracle Cloud Developer Image 인스턴스 생성   "
},
{
	"uri": "/oci_docs/99_oci_sites/",
	"title": "OCI 관련 문서 사이트",
	"tags": [],
	"description": "OCI를 주제로하는 사이트와 관련 외부 문서 목록을 정리합니다.",
	"content": "Oracle Cloud 관련 사이트, 블로그 및 문서를 다음과 구조로 정리합니다.\n Oracle Cloud 관련 사이트 및 블로그  한글 사이트 해외 사이트  Oracle Cloud 관련 문서  Computing 관련 문서 Networking 관련 문서 DevOps 관련 문서 \u0026hellip;  Github 레파지토리  "
},
{
	"uri": "/oci_docs/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/oci_docs/",
	"title": "OCI Dcos",
	"tags": [],
	"description": "",
	"content": " 오라클 클라우드 사용자 가이드 OCI(Oracle Cloud Infrastructure)는 오라클이 제공하는 클라우드 서비스입니다. OCI Docs는 오라클 클라우드 입문자와 사용자를 위하여 OCI 관련 문서를 정리하는 페이지입니다. OCI는 매주 신규 기능을 공개하고 있습니다. OCI 서비스 변경에 맞춰 다양한 서비스에 대한 문서를 정리하겠습니다.\nOCIDocs는 다음과 같은 문서를 만들고 지속적으로 업데이트하여 가능한 최신 상태를 유지할 예정입니다.\n OCI 기본 개념 OCI 서비스 개념 OCI 각 서비스 사용법 Tutorial OCI 최신 정보  Change Log    일자 패스 링크 변경내역     2020.03.18 OCI 퀵 스타트 \u0026gt;\u0026gt; VM 인스턴스 프로비저닝 OCI VM 고정 IP 설정 OCI VM에 예약 고정 공개 IP를 설정 가이드   2020.03.17 OCI 퀵 스타트 \u0026gt;\u0026gt; Autonomoud DB SQL Developer의 ADW 연결하기 ADW 인스턴스를 연결하는 SQL Developer 설정 가이드    "
},
{
	"uri": "/oci_docs/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]