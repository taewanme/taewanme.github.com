[
{
	"uri": "http://taewan.kim/apex-workshop/",
	"title": "Oracle APEX Workshop",
	"tags": [],
	"description": "",
	"content": " Oracle APEX 튜토리얼 Oracle APEX는 오라클에서 제공하는 Low-Code 기술입니다. Oracle APEX은 엔터프라이즈 애플맄이션 개발\u0026amp;배포에 대한 뛰어난 개발 생산성과 편의성을 제공합니다. Oracle APEX를 이용하여 현대적인 반응형 웹 및 모바일 애플리케이션을 개발할 수 있습니다.\nOracle APEX는 SQL및 PL/SQL 기술을 중심으로 웹 애플리케이션을 개발하는 기술입니다. 개발자가 웹 애플리케이션을 개발할 때 직면하는 HTLM, CSS, JavaScript 부담을 최소화하고, 개발 코드의 대부분은 데이터를 핸들링하는 SQL과 PL/SQL에 집중됩니다.\nOracle APEX는 브라우저 기반의 완전 관리형 개발 환경을 제공합니다. Oracle APEX 애플리케이션을 개발하기 위해서는 Oracle APEX 서비스를 제공하는 오라클 데이터베이스와 브라우저만 있으면 됩니다.\nOracle APEX를 사용하려면\u0026hellip; On-Premise에서 Oracle APEX를 사용하기 위해서는 자체적으로 관리하는 오라클 데이터베이스가 필요합니다.\n오라클 클라우드(OCI, Orace Cloud Infrastructure)에서 Oracle APEX를 사용하기 위해서는 다음과 같은 서비스가 필요합니다.\n OCI Autonomous Database (ATP, ADW) OCI Oracle Database 서비스(Autonomous DB, DBCS, ExaCS)가 필요합니다.  새로운 APEX 서비스는 오라클 클라우드 인프라스트럭처(Oracle Cloud Infrastructure, OCI)에서 제공됨에 따라, 브라우저 기반의 완전 관리형 서비스를 통해 직관적인 그래픽 인터페이스를 활용하는 현대적인 반응형 웹 및 모바일 애플리케이션 구축이 가능하다. 해당 서비스는 개발자들이 복잡한 풀스택(full-stack) 기술을 배우지 않고도 어떤 장비에서도 사용 가능한 엔터프라이즈 애플리케이션을 기존보다 38배 빠르게 구축함으로써 비즈니스 문제 해결에만 더욱 집중할 수 있도록 지원한다.\n전통적 방식의 복잡한 코딩 대신 쉽고 선언적인 방식의 개발에 관심이 있는 개발자라면 누구나 오라클 클라우드 무료 평가판(Oracle Cloud Free Tier)에 포함된 오라클 APEX 애플리케이션 개발 서비스를 활용해 로우코드 애플리케이션을 개발할 수 있다. 또한 이를 오라클 자율운영 데이터베이스와도 연동해 더욱 우수한 보안과 확장성, 가용성 및 성능에 대한 이점을 누리는 것도 가능하다.\n앤드류 멘델손(Andrew Mendelsohn) 오라클 데이터베이스 서버 기술 부문 수석 부사장은 “오라클은 오픈 소스 기여 및 개발자 이벤트, 교육 프로그램, 무료 실습형(hands-on) 랩 등 다양한 영역과 오라클 클라우드 무료 평가판을 통해 개발자 커뮤니티에 광범위하게 투자해오고 있다. 새로운 APEX 서비스 공개를 통해 오라클은 APEX 개발자 커뮤니티의 지속과 확장을 위한 의지를 공고히 했다”며 “오라클 APEX 서비스를 활용하면 일반 개발자와 비즈니스 분석가, 전문 개발자 모두 고도화된 응답형 데이터 기반 애플리케이션을 최소의 노력으로 신속하게 개발 및 구축할 수 있다. APEX가 대다수 데이터기반의 애플리케이션의 구축을 위해 활용될 수 있을 만큼 강력해짐에 따라, 전통적 코딩 방식을 통한 데이터 기반 애플리케이션 구축은 이제 예외적인 경우가 될 것이다”라고 이번 발표의 의미를 강조했다.\n"
},
{
	"uri": "http://taewan.kim/apex-workshop/00.index/",
	"title": "Oracle APEX Workshop",
	"tags": [],
	"description": "&#39;",
	"content": "Oracle APEX 워크샾 진행을 위한 부가 정보를 제공합니다.\n"
},
{
	"uri": "http://taewan.kim/apex-workshop/10.apex_workshops/10.expense_manager/m01-employees/",
	"title": "M01: Oracle APEX 소개",
	"tags": [],
	"description": "",
	"content": " Employee 폼 List of Value (Shard Component)  LOB TYPES  select lob_id as r, lob_name as d from LOB_TYPES   EMP TYPES (Shard Component)  select type_id as r, type_name ||' ('||type_full_name||')' as d from USER_TYPES   Teams  select team_full_name as d, team_id as r from TEAMS   Gender Types  남성: M 여성: F   List of Value (Local) select team_name ||' ('||team_full_name||')' as d, team_id as r from TEAMS where lob_type_id = :12_LOB  Form Component 이슈  이미지 크기  img { width: 200px; height: 200px; }  Input Validation  Email  ^[A-Za-z]+[A-Za-z0-9.]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$ # error message: Mail 포멧이 아닙니다. 메일 형식이어야 합니다.   핸드폰 번호  ^\\d{3}-\\d{3,4}-\\d{4}$ # error message: 핸드폰 전화번호 형식이 아닙니다. (예 010-1234-1234)   생년월일  sysdate \u0026gt; to_date(:P3_BIRTH_DAY, 'YYYY-MM-DD') # error message: 생일은 오늘 이전이어야 합니다.   id == email  :P12_EMPLOYEE_ID = :P12_EMAIL # error message: ID와 Email은 같아야 합니다.  11 Page 이슈  이미지 사이즈 조정  img { width: 100px; height: 100px; }  11 페이지 검색 - Report where 절 where InStr(':'||:P11_TYPES||':', ':'||TYPE_ID||':') \u0026gt; 0 and TYPE_ID IS NOT NULL and InStr(':'||:P11_GENDERS||':', ':'||GENDER||':') \u0026gt; 0 and GENDER IS NOT NULL  검색 조건 기본값 설정  Type  select type_id from USER_TYPES   Gender  M:F  "
},
{
	"uri": "http://taewan.kim/apex-workshop/10.apex_workshops/10.expense_manager/m02/",
	"title": "M02:직원 정보 관리",
	"tags": [],
	"description": "",
	"content": " APEX Workshop 101의 첫 번째 실습으로 직원 정보를 관리하는 페이지를 개발하는 과정을 소개합니다. 이번 실습에서는 다음 이미지와 같은 직원 정보 관리 페이지를 개발해 보겠습니다.\n모듈 구성 이번 모듈은 다음과 같은 항목을 다룹니다.\n APEX 로그인 및 계정 등록 직원 정보 관리 테이블 생성 직원 정보 관리 APEX Report 생성 Key 처리를 위한 UI 컴포넌트 구성 이미지 이슈 처리 입력 데이터 Validation 입력 폼 기본 값 처리 입력 폼 읽기 전용 설정 Server Side 설정 검색 기능  개발 화면 이번 모듈을 통해서 다음과 같은 페이지를 개발할 수 있습니다.\n 직원 정보 조회  직원 상세 정보 조회 및 정보 입력 폼   "
},
{
	"uri": "http://taewan.kim/apex-workshop/10.apex_workshops/10.expense_manager/m02/01-login-account/",
	"title": "01: APEX 로그인 및 계정 등록",
	"tags": [],
	"description": "",
	"content": "   주요 작업  APEX Workspace 접속 개발자 계정 생성  실습자 Email Trainer Email: apex.workshop.helper@gmail.com   "
},
{
	"uri": "http://taewan.kim/apex-workshop/10.apex_workshops/10.expense_manager/m02/02-table/",
	"title": "02: 직원 정보 관리 테이블 생성",
	"tags": [],
	"description": "",
	"content": "   리소스 파일 다운로드  Hands-on Lab 리소스 파일: https://taewanmerepo.github.io/2021/07/apex/apexws101-res.zip  "
},
{
	"uri": "http://taewan.kim/apex-workshop/10.apex_workshops/10.expense_manager/m02/03-apexreport/",
	"title": "03: 직원 정보 관리 APEX Report 생성",
	"tags": [],
	"description": "",
	"content": "   주요 작업 다음 Employees 테이블를 지정하여 APEX Report를 만듭니다.\n생성된 Employees 테이블의 APEX Report를 다음과 같이 수정하겠습니다.\n"
},
{
	"uri": "http://taewan.kim/apex-workshop/10.apex_workshops/10.expense_manager/m03-reports/",
	"title": "M03: Expense Report",
	"tags": [],
	"description": "",
	"content": " Expense 리포트 관리 Title Region  제목: Expense Report 관리 설명: 사용자별 Expense Report를 관리 검색하는 페이지입니다. ICON: fa-layout-grid-3x  Sequence 생성  EXPENSE_REPORT_SEQ   CREATE SEQUENCE \u0026quot;EXPENSE_REPORT_SEQ\u0026quot; MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 9 NOCACHE NOORDER NOCYCLE NOKEEP NOSCALE GLOBAL  report id 설정  Expense Report Form 설정 process  declare V_REPORT_ID number(9); begin select EXPENSE_REPORT_SEQ.nextval into V_REPORT_ID from dual; :P22_EXPENSE_REPORT_ID := V_REPORT_ID; end;  List of Value  추가 대상 영수증 목록(Local - Page:23)  select title||','||payment_amount||'('||use_date||')', expense_id from expenses where employee_id=lower(:APP_USER) and expense_id not in ( select i.expense_id from expense_reports r, expense_report_items i where r.EXPENSE_REPORT_ID = i.report_id and r.employee_id = lower(:APP_USER) ) order by use_date  Master Record 조회 조건 select \u0026quot;EXPENSE_REPORT_ID\u0026quot;, null link_class, apex_page.get_url(p_items =\u0026gt; 'P21_EXPENSE_REPORT_ID', p_values =\u0026gt; \u0026quot;EXPENSE_REPORT_ID\u0026quot;) link, null icon_class, null link_attr, null icon_color_class, case when nvl(:P21_EXPENSE_REPORT_ID,'0') = \u0026quot;EXPENSE_REPORT_ID\u0026quot; then 'is-active' else ' ' end list_class, substr(\u0026quot;REPORT_TITLE\u0026quot;, 1, 50)||( case when length(\u0026quot;REPORT_TITLE\u0026quot;) \u0026gt; 50 then '...' end ) list_title, substr(\u0026quot;CRE_DATE\u0026quot;, 1, 50)||( case when length(\u0026quot;CRE_DATE\u0026quot;) \u0026gt; 50 then '...' end ) list_text, null list_badge from \u0026quot;EXPENSE_REPORTS\u0026quot; x where (:P21_SEARCH is null or upper(x.\u0026quot;REPORT_TITLE\u0026quot;) like '%'||upper(:P21_SEARCH)||'%' or upper(x.\u0026quot;CRE_DATE\u0026quot;) like '%'||upper(:P21_SEARCH)||'%' ) and employee_id = lower(:APP_USER) order by \u0026quot;REPORT_TITLE\u0026quot;  복수 영수증 추가 report select apex_item.checkbox(1, EXPENSE_ID) selected, \u0026quot;EXPENSE_ID\u0026quot;,\u0026quot;EMPLOYEE_ID\u0026quot;,\u0026quot;TYPE_ID\u0026quot;,\u0026quot;PAYMENT_AMOUNT\u0026quot;,\u0026quot;TITLE\u0026quot;, \u0026quot;DESCRIPTION\u0026quot;,\u0026quot;RECEIPT_STATUS\u0026quot;,\u0026quot;CARD_TYPE\u0026quot;, \u0026quot;USE_DATE\u0026quot;,\u0026quot;CRE_DATE\u0026quot; from \u0026quot;EXPENSES\u0026quot; where USE_DATE \u0026gt;= to_date(:P35_EXPENSE_FROM, 'YYYY-MM-DD') and USE_DATE \u0026lt;= to_date(:P35_EXPENSE_TO, 'YYYY-MM-DD') and expense_id not in ( select i.expense_id from expense_reports r, expense_report_items i where r.EXPENSE_REPORT_ID = i.report_id and r.employee_id = lower(:APP_USER) ) order by USE_DATE  Update Expense Report create or replace PROCEDURE update_expense_report( p_report_id IN VARCHAR2 ) IS v_cc_num NUMBER(3); v_cc_amount NUMBER(9); v_pc_num NUMBER(3); v_pc_amount NUMBER(9); BEGIN select count(e.expense_id), nvl(sum(e.PAYMENT_AMOUNT),0) into v_cc_num, v_cc_amount from expenses e, expense_report_items i where e.EXPENSE_ID = i.expense_id and i.report_id = p_report_id and card_type = 'cc'; select count(e.expense_id), nvl(sum(e.PAYMENT_AMOUNT),0) into v_pc_num, v_pc_amount from expenses e, expense_report_items i where e.EXPENSE_ID = i.expense_id and i.report_id = p_report_id and card_type = 'pc'; UPDATE EXPENSE_REPORTS SET COMPANY_CARD_RECIEPT_NUM = v_cc_num, PRIVATE_CARD_RECIEPT_NUM = v_pc_num, COMPANY_CARD_AMOUNT = v_cc_amount, PRIVATE_CARD_AMOUNT = v_pc_amount WHERE EXPENSE_REPORT_ID = p_report_id; END;  "
},
{
	"uri": "http://taewan.kim/apex-workshop/10.apex_workshops/10.expense_manager/m02/04-valueoflist/",
	"title": "04: Key 처리를 위한 UI 컴포넌트 구성",
	"tags": [],
	"description": "",
	"content": "   Shared Component \u0026gt; List of Values 등록  LOB TYPES  select lob_id as r, lob_name as d from LOB_TYPES   EMP TYPES  select type_id as r, type_name ||' ('||type_full_name||')' as d from USER_TYPES   Teams  select team_full_name as d, team_id as r from TEAMS   Gender Types  남성: M 여성: F   List of Value (Local) select team_name ||' ('||team_full_name||')' as d, team_id as r from TEAMS where lob_type_id = :P12_LOB_ID  "
},
{
	"uri": "http://taewan.kim/apex-workshop/10.apex_workshops/10.expense_manager/m04-master-detail/",
	"title": "M04: Master-Detail 리포트",
	"tags": [],
	"description": "",
	"content": " Expense 리포트 관리 Title Region  제목: Expense Report 관리 설명: 사용자별 Expense Report를 관리 검색하는 페이지입니다. ICON: fa-layout-grid-3x  Sequence 생성  EXPENSE_REPORT_SEQ   CREATE SEQUENCE \u0026quot;EXPENSE_REPORT_SEQ\u0026quot; MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 9 NOCACHE NOORDER NOCYCLE NOKEEP NOSCALE GLOBAL  report id 설정  Expense Report Form 설정 process  declare V_REPORT_ID number(9); begin select EXPENSE_REPORT_SEQ.nextval into V_REPORT_ID from dual; :P22_EXPENSE_REPORT_ID := V_REPORT_ID; end;  List of Value  추가 대상 영수증 목록(Local - Page:23)  select title||','||payment_amount||'('||use_date||')', expense_id from expenses where employee_id=lower(:APP_USER) and expense_id not in ( select i.expense_id from expense_reports r, expense_report_items i where r.EXPENSE_REPORT_ID = i.report_id and r.employee_id = lower(:APP_USER) ) order by use_date  Master Record 조회 조건 select \u0026quot;EXPENSE_REPORT_ID\u0026quot;, null link_class, apex_page.get_url(p_items =\u0026gt; 'P21_EXPENSE_REPORT_ID', p_values =\u0026gt; \u0026quot;EXPENSE_REPORT_ID\u0026quot;) link, null icon_class, null link_attr, null icon_color_class, case when nvl(:P21_EXPENSE_REPORT_ID,'0') = \u0026quot;EXPENSE_REPORT_ID\u0026quot; then 'is-active' else ' ' end list_class, substr(\u0026quot;REPORT_TITLE\u0026quot;, 1, 50)||( case when length(\u0026quot;REPORT_TITLE\u0026quot;) \u0026gt; 50 then '...' end ) list_title, substr(\u0026quot;CRE_DATE\u0026quot;, 1, 50)||( case when length(\u0026quot;CRE_DATE\u0026quot;) \u0026gt; 50 then '...' end ) list_text, null list_badge from \u0026quot;EXPENSE_REPORTS\u0026quot; x where (:P21_SEARCH is null or upper(x.\u0026quot;REPORT_TITLE\u0026quot;) like '%'||upper(:P21_SEARCH)||'%' or upper(x.\u0026quot;CRE_DATE\u0026quot;) like '%'||upper(:P21_SEARCH)||'%' ) and employee_id = lower(:APP_USER) order by \u0026quot;REPORT_TITLE\u0026quot;  복수 영수증 추가 report select apex_item.checkbox(1, EXPENSE_ID) selected, \u0026quot;EXPENSE_ID\u0026quot;,\u0026quot;EMPLOYEE_ID\u0026quot;,\u0026quot;TYPE_ID\u0026quot;,\u0026quot;PAYMENT_AMOUNT\u0026quot;,\u0026quot;TITLE\u0026quot;, \u0026quot;DESCRIPTION\u0026quot;,\u0026quot;RECEIPT_STATUS\u0026quot;,\u0026quot;CARD_TYPE\u0026quot;, \u0026quot;USE_DATE\u0026quot;,\u0026quot;CRE_DATE\u0026quot; from \u0026quot;EXPENSES\u0026quot; where USE_DATE \u0026gt;= to_date(:P35_EXPENSE_FROM, 'YYYY-MM-DD') and USE_DATE \u0026lt;= to_date(:P35_EXPENSE_TO, 'YYYY-MM-DD') and expense_id not in ( select i.expense_id from expense_reports r, expense_report_items i where r.EXPENSE_REPORT_ID = i.report_id and r.employee_id = lower(:APP_USER) ) order by USE_DATE  Update Expense Report create or replace PROCEDURE update_expense_report( p_report_id IN VARCHAR2 ) IS v_cc_num NUMBER(3); v_cc_amount NUMBER(9); v_pc_num NUMBER(3); v_pc_amount NUMBER(9); BEGIN select count(e.expense_id), nvl(sum(e.PAYMENT_AMOUNT),0) into v_cc_num, v_cc_amount from expenses e, expense_report_items i where e.EXPENSE_ID = i.expense_id and i.report_id = p_report_id and card_type = 'cc'; select count(e.expense_id), nvl(sum(e.PAYMENT_AMOUNT),0) into v_pc_num, v_pc_amount from expenses e, expense_report_items i where e.EXPENSE_ID = i.expense_id and i.report_id = p_report_id and card_type = 'pc'; UPDATE EXPENSE_REPORTS SET COMPANY_CARD_RECIEPT_NUM = v_cc_num, PRIVATE_CARD_RECIEPT_NUM = v_pc_num, COMPANY_CARD_AMOUNT = v_cc_amount, PRIVATE_CARD_AMOUNT = v_pc_amount WHERE EXPENSE_REPORT_ID = p_report_id; END;  "
},
{
	"uri": "http://taewan.kim/apex-workshop/10.apex_workshops/10.expense_manager/m02/05-image_resize/",
	"title": "05: 이미지 처리 이슈",
	"tags": [],
	"description": "",
	"content": "   리소스 파일 다운로드  Hands-on Lab 리소스 파일: https://taewanmerepo.github.io/2021/07/apex/apexws101-res.zip  Form 이미지 처리  이미지 크기  img { width: 200px; height: 200px; }  Interfactive Report 이미지 처리  이미지 크기  img { width: 100px; height: 100px; }  "
},
{
	"uri": "http://taewan.kim/apex-workshop/10.apex_workshops/10.expense_manager/m02/06-inputvalidation/",
	"title": "06: 입력 데이터 Validation",
	"tags": [],
	"description": "",
	"content": "   Input Validation  Email  error message: Mail 포멧이 아닙니다. 메일 형식이어야 합니다.   ^[A-Za-z]+[A-Za-z0-9.]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$   핸드폰 번호  Error message: 핸드폰 전화번호 형식이 아닙니다. (예 010-1234-1234)   ^\\d{3}-\\d{3,4}-\\d{4}$   생년월일  Error message: 생일은 오늘 이전이어야 합니다.   sysdate \u0026gt; to_date(:P12_BIRTH_DAY, 'YYYY-MM-DD')   id == email  error message: ID와 Email은 같아야 합니다.   :P12_EMPLOYEE_ID = :P12_EMAIL  "
},
{
	"uri": "http://taewan.kim/apex-workshop/10.apex_workshops/10.expense_manager/m02/07-dault_value/",
	"title": "07: 입력 폼 기본 처리",
	"tags": [],
	"description": "",
	"content": "    Server Side Read only Default  "
},
{
	"uri": "http://taewan.kim/apex-workshop/10.apex_workshops/10.expense_manager/m02/08-search/",
	"title": "10: 검색 기능 &amp; Dynamic Action",
	"tags": [],
	"description": "",
	"content": " 검색 조건 where InStr(':'||:P11_TYPES||':', ':'||TYPE_ID||':') \u0026gt; 0 and TYPE_ID IS NOT NULL and InStr(':'||:P11_GENDERS||':', ':'||GENDER||':') \u0026gt; 0 and GENDER IS NOT NULL  Default Value  Types  select type_id from USER_TYPES   Gender  M:F  "
},
{
	"uri": "http://taewan.kim/apex-workshop/10.apex_workshops/10.expense_manager/",
	"title": "APEX Expense Manager",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://taewan.kim/apex-workshop/10.apex_workshops/",
	"title": "APEX Workshop",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://taewan.kim/apex-workshop/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://taewan.kim/apex-workshop/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]